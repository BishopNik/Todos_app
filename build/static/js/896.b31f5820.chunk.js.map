{"version":3,"file":"static/js/896.b31f5820.chunk.js","mappings":"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","sources":["components/Helpers/LoginSchema.js","components/LoginForm/LoginForm.Styled.js","components/LoginForm/LoginForm.jsx","components/Helpers/RegisterSchema.js","components/RegisterForm/RegisterForm.Styled.js","components/RegisterForm/RegisterForm.jsx","pages/AuthPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst LoginSchema = Yup.object().shape({\n\temail: Yup.string()\n\t  .email('Invalid email address')\n\t  .required('This is a required field'),\n\tpassword: Yup.string().required('This is a required field'),\n  });\n\n  export default LoginSchema;","/** @format */\n\nimport Icon from 'components/Icon/Icon.jsx';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  background: linear-gradient(\n    180deg,\n    rgba(196, 196, 196, 0) 25%,\n    #bedbb0 92.19%\n  );\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 20px 0 20px;\n  height: 100vh;\n  min-width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  @media (min-width: 375px) and (max-width: 767px) {\n    width: 375px;\n  }\n  @media (max-width: 1439px) {\n    max-width: 768px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 375px) {\n    width: 100%;\n    padding: 24px;\n  }\n  @media (min-width: 376px) and (max-width: 767px) {\n    width: 335px;\n    padding: 24px;\n  }\n  @media (min-width: 768px) {\n    width: 424px;\n    padding: 40px;\n  }\n  border-radius: 8px;\n  background: #151515;\n`;\n\nexport const NavBox = styled.div`\n  display: flex;\n  gap: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${({ end }) => (end ? '#FFFFFF' : '#FFFFFF4D')};\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  text-decoration: none;\n`;\n\nexport const LabelBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n  @media (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const ErrMessageStyled = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledFieldContainer = styled.div`\n  position: relative;\n`;\n\nexport const StyledField = styled(Field)`\n  color: #fff;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  padding: 14px 35px 14px 18px;\n  opacity: 0.4;\n  background: #1f1f1f;\n  width: 100%;\n\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n`;\n\nexport const IconHideShow = styled(Icon)`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  top: 50%;\n  right: 18px;\n  transform: translateY(-50%);\n  cursor: pointer;\n  stroke: #ffffff4d;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: #bedbb0;\n`;\n\nexport const ButtonText = styled.span`\n  color: #161616;\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n","/** @format */\n\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport LoginSchema from 'components/Helpers/LoginSchema';\nimport {\n  Button,\n  ButtonText,\n  Container,\n  ErrMessageStyled,\n  IconHideShow,\n  LabelBox,\n  Link,\n  NavBox,\n  StyledField,\n  StyledFieldContainer,\n  StyledForm,\n} from './LoginForm.Styled';\nimport { useState } from 'react';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleSubmit = (values, actions) => {\n    dispatch(logIn(values));\n    actions.resetForm({ email: '', password: '' });\n  };\n  return (\n    <Container>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={(values, actions) => {\n          handleSubmit(values, actions);\n        }}\n        validationSchema={LoginSchema}\n      >\n        <StyledForm autoComplete=\"off\">\n          <NavBox>\n            <Link to=\"/auth/register\">Registation</Link>\n            <Link to=\"/auth/login\" end>\n              Log In\n            </Link>\n          </NavBox>\n          <LabelBox>\n            <label>\n              <StyledField name=\"email\" type=\"email\" placeholder=\"Email\" />\n              <ErrMessageStyled name=\"email\" component=\"span\" />\n            </label>\n            <label>\n              <StyledFieldContainer>\n                <StyledField\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Create a password\"\n                />\n                <IconHideShow\n                  name=\"hide-show\"\n                  onClick={togglePasswordVisibility}\n                >\n                  {showPassword ? 'Hide' : 'Show'}\n                </IconHideShow>\n              </StyledFieldContainer>\n\n              <ErrMessageStyled name=\"password\" component=\"span\" />\n            </label>\n          </LabelBox>\n\n          <Button type=\"submit\">\n            <ButtonText>Log In Now</ButtonText>\n          </Button>\n        </StyledForm>\n      </Formik>\n    </Container>\n  );\n};\n\nexport default LoginForm;\n","import * as Yup from 'yup';\n\nconst RegisterSchema = Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .min(2, 'Too Short!')\n      .matches(\n        /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .required('This is a required field'),\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('This is a required field'),\n    password: Yup.string()\n      .matches(\n        /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/,\n        'Please create a stronger password. It must contain one uppercase and one lowercase letter'\n      )\n      .required('This is a required field'),\n  });\n\n  export default RegisterSchema;","/** @format */\n\nimport styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/Icon/Icon.jsx';\n\nexport const Container = styled.div`\n  background: linear-gradient(\n    180deg,\n    rgba(196, 196, 196, 0) 25%,\n    #bedbb0 92.19%\n  );\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 20px 0 20px;\n  height: 100vh;\n  min-width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  @media (min-width: 375px) and (max-width: 767px) {\n    width: 375px;\n  }\n  @media (max-width: 1439px) {\n    max-width: 768px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 375px) {\n    width: 100%;\n    padding: 24px;\n  }\n  @media (min-width: 376px) and (max-width: 767px) {\n    width: 335px;\n    padding: 24px;\n  }\n  @media (min-width: 768px) {\n    width: 424px;\n    padding: 40px;\n  }\n  border-radius: 8px;\n  background: #151515;\n`;\n\nexport const NavBox = styled.div`\n  display: flex;\n  gap: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${({ end }) => (end ? '#FFFFFF' : '#FFFFFF4D')};\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  text-decoration: none;\n`;\n\nexport const LabelBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n  @media (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const ErrMessageStyled = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledFieldContainer = styled.div`\n  position: relative;\n`;\n\nexport const StyledField = styled(Field)`\n  color: #fff;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  padding: 14px 0px 14px 18px;\n  opacity: 0.4;\n  background: #1f1f1f;\n  width: 100%;\n\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n`;\n\nexport const IconHideShow = styled(Icon)`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  top: 50%;\n  right: 18px;\n  transform: translateY(-50%);\n  cursor: pointer;\n  stroke: #ffffff4d;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: #bedbb0;\n`;\n\nexport const ButtonText = styled.span`\n  color: #161616;\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n","/** @format */\n\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport { register } from '../../redux/auth/operations';\nimport RegisterSchema from 'components/Helpers/RegisterSchema';\nimport React, { useState } from 'react';\n\nimport {\n\tButton,\n\tButtonText,\n\tContainer,\n\tErrMessageStyled,\n\tLabelBox,\n\tLink,\n\tNavBox,\n\tStyledField,\n\tStyledForm,\n\tIconHideShow,\n\tStyledFieldContainer,\n} from './RegisterForm.Styled'; // Assuming IconHideShow is defined in RegisterForm.Styled\n\nconst RegisterForm = () => {\n\tconst dispatch = useDispatch();\n\tconst [showPassword, setShowPassword] = useState(false);\n\n\tconst togglePasswordVisibility = () => {\n\t\tsetShowPassword(!showPassword);\n\t};\n\n\tconst handleSubmit = (values, actions) => {\n\t\tdispatch(register(values));\n\t\tactions.resetForm({ name: '', email: '', password: '' });\n\t};\n\n\treturn (\n\t\t<Container>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ name: '', email: '', password: '' }}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\thandleSubmit(values, actions);\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={RegisterSchema}\n\t\t\t>\n\t\t\t\t{({ isSubmitting }) => (\n\t\t\t\t\t<StyledForm autoComplete='off'>\n\t\t\t\t\t\t<NavBox>\n\t\t\t\t\t\t\t<Link to='/auth/register' end>\n\t\t\t\t\t\t\t\tRegistration\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link to='/auth/login'>Log In</Link>\n\t\t\t\t\t\t</NavBox>\n\n\t\t\t\t\t\t<LabelBox>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<StyledField\n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter your name'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ErrMessageStyled name='name' component='span' />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<StyledField\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter your email'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ErrMessageStyled name='email' component='span' />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t<StyledFieldContainer>\n\t\t\t\t\t\t\t\t\t<StyledField\n\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\ttype={showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\t\t\tplaceholder='Create a password'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<IconHideShow\n\t\t\t\t\t\t\t\t\t\tname='hide-show'\n\t\t\t\t\t\t\t\t\t\tonClick={togglePasswordVisibility}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{showPassword ? 'Hide' : 'Show'}\n\t\t\t\t\t\t\t\t\t</IconHideShow>\n\t\t\t\t\t\t\t\t</StyledFieldContainer>\n\n\t\t\t\t\t\t\t\t<ErrMessageStyled name='password' component='span' />\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</LabelBox>\n\n\t\t\t\t\t\t<Button type='submit' disabled={isSubmitting}>\n\t\t\t\t\t\t\t<ButtonText>Register Now</ButtonText>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</StyledForm>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</Container>\n\t);\n};\n\nexport default RegisterForm;\n","/** @format */\n\nimport LoginForm from 'components/LoginForm';\nimport RegisterForm from 'components/RegisterForm';\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nfunction AuthPage() {\n\tconst navigate = useNavigate();\n\tconst { page } = useParams(null);\n\n\tuseEffect(() => {\n\t\tif (page !== 'login' && page !== 'register') navigate('/');\n\t}, [navigate, page]);\n\n\treturn <>{page === 'register' ? <RegisterForm /> : <LoginForm />}</>;\n}\n\nexport default AuthPage;\n"],"names":["Yup","shape","email","required","password","Container","styled","div","_templateObject","_taggedTemplateLiteral","StyledForm","Form","_templateObject2","NavBox","_templateObject3","Link","NavLink","_templateObject4","_ref","end","LabelBox","_templateObject5","ErrMessageStyled","ErrorMessage","_templateObject6","StyledFieldContainer","_templateObject7","StyledField","Field","_templateObject8","IconHideShow","Icon","_templateObject9","Button","button","_templateObject10","ButtonText","span","_templateObject11","LoginForm","dispatch","useDispatch","showPassword","setShowPassword","useState","_jsx","children","Formik","initialValues","onSubmit","values","actions","handleSubmit","logIn","resetForm","validationSchema","LoginSchema","_jsxs","autoComplete","to","name","type","placeholder","component","onClick","togglePasswordVisibility","trim","min","matches","RegisterForm","register","RegisterSchema","isSubmitting","disabled","navigate","useNavigate","page","useParams","useEffect","_Fragment"],"sourceRoot":""}
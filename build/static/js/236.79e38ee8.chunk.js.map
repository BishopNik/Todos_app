{"version":3,"file":"static/js/236.79e38ee8.chunk.js","mappings":"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","sources":["components/Auth/LoginForm/LoginForm.styled.js","components/Auth/Google/ButtonGoogle.styled.js","components/Auth/Google/ButtonGoogle.jsx","components/Auth/LoginForm/LoginForm.jsx","components/Auth/RegisterForm/RegisterForm.styled.js","components/Auth/RegisterForm/RegisterForm.jsx","pages/AuthPage.jsx"],"sourcesContent":["/** @format */\n\nimport Icon from 'components/Icon';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n\tbackground: linear-gradient(180deg, rgba(196, 196, 196, 0) 25%, #bedbb0 92.19%);\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 0 20px 0 20px;\n\theight: 100vh;\n\tmin-width: 320px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\twidth: 100vw;\n`;\n\nexport const StyledForm = styled(Form)`\n\tdisplay: flex;\n\tflex-direction: column;\n\toutline: none;\n\t@media (max-width: 375px) {\n\t\twidth: 100%;\n\t\tpadding: 24px;\n\t}\n\t@media (min-width: 376px) and (max-width: 767px) {\n\t\twidth: 335px;\n\t\tpadding: 24px;\n\t}\n\t@media (min-width: 768px) {\n\t\twidth: 424px;\n\t\tpadding: 40px;\n\t}\n\tborder-radius: 8px;\n\tbackground: #151515;\n`;\n\nexport const NavBox = styled.div`\n\tdisplay: flex;\n\tgap: 14px;\n\tmargin-bottom: 40px;\n`;\n\nexport const Link = styled(NavLink)`\n\tcolor: ${({ end }) => (end ? '#FFFFFF' : '#FFFFFF4D')};\n\ttext-align: center;\n\tfont-family: Poppins;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 500;\n\tline-height: normal;\n\tletter-spacing: -0.28px;\n\ttext-decoration: none;\n`;\n\nexport const LabelBox = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 14px;\n\tmargin-bottom: 24px;\n\t@media (min-width: 768px) {\n\t\tgap: 24px;\n\t}\n`;\n\nexport const StyledFieldContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const StyledField = styled(Field)`\n\tcolor: #fff;\n\toutline: none;\n\tborder-radius: 8px;\n\tborder: 1px solid #bedbb0;\n\tpadding: 14px 35px 14px 18px;\n\topacity: 0.4;\n\tbackground: #1f1f1f;\n\twidth: 100%;\n\n\tbox-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n`;\n\nexport const IconHideShow = styled(Icon)`\n\twidth: 18px;\n\theight: 18px;\n\tposition: absolute;\n\ttop: 50%;\n\tright: 18px;\n\ttransform: translateY(-50%);\n\tcursor: pointer;\n\tstroke: #ffffff4d;\n`;\n\nexport const Button = styled.button`\n\tdisplay: flex;\n\twidth: 100%;\n\toutline: none;\n\tborder: none;\n\tpadding: 14px;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 8px;\n\tbackground: ${props => props.theme.sidebar.addButtonBackground};\n\tmargin-bottom: 15px;\n\tcursor: pointer;\n\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover,\n\t&:focus {\n\t\tbackground-color: ${props => props.theme.sidebar.addButtonHover};\n\t}\n`;\n\nexport const ButtonText = styled.a`\n\tcolor: #161616;\n\ttext-align: center;\n\tfont-family: Poppins;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 500;\n\tline-height: normal;\n\tletter-spacing: -0.28px;\n\ttext-decoration: none;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n\tposition: absolute;\n\tleft: 50%;\n\topacity: 0.8;\n\tborder: 1px solid gray;\n\tborder-radius: 10px;\n\tpadding: 10px;\n\tbackground-color: white;\n\tcolor: black;\n\tfont-size: 10px;\n\tfont-weight: normal;\n\tletter-spacing: 0.04em;\n\tline-height: 1.45;\n`;\n\nexport const FieldContainer = styled.label`\n\tposition: relative;\n`;\n","/** @format */\n\nimport Icon from 'components/Icon';\nimport styled from 'styled-components';\n\nexport const ButtonGoogle = styled.button`\n\tdisplay: flex;\n\twidth: 100%;\n\toutline: none;\n\tpadding: 0px;\n\tborder: none;\n\tjustify-content: start;\n\talign-items: center;\n\tborder-radius: 8px;\n\tbackground: ${props => props.theme.sidebar.addButtonBackground};\n\toverflow: hidden;\n\tgap: 70px;\n\tcursor: pointer;\n\ttransition: background 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover,\n\t&:focus {\n\t\tbackground: ${props => props.theme.sidebar.addButtonHover};\n\t}\n`;\n\nexport const IconContainer = styled.div`\n\tbackground-color: white;\n\twidth: 49px;\n\toutline: none;\n\theight: 49px;\n\tborder: none;\n\tdisplay: flex;\n\tposition: relative;\n`;\n\nexport const GoogleIcon = styled(Icon)`\n\twidth: 30px;\n\theight: 30px;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n`;\n\nexport const ButtonText = styled.a`\n\tcolor: #161616;\n\ttext-align: center;\n\tfont-family: Poppins;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 500;\n\tline-height: normal;\n\tletter-spacing: -0.28px;\n\ttext-decoration: none;\n`;\n","/** @format */\n\nimport React from 'react';\nimport { ButtonGoogle, GoogleIcon, IconContainer, ButtonText } from './ButtonGoogle.styled';\n\nconst host = process.env.REACT_APP_BASE_BACKEND_URL;\n\nfunction Button_Google() {\n\treturn (\n\t\t<ButtonGoogle type='submit'>\n\t\t\t<IconContainer>\n\t\t\t\t<GoogleIcon name='Google__G__logo' />\n\t\t\t</IconContainer>\n\t\t\t<ButtonText href={`${host}/api/auth/google`}>Log In with Google</ButtonText>\n\t\t</ButtonGoogle>\n\t);\n}\n\nexport default Button_Google;\n","/** @format */\n\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { LoginSchema } from 'components/Helpers/ModalSchemas';\nimport {\n\tButton,\n\tButtonText,\n\tContainer,\n\tErrorMsg,\n\tIconHideShow,\n\tLabelBox,\n\tLink,\n\tNavBox,\n\tStyledField,\n\tStyledFieldContainer,\n\tStyledForm,\n\tFieldContainer,\n} from './LoginForm.styled';\nimport { useState } from 'react';\nimport { useAuth } from 'hooks';\nimport Loader from 'components/Loader';\nimport ButtonGoogle from '../Google';\n\nconst LoginForm = () => {\n\tconst dispatch = useDispatch();\n\tconst [showPassword, setShowPassword] = useState(false);\n\tconst { isLoading } = useAuth();\n\n\tconst togglePasswordVisibility = () => {\n\t\tsetShowPassword(!showPassword);\n\t};\n\tconst handleSubmit = (values, actions) => {\n\t\tdispatch(logIn(values));\n\t\tactions.resetForm({ email: '', password: '' });\n\t};\n\treturn isLoading ? (\n\t\t<Loader />\n\t) : (\n\t\t<Container>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ email: '', password: '' }}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\thandleSubmit(values, actions);\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={LoginSchema}\n\t\t\t>\n\t\t\t\t<StyledForm autoComplete='off'>\n\t\t\t\t\t<NavBox>\n\t\t\t\t\t\t<Link to='/auth/register'>Registation</Link>\n\t\t\t\t\t\t<Link to='/auth/login' end>\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</NavBox>\n\t\t\t\t\t<LabelBox>\n\t\t\t\t\t\t<FieldContainer>\n\t\t\t\t\t\t\t<StyledField name='email' type='email' placeholder='Email' />\n\t\t\t\t\t\t\t<ErrorMsg name='email' component='span' />\n\t\t\t\t\t\t</FieldContainer>\n\t\t\t\t\t\t<FieldContainer>\n\t\t\t\t\t\t\t<StyledFieldContainer>\n\t\t\t\t\t\t\t\t<StyledField\n\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\ttype={showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\t\tplaceholder='Enter a password'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<IconHideShow name='hide-show' onClick={togglePasswordVisibility}>\n\t\t\t\t\t\t\t\t\t{showPassword ? 'Hide' : 'Show'}\n\t\t\t\t\t\t\t\t</IconHideShow>\n\t\t\t\t\t\t\t</StyledFieldContainer>\n\n\t\t\t\t\t\t\t<ErrorMsg name='password' component='span' />\n\t\t\t\t\t\t</FieldContainer>\n\t\t\t\t\t</LabelBox>\n\n\t\t\t\t\t<Button type='submit'>\n\t\t\t\t\t\t<ButtonText>Log In Now</ButtonText>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<ButtonGoogle />\n\t\t\t\t</StyledForm>\n\t\t\t</Formik>\n\t\t</Container>\n\t);\n};\n\nexport default LoginForm;\n","/** @format */\n\nimport styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/Icon';\n\nexport const Container = styled.div`\n\tbackground: linear-gradient(180deg, rgba(196, 196, 196, 0) 25%, #bedbb0 92.19%);\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 0 20px 0 20px;\n\theight: 100vh;\n\tmin-width: 320px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\twidth: 100vw;\n`;\n\nexport const StyledForm = styled(Form)`\n\tdisplay: flex;\n\tflex-direction: column;\n\t@media (max-width: 375px) {\n\t\twidth: 100%;\n\t\tpadding: 24px;\n\t}\n\t@media (min-width: 376px) and (max-width: 767px) {\n\t\twidth: 335px;\n\t\tpadding: 24px;\n\t}\n\t@media (min-width: 768px) {\n\t\twidth: 424px;\n\t\tpadding: 40px;\n\t}\n\tborder-radius: 8px;\n\tbackground: #151515;\n`;\n\nexport const NavBox = styled.div`\n\tdisplay: flex;\n\tgap: 14px;\n\tmargin-bottom: 40px;\n`;\n\nexport const Link = styled(NavLink)`\n\tcolor: ${({ end }) => (end ? '#FFFFFF' : '#FFFFFF4D')};\n\ttext-align: center;\n\tfont-family: Poppins;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 500;\n\tline-height: normal;\n\tletter-spacing: -0.28px;\n\ttext-decoration: none;\n`;\n\nexport const LabelBox = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 14px;\n\tmargin-bottom: 24px;\n\t@media (min-width: 768px) {\n\t\tgap: 24px;\n\t}\n`;\n\nexport const StyledFieldContainer = styled.div`\n\tposition: relative;\n`;\n\nexport const StyledField = styled(Field)`\n\tcolor: #fff;\n\tborder-radius: 8px;\n\tborder: 1px solid #bedbb0;\n\tpadding: 14px 0px 14px 18px;\n\topacity: 0.4;\n\tbackground: #1f1f1f;\n\twidth: 100%;\n\n\tbox-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n`;\n\nexport const IconHideShow = styled(Icon)`\n\twidth: 18px;\n\theight: 18px;\n\tposition: absolute;\n\ttop: 50%;\n\tright: 18px;\n\ttransform: translateY(-50%);\n\tcursor: pointer;\n\tstroke: #ffffff4d;\n`;\n\nexport const Button = styled.button`\n\tdisplay: flex;\n\twidth: 100%;\n\tmargin-bottom: 15px;\n\tpadding: 14px;\n\toutline: none;\n\tborder: none;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 8px;\n\tbackground: ${props => props.theme.sidebar.addButtonBackground};\n\tcursor: pointer;\n\ttransition: background 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover,\n\t&:focus {\n\t\tbackground: ${props => props.theme.sidebar.addButtonHover};\n\t}\n`;\n\nexport const ButtonText = styled.span`\n\tcolor: #161616;\n\n\ttext-align: center;\n\tfont-family: Poppins;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 500;\n\tline-height: normal;\n\tletter-spacing: -0.28px;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n\tposition: absolute;\n\tleft: 40%;\n\topacity: 0.8;\n\tborder: 1px solid gray;\n\tborder-radius: 10px;\n\tpadding: 10px;\n\tbackground-color: white;\n\tcolor: black;\n\tfont-size: 10px;\n\tfont-weight: normal;\n\tletter-spacing: 0.04em;\n\tline-height: 1.45;\n`;\n\nexport const FieldContainer = styled.label`\n\tposition: relative;\n`;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { RegisterSchema } from 'components/Helpers/ModalSchemas';\nimport { useAuth } from 'hooks';\nimport Loader from 'components/Loader';\nimport ButtonGoogle from '../Google';\nimport {\n\tButton,\n\tButtonText,\n\tContainer,\n\tErrorMsg,\n\tLabelBox,\n\tLink,\n\tNavBox,\n\tStyledField,\n\tStyledForm,\n\tIconHideShow,\n\tStyledFieldContainer,\n\tFieldContainer,\n} from './RegisterForm.styled';\n\nconst RegisterForm = () => {\n\tconst dispatch = useDispatch();\n\tconst [showPassword, setShowPassword] = useState(false);\n\tconst { isLoading } = useAuth();\n\n\tconst togglePasswordVisibility = () => {\n\t\tsetShowPassword(!showPassword);\n\t};\n\n\tconst handleSubmit = (values, actions) => {\n\t\tdispatch(register(values));\n\t\tactions.resetForm({ name: '', email: '', password: '' });\n\t};\n\n\treturn isLoading ? (\n\t\t<Loader />\n\t) : (\n\t\t<Container>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ name: '', email: '', password: '' }}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\thandleSubmit(values, actions);\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={RegisterSchema}\n\t\t\t>\n\t\t\t\t{({ isSubmitting }) => (\n\t\t\t\t\t<StyledForm autoComplete='off'>\n\t\t\t\t\t\t<NavBox>\n\t\t\t\t\t\t\t<Link to='/auth/register' end>\n\t\t\t\t\t\t\t\tRegistration\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t<Link to='/auth/login'>Log In</Link>\n\t\t\t\t\t\t</NavBox>\n\n\t\t\t\t\t\t<LabelBox>\n\t\t\t\t\t\t\t<FieldContainer>\n\t\t\t\t\t\t\t\t<StyledField\n\t\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter your name'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ErrorMsg name='name' component='span' />\n\t\t\t\t\t\t\t</FieldContainer>\n\t\t\t\t\t\t\t<FieldContainer>\n\t\t\t\t\t\t\t\t<StyledField\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tplaceholder='Enter your email'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ErrorMsg name='email' component='span' />\n\t\t\t\t\t\t\t</FieldContainer>\n\t\t\t\t\t\t\t<FieldContainer>\n\t\t\t\t\t\t\t\t<StyledFieldContainer>\n\t\t\t\t\t\t\t\t\t<StyledField\n\t\t\t\t\t\t\t\t\t\tname='password'\n\t\t\t\t\t\t\t\t\t\ttype={showPassword ? 'text' : 'password'}\n\t\t\t\t\t\t\t\t\t\tplaceholder='Create a password'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<IconHideShow\n\t\t\t\t\t\t\t\t\t\tname='hide-show'\n\t\t\t\t\t\t\t\t\t\tonClick={togglePasswordVisibility}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{showPassword ? 'Hide' : 'Show'}\n\t\t\t\t\t\t\t\t\t</IconHideShow>\n\t\t\t\t\t\t\t\t</StyledFieldContainer>\n\n\t\t\t\t\t\t\t\t<ErrorMsg name='password' component='span' />\n\t\t\t\t\t\t\t</FieldContainer>\n\t\t\t\t\t\t</LabelBox>\n\n\t\t\t\t\t\t<Button type='submit' disabled={isSubmitting}>\n\t\t\t\t\t\t\t<ButtonText>Register Now</ButtonText>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<ButtonGoogle />\n\t\t\t\t\t</StyledForm>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</Container>\n\t);\n};\n\nexport default RegisterForm;\n","/** @format */\n\nimport LoginForm from 'components/Auth/LoginForm';\nimport RegisterForm from 'components/Auth/RegisterForm';\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nfunction AuthPage() {\n\tconst navigate = useNavigate();\n\tconst { page } = useParams(null);\n\n\tuseEffect(() => {\n\t\tif (page !== 'login' && page !== 'register') navigate('/');\n\t}, [navigate, page]);\n\n\treturn <>{page === 'register' ? <RegisterForm /> : <LoginForm />}</>;\n}\n\nexport default AuthPage;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","StyledForm","Form","_templateObject2","NavBox","_templateObject3","Link","NavLink","_templateObject4","_ref","end","LabelBox","_templateObject5","StyledFieldContainer","_templateObject6","StyledField","Field","_templateObject7","IconHideShow","Icon","_templateObject8","Button","button","_templateObject9","props","theme","sidebar","addButtonBackground","addButtonHover","ButtonText","a","_templateObject10","ErrorMsg","ErrorMessage","_templateObject11","FieldContainer","label","_templateObject12","ButtonGoogle","IconContainer","GoogleIcon","_jsxs","type","children","_jsx","name","href","concat","process","LoginForm","dispatch","useDispatch","showPassword","setShowPassword","useState","isLoading","useAuth","Loader","Formik","initialValues","email","password","onSubmit","values","actions","handleSubmit","logIn","resetForm","validationSchema","LoginSchema","autoComplete","to","placeholder","component","onClick","togglePasswordVisibility","span","RegisterForm","register","RegisterSchema","isSubmitting","disabled","navigate","useNavigate","page","useParams","useEffect","_Fragment"],"sourceRoot":""}
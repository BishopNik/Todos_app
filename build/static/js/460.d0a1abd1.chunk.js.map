{"version":3,"file":"static/js/460.d0a1abd1.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.js","components/MainComponent/MainComponent.jsx","components/Column/Column.styled.js","components/Tooltip/Tooltip.styled.js","components/Tooltip/Tooltip.jsx","components/Card/Card.styled.js","components/Card/Card.jsx","components/Column/Column.jsx","components/ScreenPage/Columns/Columns.styled.js","components/ScreenPage/Columns/Columns.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","components/ScreenPage/MainDashboard/MainDashboard.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React, { useContext} from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { MainContext } from 'components/Helpers';\n\n\nexport function MainComponent({ children }) {\n\tconst { setIsOpenAddBoard } = useContext(MainContext);\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetIsOpenAddBoard(true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","/** @format */\n\nimport styled from 'styled-components';\nimport Icon from 'components/Icon/Icon.jsx';\n\nexport const Wrapper = styled.li`\n\twidth: 347px;\n\tmax-width: 100vw;\n\tdisplay: grid;\n\tgap: 14px;\n\tgrid-template-columns: 1fr;\n\tgrid-template-areas:\n\t\t'title'\n\t\t'task'\n\t\t'add';\n\tgrid-template-rows: 56px auto 56px;\n\toverflow: hidden;\n\n\t@media screen and (min-width: 768px) {\n\t\twidth: 350px;\n\t}\n`;\n\nexport const Title = styled.span`\n\tcolor: ${props => props.theme.colum.textMain};\n\tfont-size: 18px;\n\tborder-radius: 8px;\n\tpadding: 14px 24px;\n\tbackground-color: ${props => props.theme.profile.background};\n\tcolor: ${props => props.theme.help.modalTextMain};\n\tfont-size: 14px;\n\tfont-weight: 500;\n\tdisplay: flex;\n\theight: 58px;\n\talign-items: center;\n\tjustify-content: space-between;\n\tcursor: default;\n`;\n\nexport const List = styled.div`\n\tgrid-area: title;\n\twidth: 334px;\n\tmax-width: 98vw;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n\tpadding: 0;\n\tgap: 8px;\n\toverflow-y: auto;\n`;\n\nexport const ListTasksContainer = styled.div`\n\tgrid-area: task;\n\twidth: 100%;\n\toverflow-y: auto;\n\toverflow-x: hidden;\n\n\t&::-webkit-scrollbar {\n\t\twidth: 8px;\n\t\tbackground: rgba(255, 255, 255, 0.1);\n\t\tborder-radius: 4px;\n\t}\n\n\t&::-webkit-scrollbar-thumb {\n\t\theight: 142px;\n\t\tbackground-color: rgba(18, 18, 18, 1);\n\t\tborder-radius: 4px;\n\t\tbox-shadow: inset 1px 1px 10px rgba(0, 0, 0, 0.25);\n\t}\n\n\t&::-webkit-scrollbar-thumb:hover {\n\t\tbackground-color: ${props => props.theme.sidebar.addButtonBackground};\n\t}\n`;\n\nexport const ListTasks = styled.ul`\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n\tpadding: 0;\n\tlist-style: none;\n`;\n\nexport const IconsContainer = styled.div`\n\tgrid-area: add;\n\tdisplay: flex;\n\tgap: 8px;\n\tmargin-left: auto;\n`;\n\nexport const EditColumn = styled(Icon)`\n\tstroke: ${props => props.theme.colum.icon};\n\tcursor: pointer;\n\ttransition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover,\n\t&:focus {\n\t\tstroke: ${props => props.theme.colum.buttonBackground};\n\t}\n`;\n\nexport const DelColumn = styled(Icon)`\n\tstroke: ${props => props.theme.colum.icon};\n\tcursor: pointer;\n\ttransition: stroke 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover,\n\t&:focus {\n\t\tstroke: ${props => props.theme.colum.buttonBackground};\n\t}\n`;\n\nexport const battonStyle = {\n\twidth: '334px',\n\tmaxWidth: '98vw',\n};\n","/** @format */\n\nimport styled from 'styled-components';\nimport Icon from 'components/Icon';\n\nexport const TooltipContent = styled.div`\n\toutline: none;\n\tbackground: ${props => props.theme.popup.background};\n\tmin-width: 135px;\n\theight: auto;\n\tmargin: 0 auto;\n\tpadding: 15px;\n`;\n\nexport const TooltipButton = styled.button`\n\tfont-size: 12px;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\twidth: 100%;\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tstroke: ${props => props.theme.popup.textSecondary};\n\tborder: none;\n\tcursor: pointer;\n\n\t&:hover,\n\t&:focus {\n\t\tcolor: ${props => props.theme.popup.textAccent};\n\t\tstroke: ${props => props.theme.popup.textAccent};\n\t}\n`;\n\nexport const IconProcess = styled(Icon)`\n\twidth: 16px;\n\theight: 16px;\n\tstroke: inherit;\n\tcursor: pointer;\n\n\t&:hover,\n\t&:focus {\n\t\tstroke: inherit;\n\t}\n`;\n","/** @format */\n\nimport React, { useEffect, useState } from 'react';\nimport ModalWindow, { customStyles } from '../Modal';\nimport { TooltipButton, TooltipContent, IconProcess } from './Tooltip.styled';\nimport { useCards, useColumns } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { updateCard } from 'redux/cards/operations';\nimport { toastSuccess, toastError } from 'components/Helpers';\n\nconst Tooltip = ({ isOpen, onRequestClose, card, position }) => {\n\tconst dispatch = useDispatch();\n\tconst { allColumns } = useColumns();\n\tconst { allCards } = useCards();\n\tconst [style, setStyle] = useState(customStyles);\n\tconst { _id: id, columnId: oldColumnId, name } = card;\n\n\tconst handleClick = columnId => {\n\t\ttry {\n\t\t\tconst indexCard = allCards[columnId].length;\n\t\t\tdispatch(updateCard({ id, columnId, name, indexCard, oldColumnId }));\n\t\t\tonRequestClose();\n\t\t\ttoastSuccess('Card has removed');\n\t\t} catch (error) {\n\t\t\ttoastError(error);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetStyle(prevStyle => {\n\t\t\treturn {\n\t\t\t\t...prevStyle,\n\t\t\t\tcontent: {\n\t\t\t\t\t...prevStyle.content,\n\t\t\t\t\ttop: `${position?.top + 20}px`,\n\t\t\t\t\tleft: `${position?.left + 10}px`,\n\t\t\t\t\ttransform: 'translate(0, 0)',\n\t\t\t\t},\n\t\t\t};\n\t\t});\n\t}, [position]);\n\n\treturn (\n\t\t<ModalWindow isOpen={isOpen} onRequestClose={onRequestClose} style={style}>\n\t\t\t<TooltipContent>\n\t\t\t\t{allColumns?.map(col => (\n\t\t\t\t\t<React.Fragment key={col._id}>\n\t\t\t\t\t\t{oldColumnId !== col._id && (\n\t\t\t\t\t\t\t<TooltipButton onClick={() => handleClick(col._id)}>\n\t\t\t\t\t\t\t\t{col.name}\n\t\t\t\t\t\t\t\t<IconProcess name='process-task' />\n\t\t\t\t\t\t\t</TooltipButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t))}\n\t\t\t</TooltipContent>\n\t\t</ModalWindow>\n\t);\n};\n\nexport default Tooltip;\n","/** @format */\n\nimport styled from 'styled-components';\nimport Icon from '../Icon';\n\nexport const CardContainer = styled.li`\n\twidth: 334px;\n\tmax-width: 95vw;\n\theight: 154px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tbackground-color: ${props => props.theme.profile.background};\n\tborder-radius: 7px;\n\toverflow: hidden;\n\toutline: ${props =>\n\t\tprops.drag === 'true' ? `1px solid ${props.theme.colum.buttonBackground}` : null};\n\n\t&:not(:last-child) {\n\t\tmargin-bottom: 8px;\n\t}\n`;\n\nexport const PriorityLine = styled.div`\n\twidth: 4px;\n`;\n\nexport const CardContent = styled.ul`\n\twidth: 330px;\n\tpadding: 14px 20px 14px 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tlist-style: none;\n`;\n\nexport const TextContent = styled.li``;\n\nexport const Title = styled.h4`\n\tfont-size: 14px;\n\tfont-weight: bold;\n\tletter-spacing: -0.02em;\n\tcolor: ${props => props.theme.help.modalTextMain};\n\tmargin: 0;\n`;\n\nexport const DescriptionText = styled.p`\n\tmargin: 0;\n\tfont-size: 12px;\n\tfont-weight: normal;\n\tletter-spacing: -0.02em;\n\tline-height: 1.45;\n\tcolor: ${props => props.theme.colum.textSecondary};\n\tmargin-top: 8px;\n\twidth: 290px;\n\theight: 38px;\n\tdisplay: -webkit-box;\n\t-webkit-box-orient: vertical;\n\t-webkit-line-clamp: 2;\n\twidth: 100%;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tcursor: inherit;\n`;\n\nexport const Info = styled.li`\n\tdisplay: flex;\n\tflex-direction: row;\n\tborder-top: solid 1px ${props => props.theme.colum.borderColor};\n\theight: 45px;\n\talign-items: flex-end;\n`;\n\nexport const Priority = styled.div`\n\theight: 31px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tgap: 4px;\n`;\n\nexport const InfoTitle = styled.p`\n\tfont-size: 8px;\n\tmargin: 0;\n\tfont-weight: normal;\n\tletter-spacing: -0.02em;\n\tcursor: default;\n\tcolor: ${props => props.theme.colum.icon};\n`;\n\nexport const PriorityLevel = styled.p`\n\tposition: relative;\n\tfont-size: 10px;\n\tmargin: 0;\n\tfont-weight: normal;\n\tletter-spacing: -0.02em;\n\tcolor: ${props => props.theme.colum.textMain};\n\tpadding-left: 16px;\n\tcursor: default;\n\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tleft: 0;\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t\twidth: 12px;\n\t\theight: 12px;\n\t\tborder-radius: 50%;\n\t\tbackground-color: ${props => props.color};\n\t}\n`;\n\nexport const Dedline = styled.div`\n\theight: 31px;\n\tmargin-left: 14px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-between;\n\tgap: 4px;\n`;\n\nexport const Date = styled.p`\n\tfont-size: 10px;\n\tmargin: 0;\n\tfont-weight: normal;\n\tletter-spacing: -0.02em;\n\tcursor: default;\n\tcolor: ${props => props.theme.colum.textMain};\n`;\n\nexport const BellIcon = styled(Icon)`\n\twidth: 16px;\n\theight: 16px;\n\tmargin-left: auto;\n\tstroke: ${props => (props.active ? props.theme.colum.buttonBackground : 'transparent')};\n\tcursor: pointer;\n`;\n\nexport const IconContainer = styled.ul`\n\tdisplay: flex;\n\tgap: 8px;\n\tmargin-left: 13px;\n\tlist-style: none;\n\tpadding: 0;\n\n\t&:hover,\n\t&:focus {\n\t\tstroke: ${props => props.theme.colum.buttonBackground};\n\t}\n`;\n\nexport const MoveIcon = styled(Icon)`\n\twidth: 16px;\n\theight: 16px;\n\tstroke: ${props => props.theme.colum.icon};\n\tcursor: pointer;\n\n\t&:hover,\n\t&:focus {\n\t\tstroke: ${props => props.theme.colum.buttonBackground};\n\t}\n`;\n\nexport const EditIcon = styled(Icon)`\n\twidth: 16px;\n\theight: 16px;\n\tstroke: ${props => props.theme.colum.icon};\n\tcursor: pointer;\n\n\t&:hover,\n\t&:focus {\n\t\tstroke: ${props => props.theme.colum.buttonBackground};\n\t}\n`;\n\nexport const DelIcon = styled(Icon)`\n\twidth: 16px;\n\theight: 16px;\n\tstroke: ${props => props.theme.colum.icon};\n\tcursor: pointer;\n\n\t&:hover,\n\t&:focus {\n\t\tstroke: ${props => props.theme.colum.buttonBackground};\n\t}\n`;\n\nexport const ButtonBox = styled.li`\n\twidth: 16px;\n\theight: 16px;\n`;\n\nexport const Button = styled.button`\n\tbackground-color: transparent;\n\tborder: none;\n\tmargin: 0;\n\tpadding: 0;\n\twidth: 100%;\n\theight: 100%;\n`;\n","/** @format */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { GetColor, getElementScreenCoordinates } from 'components/Helpers';\nimport Tooltip from 'components/Tooltip';\nimport { StyleSheetManager } from 'styled-components';\nimport {\n\tCardContainer,\n\tPriorityLine,\n\tCardContent,\n\tTextContent,\n\tTitle,\n\tDescriptionText,\n\tInfo,\n\tPriority,\n\tPriorityLevel,\n\tDedline,\n\tInfoTitle,\n\tDate,\n\tIconContainer,\n\tBellIcon,\n\tMoveIcon,\n\tEditIcon,\n\tDelIcon,\n\tButtonBox,\n\tButton,\n} from './Card.styled';\nimport { useColumns } from 'hooks';\nimport { removeCardInBase } from 'redux/cards/operations';\nimport { resetError } from 'redux/cards/cardsSlice';\n\nexport const Card = ({ item, deleteCard, editCard, refCard, drag, ...dragHandleProps }) => {\n\tconst dispatch = useDispatch();\n\tconst { name, priority, deadline, text } = item;\n\tconst [isTooltipOpen, setIsTooltipOpen] = useState(false);\n\tconst [position, setPosition] = useState(null);\n\tconst { allColumns } = useColumns();\n\tconst elementRef = useRef(null);\n\tconst [idx] = useState(item.indexCard);\n\n\tconst closeTooltip = () => {\n\t\tsetIsTooltipOpen(false);\n\t};\n\n\tconst deadLineString = deadline => {\n\t\tif (!deadline || typeof deadline !== 'number') return '--/--/--';\n\t\tconst date = moment(deadline);\n\t\treturn date.format('DD/MM/YYYY');\n\t};\n\n\tconst active = time => {\n\t\tif (!deadline) return 0;\n\t\treturn moment(time).date();\n\t};\n\n\tconst priorityLevel = GetColor(priority);\n\n\tuseEffect(() => {\n\t\tif (idx === item.indexCard) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch(\n\t\t\tremoveCardInBase({\n\t\t\t\tid: item._id,\n\t\t\t\tcolumnId: item.columnId,\n\t\t\t\tname: item.name,\n\t\t\t\tindexCard: item.indexCard,\n\t\t\t\toldColumnId: item.columnId,\n\t\t\t})\n\t\t).then(() => dispatch(resetError()));\n\t}, [dispatch, idx, item._id, item.columnId, item.indexCard, item.name]);\n\n\treturn (\n\t\t<CardContainer ref={refCard} drag={drag} {...dragHandleProps}>\n\t\t\t<StyleSheetManager shouldForwardProp={prop => prop !== 'active' && prop !== 'color'}>\n\t\t\t\t<PriorityLine style={{ backgroundColor: priorityLevel.color }} />\n\t\t\t\t<CardContent>\n\t\t\t\t\t<TextContent>\n\t\t\t\t\t\t<Title>{name}</Title>\n\t\t\t\t\t\t<DescriptionText>{text}</DescriptionText>\n\t\t\t\t\t</TextContent>\n\t\t\t\t\t<Info>\n\t\t\t\t\t\t<Priority>\n\t\t\t\t\t\t\t<InfoTitle>Priority</InfoTitle>\n\t\t\t\t\t\t\t<PriorityLevel color={priorityLevel.color}>\n\t\t\t\t\t\t\t\t{priorityLevel.name}\n\t\t\t\t\t\t\t</PriorityLevel>\n\t\t\t\t\t\t</Priority>\n\t\t\t\t\t\t<Dedline>\n\t\t\t\t\t\t\t<InfoTitle>Deadline</InfoTitle>\n\t\t\t\t\t\t\t<Date>{deadLineString(deadline)}</Date>\n\t\t\t\t\t\t</Dedline>\n\t\t\t\t\t\t<BellIcon\n\t\t\t\t\t\t\tname='bell'\n\t\t\t\t\t\t\tactive={active(deadline) <= active(moment()) && deadline}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconContainer>\n\t\t\t\t\t\t\t<ButtonBox>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tref={elementRef}\n\t\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetPosition(getElementScreenCoordinates(elementRef));\n\t\t\t\t\t\t\t\t\t\tif (allColumns.length > 1) setIsTooltipOpen(true);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<MoveIcon name='process-task' />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonBox>\n\t\t\t\t\t\t\t<ButtonBox>\n\t\t\t\t\t\t\t\t<Button type='button' onClick={editCard}>\n\t\t\t\t\t\t\t\t\t<EditIcon name='edit' />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonBox>\n\t\t\t\t\t\t\t<ButtonBox>\n\t\t\t\t\t\t\t\t<Button type='button' onClick={deleteCard}>\n\t\t\t\t\t\t\t\t\t<DelIcon name='delete' />\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</ButtonBox>\n\t\t\t\t\t\t</IconContainer>\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tisOpen={isTooltipOpen}\n\t\t\t\t\t\t\tonRequestClose={closeTooltip}\n\t\t\t\t\t\t\tcard={item}\n\t\t\t\t\t\t\tposition={position}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Info>\n\t\t\t\t</CardContent>\n\t\t\t</StyleSheetManager>\n\t\t</CardContainer>\n\t);\n};\n","/** @format */\n\nimport React, { useContext, useEffect, useMemo } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport {\n\tWrapper,\n\tTitle,\n\tIconsContainer,\n\tEditColumn,\n\tDelColumn,\n\tList,\n\tListTasks,\n\tListTasksContainer,\n} from './Column.styled';\nimport { useDispatch } from 'react-redux';\nimport { fetchCardsByColumnId } from 'redux/cards/operations';\nimport { updateStateAfterDeleteColumn } from 'redux/cards/cardsSlice';\nimport {\n\tButton,\n\tButtonText,\n\tIconWrapper,\n\tAddIcon,\n} from 'components/Modal/CreateNewBoardModal/CreateNewBoardModal.styled';\nimport { AddCardModal } from 'components/Modal';\nimport { Card } from 'components/Card/Card';\nimport { delColumn } from 'redux/columns/operations';\nimport { MainContext } from 'components/Helpers';\nimport { useCards, useCardEditing, useColumns } from 'hooks';\n\nexport const Column = ({ columnData, refColumn, providedPlaceholder }) => {\n\tconst { name, _id } = columnData;\n\tconst { isOpen, setIsOpen, cardForEditing, editCard, onRequestClose, deleteCard } =\n\t\tuseCardEditing();\n\tconst { allCards } = useCards();\n\tconst { statusColumn } = useColumns();\n\tconst dispatch = useDispatch();\n\tconst { filter, setIsOpenAddColumn, setColumnEdit } = useContext(MainContext);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchCardsByColumnId(_id));\n\t}, [dispatch, _id]);\n\n\tconst handleDeleteColumn = columnId => {\n\t\tif (statusColumn) return;\n\t\tdispatch(delColumn(columnId)).then(() => {\n\t\t\tdispatch(updateStateAfterDeleteColumn({ id: columnId }));\n\t\t});\n\t};\n\n\tconst handleEditColumn = () => {\n\t\tif (statusColumn) return;\n\t\tsetIsOpenAddColumn(true);\n\t\tsetColumnEdit(columnData);\n\t};\n\n\tconst memoizedCards = useMemo(() => {\n\t\tif (_id && allCards[_id]?.length) {\n\t\t\tconst cardForColumn = allCards[_id]?.filter(card => {\n\t\t\t\tif (filter === 'all') {\n\t\t\t\t\treturn card.columnId === _id;\n\t\t\t\t} else {\n\t\t\t\t\treturn card.columnId === _id && card.priority === filter;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn cardForColumn.map((card, ind) => ({ ...card, indexCard: ind }));\n\t\t}\n\t\treturn [];\n\t}, [_id, allCards, filter]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<List>\n\t\t\t\t<Title>\n\t\t\t\t\t{name}\n\t\t\t\t\t<IconsContainer>\n\t\t\t\t\t\t<EditColumn\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\twidth='16'\n\t\t\t\t\t\t\theight='16'\n\t\t\t\t\t\t\tname='edit'\n\t\t\t\t\t\t\tonClick={handleEditColumn}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<DelColumn\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\twidth='16'\n\t\t\t\t\t\t\theight='16'\n\t\t\t\t\t\t\tonClick={() => handleDeleteColumn(_id)}\n\t\t\t\t\t\t\tname='delete'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</IconsContainer>\n\t\t\t\t</Title>\n\t\t\t</List>\n\t\t\t<ListTasksContainer ref={refColumn}>\n\t\t\t\t<ListTasks>\n\t\t\t\t\t{memoizedCards?.map((item, index) => (\n\t\t\t\t\t\t<Draggable key={item._id} draggableId={item._id} index={index}>\n\t\t\t\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\trefCard={provided.innerRef}\n\t\t\t\t\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\t\t\t\t\tdrag={snapshot.isDragging.toString()}\n\t\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\t\tdeleteCard={() => deleteCard({ id: item?._id, _id })}\n\t\t\t\t\t\t\t\t\teditCard={() => editCard(item)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Draggable>\n\t\t\t\t\t))}\n\t\t\t\t\t{providedPlaceholder}\n\t\t\t\t</ListTasks>\n\t\t\t</ListTasksContainer>\n\t\t\t<Button\n\t\t\t\tstyle={{ width: '334px', maxWidth: '95vw' }}\n\t\t\t\ttype='button'\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t>\n\t\t\t\t<IconWrapper>\n\t\t\t\t\t<AddIcon name='add-board' />\n\t\t\t\t</IconWrapper>\n\t\t\t\t<ButtonText>{!memoizedCards?.length ? 'Add card' : 'Add another card'}</ButtonText>\n\t\t\t</Button>\n\t\t\t<AddCardModal\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tonRequestClose={onRequestClose}\n\t\t\t\tcolumnId={_id}\n\t\t\t\tcardForEditing={cardForEditing}\n\t\t\t/>\n\t\t</Wrapper>\n\t);\n};\n","/** @format */\n\nimport styled from '@emotion/styled';\n\nexport const Styled = styled.ul`\n\tdisplay: flex;\n\tgap: 20px;\n\tmargin: 0;\n\tpadding: 0;\n`;\n\nexport const List = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n\tpadding: 0;\n\tgap: 8px;\n\theight: calc(100vh - 318px);\n\toverflow-y: auto;\n`;\n","/** @format */\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { fetchColumnsByIdBoards } from 'redux/columns/operations';\nimport { Column } from 'components/Column';\nimport { Styled } from './Columns.styled';\nimport { useBoards, useCards, useColumns } from 'hooks';\nimport { removeCard } from 'redux/cards/cardsSlice';\nimport { removeCardInBase } from 'redux/cards/operations';\nimport { toastError, toastSuccess } from 'components/Helpers';\n\nexport const Columns = ({ board, children }) => {\n\tconst dispatch = useDispatch();\n\tconst { allColumns } = useColumns();\n\tconst { allCards } = useCards();\n\tconst { statusLoading } = useBoards();\n\n\tuseEffect(() => {\n\t\tif (!statusLoading) dispatch(fetchColumnsByIdBoards(board));\n\t}, [dispatch, board, statusLoading]);\n\n\tconst onDragEnd = async e => {\n\t\tconst {\n\t\t\tdraggableId: id,\n\t\t\tsource: { droppableId: oldColumnId, index },\n\t\t\tdestination,\n\t\t} = e;\n\n\t\tconst columnId = destination ? destination.droppableId : null;\n\t\tconst indexCard = destination?.index;\n\n\t\tif (!columnId) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (oldColumnId === columnId && destination.index === index) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst { name } = allCards[oldColumnId].filter(card => card._id === id)[0];\n\t\t\tdispatch(removeCard({ oldColumnId, columnId, id, indexCard }));\n\t\t\tdispatch(removeCardInBase({ id, columnId, name, indexCard, oldColumnId }));\n\t\t\ttoastSuccess('The card has been moved');\n\t\t} catch (_) {\n\t\t\ttoastError('Error moving card');\n\t\t}\n\t};\n\n\treturn (\n\t\t<Styled>\n\t\t\t<DragDropContext onDragEnd={onDragEnd}>\n\t\t\t\t{allColumns.length > 0 &&\n\t\t\t\t\tallColumns.map(item => (\n\t\t\t\t\t\t<Droppable key={item._id} droppableId={`${item._id}`}>\n\t\t\t\t\t\t\t{provided => (\n\t\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\t\tcolumnData={item}\n\t\t\t\t\t\t\t\t\tprovidedPlaceholder={provided.placeholder}\n\t\t\t\t\t\t\t\t\trefColumn={provided.innerRef}\n\t\t\t\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Droppable>\n\t\t\t\t\t))}\n\t\t\t\t{children}\n\t\t\t</DragDropContext>\n\t\t</Styled>\n\t);\n};\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const HeaderDashboardContainer = styled.div`\n  padding: 0px 24px;\n  font-weight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  padding: 0;\n  margin: 0;\n  color: ${props => props.theme.help.modalTextMain};\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  text-align: left;\n  cursor: default;\n`;\n","/** @format */\n\nimport { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n\treturn (\n\t\t<HeaderDashboardContainer>\n\t\t\t<Title>{title}</Title>\n\t\t</HeaderDashboardContainer>\n\t);\n};\n","/** @format */\n\nimport styled from 'styled-components';\nimport Icon from 'components/Icon';\n\nexport const WrapperBoardContainer = styled.div`\n\tpadding-left: 20px;\n\tpadding-right: 8px;\n\tdisplay: flex;\n\tflex-grow: 1;\n\toverflow-y: hidden;\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding: 0px 24px;\n\t}\n`;\n\nexport const BoardContainer = styled.div`\n\tdisplay: flex;\n\tflex-grow: 1;\n\toverflow-x: auto;\n\tdisplay: flex;\n\tgap: 20px;\n\tpadding-bottom: 36px;\n\n\t&::-webkit-scrollbar {\n\t\theight: 12px;\n\t\tbackground: rgba(18, 18, 18, 1);\n\t\tborder-radius: 6px;\n\t}\n\t&::-webkit-scrollbar-thumb {\n\t\theight: 100%;\n\t\tbackground-color: rgba(255, 255, 255, 0.1);\n\t\tborder-radius: 6px;\n\t\tbox-shadow: inset 1px 1px 10px rgba(0, 0, 0, 0.25);\n\t}\n\t&::-webkit-scrollbar-thumb:hover {\n\t\tbackground-color: ${props => props.theme.sidebar.addButtonBackground};\n\t}\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding-bottom: 64px;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tpadding-bottom: 28px;\n\t}\n`;\n\nexport const BtnAddColumn = styled.button`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 15px 58px;\n\tfont-size: 14px;\n\tfont-weight: 500;\n\tborder-radius: 8px;\n\twidth: 334px;\n\toutline: none;\n\tcolor: ${props => props.theme.help.modalTextMain};\n\tbackground-color: ${props => props.theme.profile.background};\n\n\tborder: none;\n\tcursor: pointer;\n\theight: 56px;\n`;\n\nexport const StyledIconAdd = styled.span`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 28px;\n\theight: 28px;\n\tmargin-right: 8px;\n\tbackground-color: ${props => props.theme.addcolum.plusBackground};\n\tborder-radius: 6px;\n\ttransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n\t&:hover,\n\t&:focus {\n\t\tbackground-color: ${props => props.theme.sidebar.addButtonHover};\n\t}\n`;\n\nexport const SvagAddColumn = styled(Icon)`\n\tstroke: ${props => props.theme.addcolum.plusColor};\n\twidth: 14px;\n\theight: 14px;\n`;\n","/** @format */\n\nimport React, { useContext } from 'react';\nimport { StyleSheetManager } from 'styled-components';\nimport {\n\tBoardContainer,\n\tBtnAddColumn,\n\tSvagAddColumn,\n\tStyledIconAdd,\n\tWrapperBoardContainer,\n} from './MainDashboard.styled';\nimport { AddColumnModal } from 'components/Modal';\nimport { Columns } from 'components/ScreenPage';\nimport { useParams } from 'react-router-dom';\nimport { MainContext } from 'components/Helpers';\nimport { useColumns, useBoards } from 'hooks';\n\nexport const MainDashboard = () => {\n\tconst { setIsOpenAddColumn } = useContext(MainContext);\n\tconst { board } = useParams();\n\tconst { allColumns } = useColumns();\n\tconst { allBoards } = useBoards();\n\tconst selectedBoard = allBoards.find(item => item._id === board);\n\n\treturn (\n\t\t<StyleSheetManager shouldForwardProp={prop => prop !== 'backgroundId'}>\n\t\t\t<WrapperBoardContainer>\n\t\t\t\t<BoardContainer backgroundId={selectedBoard?.background}>\n\t\t\t\t\t<Columns board={board}>\n\t\t\t\t\t\t<BtnAddColumn type='button' onClick={() => setIsOpenAddColumn(true)}>\n\t\t\t\t\t\t\t<StyledIconAdd>\n\t\t\t\t\t\t\t\t<SvagAddColumn name='plus' />\n\t\t\t\t\t\t\t</StyledIconAdd>\n\t\t\t\t\t\t\t<span>Add {allColumns.length ? 'another' : null} column</span>\n\t\t\t\t\t\t</BtnAddColumn>\n\t\t\t\t\t</Columns>\n\t\t\t\t\t<AddColumnModal board={board} />\n\t\t\t\t</BoardContainer>\n\t\t\t</WrapperBoardContainer>\n\t\t</StyleSheetManager>\n\t);\n};\n","/** @format */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { MainComponent } from 'components/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport { HeaderDashboard, MainDashboard } from 'components/ScreenPage';\nimport { SayNameBoard } from 'components/Helpers';\nimport { fetchAllBoards } from 'redux/boards/operations';\nimport { useBoards } from 'hooks';\nimport { MainContext } from 'components/Helpers';\nimport { setActiveBoard } from 'redux/boards/boardsSlice';\n\nfunction MainTodosPage() {\n\tconst dispatch = useDispatch();\n\tconst { board } = useParams();\n\tconst navigate = useNavigate();\n\tconst nameBoard = SayNameBoard(board);\n\tconst { allBoards, activeBoard } = useBoards();\n\tconst [firstRun, setFirstRun] = useState(true);\n\tconst { deleted, setDeleted } = useContext(MainContext);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchAllBoards());\n\t}, [dispatch]);\n\n\tuseEffect(() => {\n\t\tif (firstRun && allBoards.length > 0) {\n\t\t\tif (!activeBoard) {\n\t\t\t\tnavigate(`/todos/${allBoards[0]?._id}`);\n\t\t\t} else {\n\t\t\t\tnavigate(`/todos/${activeBoard}`);\n\t\t\t}\n\t\t\tsetFirstRun(false);\n\t\t}\n\t}, [firstRun, allBoards, navigate, activeBoard]);\n\n\tuseEffect(() => {\n\t\tif (allBoards.length === 0) {\n\t\t\tnavigate('/todos');\n\t\t\tif (!firstRun) dispatch(setActiveBoard(null));\n\t\t}\n\t}, [allBoards, dispatch, firstRun, navigate]);\n\n\tuseEffect(() => {\n\t\tif (!deleted) return;\n\t\tif (!allBoards[0]?._id) {\n\t\t\tnavigate(`/todos`);\n\t\t} else {\n\t\t\tnavigate(`/todos/${allBoards[0]._id}`);\n\t\t}\n\t\tsetDeleted(false);\n\t}, [allBoards, board, deleted, navigate, setDeleted]);\n\n\treturn (\n\t\t<>\n\t\t\t<FilterBtn />\n\t\t\t{nameBoard && <HeaderDashboard title={nameBoard} />}\n\t\t\t<MainComponent>{board && <MainDashboard />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","MainComponent","_ref","children","setIsOpenAddBoard","useContext","MainContext","_jsx","_Fragment","_jsxs","onClick","Wrapper","li","Title","colum","textMain","profile","background","help","modalTextMain","List","div","_templateObject3","ListTasksContainer","_templateObject4","sidebar","addButtonBackground","ListTasks","ul","_templateObject5","IconsContainer","_templateObject6","EditColumn","Icon","_templateObject7","icon","buttonBackground","DelColumn","_templateObject8","TooltipContent","TooltipButton","button","IconProcess","isOpen","onRequestClose","card","position","dispatch","useDispatch","allColumns","useColumns","allCards","useCards","style","setStyle","useState","customStyles","_id","id","columnId","oldColumnId","name","useEffect","prevStyle","content","top","concat","left","transform","ModalWindow","map","col","React","indexCard","length","updateCard","toastSuccess","error","toastError","handleClick","CardContainer","drag","PriorityLine","CardContent","TextContent","h4","DescriptionText","Info","borderColor","Priority","InfoTitle","_templateObject9","PriorityLevel","_templateObject10","color","Dedline","_templateObject11","Date","_templateObject12","BellIcon","_templateObject13","active","IconContainer","_templateObject14","MoveIcon","_templateObject15","EditIcon","_templateObject16","DelIcon","_templateObject17","ButtonBox","_templateObject18","Button","_templateObject19","Card","item","deleteCard","editCard","refCard","dragHandleProps","priority","deadline","text","isTooltipOpen","setIsTooltipOpen","setPosition","elementRef","useRef","idx","time","moment","date","priorityLevel","GetColor","removeCardInBase","then","resetError","ref","StyleSheetManager","shouldForwardProp","prop","backgroundColor","format","deadLineString","type","getElementScreenCoordinates","Tooltip","closeTooltip","Column","columnData","refColumn","providedPlaceholder","setIsOpen","cardForEditing","useCardEditing","statusColumn","filter","setIsOpenAddColumn","setColumnEdit","fetchCardsByColumnId","memoizedCards","useMemo","_allCards$_id","_allCards$_id2","ind","width","height","handleEditColumn","handleDeleteColumn","delColumn","updateStateAfterDeleteColumn","index","Draggable","draggableId","provided","snapshot","innerRef","draggableProps","isDragging","toString","maxWidth","IconWrapper","AddIcon","ButtonText","AddCardModal","Styled","Columns","board","statusLoading","useBoards","fetchColumnsByIdBoards","DragDropContext","onDragEnd","async","source","droppableId","destination","e","removeCard","_","Droppable","placeholder","droppableProps","HeaderDashboardContainer","h3","HeaderDashboard","title","WrapperBoardContainer","BoardContainer","BtnAddColumn","StyledIconAdd","addcolum","plusBackground","addButtonHover","SvagAddColumn","plusColor","MainDashboard","useParams","allBoards","selectedBoard","find","backgroundId","AddColumnModal","navigate","useNavigate","nameBoard","SayNameBoard","activeBoard","firstRun","setFirstRun","deleted","setDeleted","fetchAllBoards","_allBoards$","setActiveBoard","_allBoards$2","FilterBtn"],"sourceRoot":""}
{"version":3,"file":"static/js/192.cc6ac05f.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Filter/FilterBtn.jsx","components/Modal/FilterModal/FilterModal.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/ScreenPage.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React from 'react';\n\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\n\nfunction MainComponent({ children }) {\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard onClick={() => alert('Create board')}>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default MainComponent;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const RadioButton = styled.label`\n\tdisplay: flex;\n\tmargin-right: 10px;\n`;\n\nexport const RadioButtonGroup = styled.div`\n\tmargin-top: 20px;\n`;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { RadioButton, RadioButtonGroup } from './Filter.styled.jsx';\n\nexport const Filter = ({ setIsModalOpen }) => {\n\tconst [selectedOption, setSelectedOption] = useState('Without priority');\n\n\tconst handleOptionChange = e => {\n\t\tsetSelectedOption(e.target.value);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Filters</h1>\n\t\t\t<button type='button' onClick={() => setIsModalOpen(false)}>\n\t\t\t\tX\n\t\t\t</button>\n\t\t\t<h2>Label color</h2>\n\t\t\t<RadioButtonGroup>\n\t\t\t\t<RadioButton>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\tvalue='Without priority'\n\t\t\t\t\t\tchecked={selectedOption === 'Without priority'}\n\t\t\t\t\t\tonChange={handleOptionChange}\n\t\t\t\t\t/>\n\t\t\t\t\tWithout priority\n\t\t\t\t</RadioButton>\n\t\t\t\t<RadioButton>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\tvalue='Low'\n\t\t\t\t\t\tchecked={selectedOption === 'Low'}\n\t\t\t\t\t\tonChange={handleOptionChange}\n\t\t\t\t\t/>\n\t\t\t\t\tLow\n\t\t\t\t</RadioButton>\n\t\t\t\t<RadioButton>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\tvalue='Medium'\n\t\t\t\t\t\tchecked={selectedOption === 'Medium'}\n\t\t\t\t\t\tonChange={handleOptionChange}\n\t\t\t\t\t/>\n\t\t\t\t\tMedium\n\t\t\t\t</RadioButton>\n\t\t\t\t<RadioButton>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\tvalue='High'\n\t\t\t\t\t\tchecked={selectedOption === 'High'}\n\t\t\t\t\t\tonChange={handleOptionChange}\n\t\t\t\t\t/>\n\t\t\t\t\tHigh\n\t\t\t\t</RadioButton>\n\t\t\t</RadioButtonGroup>\n\t\t</>\n\t);\n};\n","/** @format */\n\nimport { ButtonFilter, FiltersIcon, TextButton } from './FiltersBtn.styled.jsx';\n\nexport const FilterBtn = ({ onClick }) => {\n\treturn (\n\t\t<ButtonFilter type='button' onClick={onClick}>\n\t\t\t<FiltersIcon name='filters' />\n\t\t\t<TextButton>Filters</TextButton>\n\t\t</ButtonFilter>\n\t);\n};\n","/** @format */\n\nimport React from 'react';\n\nimport ModalWindow from '../Modal';\nimport { customStyles } from '../Modal.styled';\nimport { Filter } from 'components/Filter';\n\nexport const FilterModal = ({ isModalOpen, setIsOpen }) => {\n\treturn (\n\t\t<ModalWindow isOpen={isModalOpen} onRequestClose={setIsOpen} style={customStyles}>\n\t\t\t<Filter setIsModalOpen={setIsOpen} />\n\t\t</ModalWindow>\n\t);\n};\n","import styled from '@emotion/styled';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 14px 20px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  padding: 0px 24px;\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 14px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: #ffffff;\n  background-color: #121212;\n  border: none;\n  cursor: pointer;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: #ffffff;\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: #121212;\n`;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { BoardContainer, BtnAddColumn, SvagAddColumn, StyledIconAdd } from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nimport { AddColumnModal } from 'components/Modal';\n\nconst MainDashboard = () => {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\n\tconst handleOpenModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<BoardContainer>\n\t\t\t<BtnAddColumn type='button' onClick={handleOpenModal}>\n\t\t\t\t<StyledIconAdd>\n\t\t\t\t\t<SvagAddColumn width='14' height='14'>\n\t\t\t\t\t\t<use xlinkHref={`${icon}#icon-plus`} />\n\t\t\t\t\t</SvagAddColumn>\n\t\t\t\t</StyledIconAdd>\n\t\t\t\t<span>Add another column</span>\n\t\t\t</BtnAddColumn>\n\t\t\t<AddColumnModal isOpen={isModalOpen} setIsOpen={setIsModalOpen} />{' '}\n\t\t</BoardContainer>\n\t);\n};\n\nexport default MainDashboard;\n","/** @format */\n\nimport { useParams } from 'react-router-dom';\nimport { HeaderDashboard } from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\n\nconst ScreenPage = () => {\n\tconst { board } = useParams();\n\n\treturn (\n\t\t<>\n\t\t\t<HeaderDashboard title={board} />\n\t\t\t<MainDashboard />\n\t\t</>\n\t);\n};\nexport default ScreenPage;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MainComponent from 'components/MainComponent/MainComponent';\nimport { FilterModal, FilterBtn } from 'components/Filter';\nimport ScreenPage from 'components/ScreenPage/ScreenPage';\n\nfunction MainTodosPage() {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst { board } = useParams();\n\n\tconst openModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<FilterBtn onClick={openModal} />\n\t\t\t<FilterModal isModalOpen={isModalOpen} setIsOpen={setIsModalOpen} />\n\t\t\t<MainComponent>{board && <ScreenPage />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","_ref","children","_jsx","_Fragment","_jsxs","onClick","alert","RadioButton","label","RadioButtonGroup","div","Filter","setIsModalOpen","selectedOption","setSelectedOption","useState","handleOptionChange","e","target","value","type","checked","onChange","FilterBtn","ButtonFilter","FiltersIcon","name","TextButton","FilterModal","isModalOpen","setIsOpen","ModalWindow","isOpen","onRequestClose","style","customStyles","HeaderDashboardContainer","Title","h3","HeaderDashboard","title","BoardContainer","BtnAddColumn","button","StyledIconAdd","_templateObject3","SvagAddColumn","svg","_templateObject4","MainDashboard","handleOpenModal","width","height","xlinkHref","concat","icon","AddColumnModal","ScreenPage","board","useParams","openModal","MainComponent"],"sourceRoot":""}
{"version":3,"file":"static/js/624.f3736ab9.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","redux/columns/selectors.js","components/ScreenPage/Columns.jsx","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React, { useContext } from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { MainContext } from 'components/Helpers';\n\n// import { useDispatch } from 'react-redux';\n// import { boardsSlice } from 'redux/boards/boardsSlice';\n\nexport function MainComponent({ children }) {\n\t// const dispatch = useDispatch();\n\tconst { setIsOpenAddBoard } = useContext(MainContext);\n\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetIsOpenAddBoard(true);\n\t\t\t\t\t\t\t// dispatch(\n\t\t\t\t\t\t\t// \tboardsSlice.actions.openCreateEditBoardModal({ isOpen: true })\n\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  padding: 0px 24px;\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 14px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: #ffffff;\n  background-color: #121212;\n  border: none;\n  cursor: pointer;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: #ffffff;\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: #121212;\n`;\n","export const columnsState = state => state.columns.items;\n\nexport const columnsLoading = state => state.columns.isLoading;\n\nexport const columnsError = state => state.columns.error;","/** @format */\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchColumnsByIdBoards } from 'redux/columns/operations';\nimport { columnsState } from 'redux/columns/selectors';\n\nexport const Columns = ({ board }) => {\n\tconst dispatch = useDispatch();\n\n\tconst allColumns = useSelector(columnsState);\n\tuseEffect(() => {\n\t\tdispatch(fetchColumnsByIdBoards(board));\n\t}, [dispatch, board]);\n\n\treturn (\n\t\t<>\n\t\t\t{allColumns.map(({ _id: id, name }) => (\n\t\t\t\t<li key={id}>{name}</li>\n\t\t\t))}\n\t\t</>\n\t);\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport {\n  BoardContainer,\n  BtnAddColumn,\n  SvagAddColumn,\n  StyledIconAdd,\n} from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\nimport { AddColumnModal } from 'components/Modal';\nimport { Columns } from '../Columns';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { board } = useParams();\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <BoardContainer>\n      <Columns board={board} />\n      <BtnAddColumn type=\"button\" onClick={handleOpenModal}>\n        <StyledIconAdd>\n          <SvagAddColumn width=\"14\" height=\"14\">\n            <use xlinkHref={`${icon}#icon-plus`} />\n          </SvagAddColumn>\n        </StyledIconAdd>\n        <span>Add another column</span>\n      </BtnAddColumn>\n      <AddColumnModal\n        board={board}\n        isOpen={isModalOpen}\n        setIsOpen={setIsModalOpen}\n      />{' '}\n    </BoardContainer>\n  );\n};\n\nexport default MainDashboard;\n","import styled from '@emotion/styled';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 14px 20px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MainComponent } from 'components/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport MainDashboard from 'components/ScreenPage/MainDashboard/MainDashboard';\nimport { HeaderDashboard } from 'components/ScreenPage/HeaderDashboard/HeaderDashboard';\nimport { AddCardModal } from 'components/Modal';\nimport { SayNameBoard } from 'components/Helpers';\n\nfunction MainTodosPage() {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst { board } = useParams();\n\n\tconst nameBoard = SayNameBoard(board);\n\n\treturn (\n\t\t<>\n\t\t\t<button\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t\tstyle={{ position: 'absolute', right: '50px', top: '150px' }}\n\t\t\t>\n\t\t\t\tAdd card\n\t\t\t</button>\n\t\t\t<AddCardModal isOpen={isOpen} onRequestClose={() => setIsOpen(false)} />\n\n\t\t\t<FilterBtn />\n\n\t\t\t{nameBoard && <HeaderDashboard title={nameBoard} />}\n\t\t\t<MainComponent>{board && <MainDashboard />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","MainComponent","_ref","children","setIsOpenAddBoard","useContext","MainContext","_jsx","_Fragment","_jsxs","onClick","BoardContainer","div","BtnAddColumn","button","StyledIconAdd","_templateObject3","SvagAddColumn","svg","_templateObject4","columnsState","state","columns","items","Columns","board","dispatch","useDispatch","allColumns","useSelector","useEffect","fetchColumnsByIdBoards","map","_ref2","_id","id","name","MainDashboard","isModalOpen","setIsModalOpen","useState","useParams","type","handleOpenModal","width","height","xlinkHref","concat","icon","AddColumnModal","isOpen","setIsOpen","HeaderDashboardContainer","Title","h3","HeaderDashboard","title","nameBoard","SayNameBoard","style","position","right","top","AddCardModal","onRequestClose","FilterBtn"],"sourceRoot":""}
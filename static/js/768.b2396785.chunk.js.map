{"version":3,"file":"static/js/768.b2396785.chunk.js","mappings":"mLAIO,MAAMA,EAAiBC,EAAAA,GAAOC,EAACC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ykBAO5BC,GAASA,EAAMC,MAAMC,MAAMC,gBAwBxBC,EAAoBR,EAAAA,GAAOS,KAAIC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,4WAElCC,GAASA,EAAMC,MAAMC,MAAMK,a,wBC5B9B,SAASC,EAAaC,GAAgB,IAAf,SAAEC,GAAUD,EAEzC,MAAM,kBAAEE,IAAsBC,EAAAA,EAAAA,YAAWC,EAAAA,IAEzC,OACCC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAL,SACEA,GACAI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAL,SAAGA,KAEHM,EAAAA,EAAAA,MAACrB,EAAc,CAAAe,SAAA,CAAC,gDAC+B,KAC9CI,EAAAA,EAAAA,KAACV,EAAiB,CACjBa,QAASA,KACRN,GAAkB,EAAK,EAItBD,SACF,sBAEoB,IAAI,0LAQ9B,C,sBClCO,MAAMQ,EAAiBtB,EAAAA,GAAOuB,IAAGrB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gCAG3BqB,EAAexB,EAAAA,GAAOyB,OAAMf,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,8QAc5BuB,EAAgB1B,EAAAA,GAAOS,KAAIkB,IAAAA,GAAAxB,EAAAA,EAAAA,GAAA,4LAW3ByB,EAAgB5B,EAAAA,GAAO6B,IAAGC,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,8B,wBCvBvC,MAuBA,EAvBsB4B,KACrB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GAM/C,OACCd,EAAAA,EAAAA,MAACE,EAAc,CAAAR,SAAA,EAEdM,EAAAA,EAAAA,MAACI,EAAY,CAACW,KAAK,SAASd,QAPNe,KACvBH,GAAe,EAAK,EAMkCnB,SAAA,EACpDI,EAAAA,EAAAA,KAACQ,EAAa,CAAAZ,UACbI,EAAAA,EAAAA,KAACU,EAAa,CAACS,MAAM,KAAKC,OAAO,KAAIxB,UACpCI,EAAAA,EAAAA,KAAA,OAAKqB,UAAS,GAAAC,OAAKC,EAAAA,EAAI,qBAGzBvB,EAAAA,EAAAA,KAAA,QAAAJ,SAAM,2BAEPI,EAAAA,EAAAA,KAACwB,EAAAA,GAAc,CAACC,OAAQX,EAAaY,UAAWX,IAAmB,MACnD,E,iBCzBZ,MAAMY,EAA2B7C,EAAAA,EAAOuB,IAAGrB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4GAQrC2C,EAAQ9C,EAAAA,EAAO+C,GAAErC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6BCRjB6C,EAAkBnC,IAAgB,IAAf,MAAEoC,GAAOpC,EACvC,OACEK,EAAAA,EAAAA,KAAC2B,EAAwB,CAAA/B,UACvBI,EAAAA,EAAAA,KAAC4B,EAAK,CAAAhC,SAAEmC,KACiB,EC6B/B,QAxBA,WACC,MAAON,EAAQC,IAAaV,EAAAA,EAAAA,WAAS,IAC/B,MAAEgB,IAAUC,EAAAA,EAAAA,MAEZC,GAAYC,EAAAA,EAAAA,IAAaH,GAE/B,OACC9B,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAL,SAAA,EACCI,EAAAA,EAAAA,KAAA,UACCG,QAASA,IAAMuB,GAAU,GACzBU,MAAO,CAAEC,SAAU,WAAYC,MAAO,OAAQC,IAAK,SAAU3C,SAC7D,cAGDI,EAAAA,EAAAA,KAACwC,EAAAA,GAAY,CAACf,OAAQA,EAAQgB,eAAgBA,IAAMf,GAAU,MAE9D1B,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,IAETR,IAAalC,EAAAA,EAAAA,KAAC8B,EAAe,CAACC,MAAOG,KACtClC,EAAAA,EAAAA,KAACN,EAAa,CAAAE,SAAEoC,IAAShC,EAAAA,EAAAA,KAACa,EAAa,QAG1C,C","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React, { useContext } from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { MainContext } from 'components/Helpers';\n\n// import { useDispatch } from 'react-redux';\n// import { boardsSlice } from 'redux/boards/boardsSlice';\n\nexport function MainComponent({ children }) {\n\t// const dispatch = useDispatch();\n\tconst { setIsOpenAddBoard } = useContext(MainContext);\n\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetIsOpenAddBoard(true);\n\t\t\t\t\t\t\t// dispatch(\n\t\t\t\t\t\t\t// \tboardsSlice.actions.openCreateEditBoardModal({ isOpen: true })\n\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  padding: 0px 24px;\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 14px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: #ffffff;\n  background-color: #121212;\n  border: none;\n  cursor: pointer;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: #ffffff;\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: #121212;\n`;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { BoardContainer, BtnAddColumn, SvagAddColumn, StyledIconAdd } from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nimport { AddColumnModal } from 'components/Modal';\n\nconst MainDashboard = () => {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\n\tconst handleOpenModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<BoardContainer>\n\t\t\t\n\t\t\t<BtnAddColumn type='button' onClick={handleOpenModal}>\n\t\t\t\t<StyledIconAdd>\n\t\t\t\t\t<SvagAddColumn width='14' height='14'>\n\t\t\t\t\t\t<use xlinkHref={`${icon}#icon-plus`} />\n\t\t\t\t\t</SvagAddColumn>\n\t\t\t\t</StyledIconAdd>\n\t\t\t\t<span>Add another column</span>\n\t\t\t</BtnAddColumn>\n\t\t\t<AddColumnModal isOpen={isModalOpen} setIsOpen={setIsModalOpen} />{' '}\n\t\t</BoardContainer>\n\t);\n};\n\nexport default MainDashboard;\n","import styled from '@emotion/styled';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 14px 20px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MainComponent } from 'components/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport MainDashboard from 'components/ScreenPage/MainDashboard/MainDashboard';\nimport { HeaderDashboard } from 'components/ScreenPage/HeaderDashboard/HeaderDashboard';\nimport { AddCardModal } from 'components/Modal';\nimport { SayNameBoard } from 'components/Helpers';\n\nfunction MainTodosPage() {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst { board } = useParams();\n\n\tconst nameBoard = SayNameBoard(board);\n\n\treturn (\n\t\t<>\n\t\t\t<button\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t\tstyle={{ position: 'absolute', right: '50px', top: '150px' }}\n\t\t\t>\n\t\t\t\tAdd card\n\t\t\t</button>\n\t\t\t<AddCardModal isOpen={isOpen} onRequestClose={() => setIsOpen(false)} />\n\n\t\t\t<FilterBtn />\n\n\t\t\t{nameBoard && <HeaderDashboard title={nameBoard} />}\n\t\t\t<MainComponent>{board && <MainDashboard />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","MainComponent","_ref","children","setIsOpenAddBoard","useContext","MainContext","_jsx","_Fragment","_jsxs","onClick","BoardContainer","div","BtnAddColumn","button","StyledIconAdd","_templateObject3","SvagAddColumn","svg","_templateObject4","MainDashboard","isModalOpen","setIsModalOpen","useState","type","handleOpenModal","width","height","xlinkHref","concat","icon","AddColumnModal","isOpen","setIsOpen","HeaderDashboardContainer","Title","h3","HeaderDashboard","title","board","useParams","nameBoard","SayNameBoard","style","position","right","top","AddCardModal","onRequestClose","FilterBtn"],"sourceRoot":""}
{"version":3,"file":"static/js/912.7031c136.chunk.js","mappings":"+KA0BA,QApBA,SAAsBA,GAAgB,IAAf,SAAEC,GAAUD,EAClC,OACCE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAF,SACEA,GACAC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAF,SAAGA,KAEHG,EAAAA,EAAAA,MAACC,EAAAA,GAAc,CAAAJ,SAAA,CAAC,gDAC+B,KAC9CC,EAAAA,EAAAA,KAACI,EAAAA,GAAiB,CAACC,QAASA,IAAMC,MAAM,gBAAgBP,SAAC,sBAEpC,IAAI,0LAQ9B,E,qCCtBO,MAAMQ,EAA2BC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4GAQrCC,EAAQJ,EAAAA,EAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6BCRjBI,EAAkBjB,IAAgB,IAAf,MAAEkB,GAAOlB,EACvC,OACEE,EAAAA,EAAAA,KAACO,EAAwB,CAAAR,UACvBC,EAAAA,EAAAA,KAACY,EAAK,CAAAb,SAAEiB,KACiB,E,sBCHxB,MAAMC,EAAiBT,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gCAG3BO,EAAeV,EAAAA,GAAOW,OAAML,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8QAc5BS,EAAgBZ,EAAAA,GAAOa,KAAIC,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,4LAW3BY,EAAgBf,EAAAA,GAAOgB,IAAGC,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,8B,wBCvBvC,MAsBA,EAtBsBe,KACrB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GAM/C,OACC3B,EAAAA,EAAAA,MAACe,EAAc,CAAAlB,SAAA,EACdG,EAAAA,EAAAA,MAACgB,EAAY,CAACY,KAAK,SAASzB,QANN0B,KACvBH,GAAe,EAAK,EAKkC7B,SAAA,EACpDC,EAAAA,EAAAA,KAACoB,EAAa,CAAArB,UACbC,EAAAA,EAAAA,KAACuB,EAAa,CAACS,MAAM,KAAKC,OAAO,KAAIlC,UACpCC,EAAAA,EAAAA,KAAA,OAAKkC,UAAS,GAAAC,OAAKC,EAAAA,EAAI,qBAGzBpC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,2BAEPC,EAAAA,EAAAA,KAACqC,EAAAA,GAAc,CAACC,OAAQX,EAAaY,UAAWX,IAAmB,MACnD,ECVnB,EAVmBY,KAClB,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MAElB,OACCxC,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAF,SAAA,EACCC,EAAAA,EAAAA,KAACe,EAAe,CAACC,MAAOyB,KACxBzC,EAAAA,EAAAA,KAAC0B,EAAa,MACZ,ECoBL,QApBA,WACC,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACzC,MAAEY,IAAUC,EAAAA,EAAAA,MAMlB,OACCxC,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAAF,SAAA,EACCG,EAAAA,EAAAA,MAACyC,EAAAA,GAAY,CAACb,KAAK,SAASzB,QANZuC,KACjBhB,GAAe,EAAK,EAK4B7B,SAAA,EAC9CC,EAAAA,EAAAA,KAAC6C,EAAAA,GAAW,CAACC,KAAK,aAClB9C,EAAAA,EAAAA,KAAC+C,EAAAA,EAAU,CAAAhD,SAAC,gBAEbC,EAAAA,EAAAA,KAACgD,EAAAA,EAAW,CAACrB,YAAaA,EAAaC,eAAgBA,KACvD5B,EAAAA,EAAAA,KAACiD,EAAa,CAAAlD,SAAE0C,IAASzC,EAAAA,EAAAA,KAACwC,EAAU,QAGvC,C","sources":["components/MainComponent/MainComponent.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/ScreenPage.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport React from 'react';\n\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\n\nfunction MainComponent({ children }) {\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard onClick={() => alert('Create board')}>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default MainComponent;\n","import styled from '@emotion/styled';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 14px 20px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  padding: 0px 24px;\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 14px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: #ffffff;\n  background-color: #121212;\n  border: none;\n  cursor: pointer;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: #ffffff;\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: #121212;\n`;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { BoardContainer, BtnAddColumn, SvagAddColumn, StyledIconAdd } from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nimport { AddColumnModal } from 'components/Modal';\n\nconst MainDashboard = () => {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\n\tconst handleOpenModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<BoardContainer>\n\t\t\t<BtnAddColumn type='button' onClick={handleOpenModal}>\n\t\t\t\t<StyledIconAdd>\n\t\t\t\t\t<SvagAddColumn width='14' height='14'>\n\t\t\t\t\t\t<use xlinkHref={`${icon}#icon-plus`} />\n\t\t\t\t\t</SvagAddColumn>\n\t\t\t\t</StyledIconAdd>\n\t\t\t\t<span>Add another column</span>\n\t\t\t</BtnAddColumn>\n\t\t\t<AddColumnModal isOpen={isModalOpen} setIsOpen={setIsModalOpen} />{' '}\n\t\t</BoardContainer>\n\t);\n};\n\nexport default MainDashboard;\n","/** @format */\n\nimport { useParams } from 'react-router-dom';\nimport { HeaderDashboard } from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\n\nconst ScreenPage = () => {\n\tconst { board } = useParams();\n\n\treturn (\n\t\t<>\n\t\t\t<HeaderDashboard title={board} />\n\t\t\t<MainDashboard />\n\t\t</>\n\t);\n};\nexport default ScreenPage;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MainComponent from 'components/MainComponent/MainComponent';\nimport { ModalFilter } from 'components/Filter';\nimport ScreenPage from 'components/ScreenPage/ScreenPage';\nimport {\n\tButtonFilter,\n\tFiltersIcon,\n\tTextButton,\n} from 'components/MainComponent/MainComponent.styled';\n\nfunction MainTodosPage() {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst { board } = useParams();\n\n\tconst openModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ButtonFilter type='button' onClick={openModal}>\n\t\t\t\t<FiltersIcon name='filters' />\n\t\t\t\t<TextButton>Filters</TextButton>\n\t\t\t</ButtonFilter>\n\t\t\t<ModalFilter isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\n\t\t\t<MainComponent>{board && <ScreenPage />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["_ref","children","_jsx","_Fragment","_jsxs","TextEmptyBoard","ButtonCreateBoard","onClick","alert","HeaderDashboardContainer","styled","div","_templateObject","_taggedTemplateLiteral","Title","h3","_templateObject2","HeaderDashboard","title","BoardContainer","BtnAddColumn","button","StyledIconAdd","span","_templateObject3","SvagAddColumn","svg","_templateObject4","MainDashboard","isModalOpen","setIsModalOpen","useState","type","handleOpenModal","width","height","xlinkHref","concat","icon","AddColumnModal","isOpen","setIsOpen","ScreenPage","board","useParams","ButtonFilter","openModal","FiltersIcon","name","TextButton","ModalFilter","MainComponent"],"sourceRoot":""}
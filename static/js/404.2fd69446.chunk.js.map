{"version":3,"file":"static/js/404.2fd69446.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/ScreenPage.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { useDispatch } from 'react-redux';\nimport { boardsSlice } from 'redux/boards/boardsSlice';\n\nfunction MainComponent({ children }) {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {children ? (\n        <>{children}</>\n      ) : (\n        <TextEmptyBoard>\n          Before starting your project, it is essential{' '}\n          <ButtonCreateBoard\n            onClick={() => {\n              dispatch(\n                boardsSlice.actions.openCreateEditBoardModal({ isOpen: true })\n              );\n            }}\n          >\n            to create a board\n          </ButtonCreateBoard>{' '}\n          to visualize and track all the necessary tasks and milestones. This\n          board serves as a powerful tool to organize the workflow and ensure\n          effective collaboration among team members.\n        </TextEmptyBoard>\n      )}\n    </>\n  );\n}\n\nexport default MainComponent;\n","import styled from '@emotion/styled';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 14px 20px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  padding: 0px 24px;\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 14px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: #ffffff;\n  background-color: #121212;\n  border: none;\n  cursor: pointer;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: #ffffff;\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: #121212;\n`;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { BoardContainer, BtnAddColumn, SvagAddColumn, StyledIconAdd } from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nimport { AddColumnModal } from 'components/Modal';\n\nconst MainDashboard = () => {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\n\tconst handleOpenModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<BoardContainer>\n\t\t\t<BtnAddColumn type='button' onClick={handleOpenModal}>\n\t\t\t\t<StyledIconAdd>\n\t\t\t\t\t<SvagAddColumn width='14' height='14'>\n\t\t\t\t\t\t<use xlinkHref={`${icon}#icon-plus`} />\n\t\t\t\t\t</SvagAddColumn>\n\t\t\t\t</StyledIconAdd>\n\t\t\t\t<span>Add another column</span>\n\t\t\t</BtnAddColumn>\n\t\t\t<AddColumnModal isOpen={isModalOpen} setIsOpen={setIsModalOpen} />{' '}\n\t\t</BoardContainer>\n\t);\n};\n\nexport default MainDashboard;\n","/** @format */\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { HeaderDashboard } from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\n\nconst ScreenPage = () => {\n\tconst { board } = useParams();\n\n\treturn (\n\t\t<>\n\t\t\t<HeaderDashboard title={board} />\n\t\t\t<MainDashboard />\n\t\t</>\n\t);\n};\nexport default ScreenPage;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MainComponent from 'components/MainComponent/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport ScreenPage from 'components/ScreenPage/ScreenPage';\nimport { AddCardModal } from 'components/Modal';\n\nfunction MainTodosPage() {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst { board } = useParams();\n\n\treturn (\n\t\t<>\n\t\t\t<button\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t\tstyle={{ position: 'absolute', right: '50px', top: '150px' }}\n\t\t\t>\n\t\t\t\tAdd card\n\t\t\t</button>\n\t\t\t<AddCardModal isOpen={isOpen} onRequestClose={() => setIsOpen(false)} />\n\n\t\t\t<FilterBtn />\n\t\t\t<MainComponent>{board && <ScreenPage />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","_ref","children","dispatch","useDispatch","_jsx","_Fragment","_jsxs","onClick","boardsSlice","actions","openCreateEditBoardModal","isOpen","HeaderDashboardContainer","div","Title","h3","HeaderDashboard","title","BoardContainer","BtnAddColumn","button","StyledIconAdd","_templateObject3","SvagAddColumn","svg","_templateObject4","MainDashboard","isModalOpen","setIsModalOpen","useState","type","handleOpenModal","width","height","xlinkHref","concat","icon","AddColumnModal","setIsOpen","ScreenPage","board","useParams","style","position","right","top","AddCardModal","onRequestClose","FilterBtn","MainComponent"],"sourceRoot":""}
{"version":3,"file":"static/js/72.b512af13.chunk.js","mappings":"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","sources":["components/Helpers/RegisterSchema.js","components/RegisterForm/RegisterForm.Styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst RegisterSchema = Yup.object().shape({\n    name: Yup.string()\n      .trim()\n      .min(2, 'Too Short!')\n      .matches(\n        /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      )\n      .required('This is a required field'),\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('This is a required field'),\n    password: Yup.string()\n      .matches(\n        /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/,\n        'Please create a stronger password. It must contain one uppercase and one lowercase letter'\n      )\n      .required('This is a required field'),\n  });\n\n  export default RegisterSchema;","/** @format */\n\nimport styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport Icon from 'components/Icon/Icon.jsx';\n\n\nexport const Container = styled.div`\n  background: linear-gradient(\n    180deg,\n    rgba(196, 196, 196, 0) 25%,\n    #bedbb0 92.19%\n  );\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 20px 0 20px;\n  height: 100vh;\n  min-width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  @media (min-width: 375px) and (max-width: 767px) {\n    width: 375px;\n  }\n  @media (max-width: 1439px) {\n    max-width: 768px;\n  }\n  @media (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 375px) {\n    width: 100%;\n    padding: 24px;\n  }\n  @media (min-width: 376px) and (max-width: 767px) {\n    width: 335px;\n    padding: 24px;\n  }\n  @media (min-width: 768px) {\n    width: 424px;\n    padding: 40px;\n  }\n  border-radius: 8px;\n  background: #151515;\n`;\n\nexport const NavBox = styled.div`\n  display: flex;\n  gap: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${({ end }) => (end ? '#FFFFFF' : '#FFFFFF4D')};\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  text-decoration: none;\n`;\n\nexport const LabelBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n  @media (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const ErrMessageStyled = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledField = styled(Field)`\n  color: #fff;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  padding: 14px 0px 14px 18px;\n  opacity: 0.4;\n  background: #1f1f1f;\n  width: 100%;\n\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n`;\n\nexport const IconHideShow = styled(Icon)`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: #bedbb0;\n`;\n\nexport const ButtonText = styled.span`\n  color: #161616;\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n","/** @format */\n\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport { register } from '../../redux/auth/operations';\nimport RegisterSchema from 'components/Helpers/RegisterSchema';\nimport React, { useState } from 'react';\n\nimport {\n  Button,\n  ButtonText,\n  Container,\n  ErrMessageStyled,\n  LabelBox,\n  Link,\n  NavBox,\n  StyledField,\n  StyledForm,\n  IconHideShow,\n} from './RegisterForm.Styled'; // Assuming IconHideShow is defined in RegisterForm.Styled\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = (values, actions) => {\n    dispatch(register(values));\n    actions.resetForm({ name: '', email: '', password: '' });\n  };\n\n  return (\n    <Container>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={(values, actions) => {\n          handleSubmit(values, actions);\n        }}\n        validationSchema={RegisterSchema}\n      >\n        {({ isSubmitting }) => (\n          <StyledForm autoComplete=\"off\">\n            <NavBox>\n              <Link to=\"/register\" end>\n                Registration\n              </Link>\n              <Link to=\"/login\">Log In</Link>\n            </NavBox>\n\n            <LabelBox>\n              <label>\n                <StyledField\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                />\n                <ErrMessageStyled name=\"name\" component=\"span\" />\n              </label>\n              <label>\n                <StyledField\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter your email\"\n                />\n                <ErrMessageStyled name=\"email\" component=\"span\" />\n              </label>\n              <label style={{ position: 'relative' }}>\n                <StyledField\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Create a password\"\n                />\n                <IconHideShow\n                  name=\"hide-show\"\n                  onClick={togglePasswordVisibility}\n                  style={{\n                    position: 'absolute',\n                    top: '50%',\n                    right: '18px',\n                    transform: 'translateY(-50%)',\n                    cursor: 'pointer',\n\t\t\t\t\tstroke: '#FFFFFF4D',\n                  }}\n                >\n                  {showPassword ? 'Hide' : 'Show'}\n                </IconHideShow>\n                <ErrMessageStyled name=\"password\" component=\"span\" />\n              </label>\n            </LabelBox>\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              <ButtonText>Register Now</ButtonText>\n            </Button>\n          </StyledForm>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n\nexport default RegisterForm;\n","/** @format */\nimport Loader from 'components/Loader';\nimport RegisterForm from 'components/RegisterForm';\nimport { useAuth } from 'hooks';\n\nconst RegisterPage = () => {\n\tconst {isLoading} = useAuth()\n\treturn (\n\t\t<>\n\t\t\t{isLoading && <Loader/>}\n\t\t\t<RegisterForm />\n\t\t</>\n\t);\n};\n\nexport default RegisterPage;\n"],"names":["Yup","shape","name","trim","min","matches","required","email","password","Container","styled","div","_templateObject","_taggedTemplateLiteral","StyledForm","Form","_templateObject2","NavBox","_templateObject3","Link","NavLink","_templateObject4","_ref","end","LabelBox","_templateObject5","ErrMessageStyled","ErrorMessage","_templateObject6","StyledField","Field","_templateObject7","IconHideShow","Icon","_templateObject8","Button","button","_templateObject9","ButtonText","span","_templateObject10","RegisterForm","dispatch","useDispatch","showPassword","setShowPassword","useState","togglePasswordVisibility","_jsx","children","Formik","initialValues","onSubmit","values","actions","handleSubmit","register","resetForm","validationSchema","RegisterSchema","isSubmitting","_jsxs","autoComplete","to","type","placeholder","component","style","position","onClick","top","right","transform","cursor","stroke","disabled","RegisterPage","isLoading","useAuth","_Fragment","Loader"],"sourceRoot":""}
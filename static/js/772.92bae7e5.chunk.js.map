{"version":3,"file":"static/js/772.92bae7e5.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","components/Column/Column.styled.jsx","components/Tooltip/Tooltip.styled.jsx","components/Tooltip/Tooltip.jsx","components/Card/Card.styled.jsx","components/Card/Card.jsx","components/Column/Column.jsx","components/ScreenPage/Columns/Columns.styled.js","components/ScreenPage/Columns/Columns.jsx","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React, { useContext } from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { MainContext } from 'components/Helpers';\n\nexport function MainComponent({ children }) {\n\tconst { setIsOpenAddBoard } = useContext(MainContext);\n\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetIsOpenAddBoard(true);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","/** @format */\n\n// MainDashboard.styled.js\nimport styled from 'styled-components';\nimport Icon from 'components/Icon';\n\nexport const BoardContainer = styled.div`\n  overflow-y: hidden;\n  overflow-x: auto;\n  display: flex;\n  gap: 20px;\n  padding: 0px 24px;\n  flex-grow: 1;\n  padding-bottom: 36px;\n\n  &::-webkit-scrollbar {\n    height: 12px;\n    background: rgba(18, 18, 18, 1);\n    border-radius: 6px;\n  }\n  &::-webkit-scrollbar-thumb {\n    height: 100%;\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: 6px;\n    box-shadow: inset 1px 1px 10px rgba(0, 0, 0, 0.25);\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background-color: ${props => props.theme.sidebar.addButtonBackground};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-bottom: 64px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding-bottom: 28px;\n  }\n`;\n\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: ${props => props.theme.help.modalTextMain};\n  background-color: ${props => props.theme.profile.background};\n\n  border: none;\n  cursor: pointer;\n  height: 58px;\n`;\n\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: ${props => props.theme.addcolum.plusBackground};\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled(Icon)`\n  stroke: ${props => props.theme.addcolum.plusColor};\n  width: 14px;\n  height: 14px;\n`;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.li`\n  width: 351px;\n  display: grid;\n  gap: 8px;\n  grid-template-columns: 1fr;\n  grid-template-areas:\n    'title'\n    'task'\n    'add';\n  grid-template-rows: 56px auto 56px;\n`;\n\nexport const Title = styled.span`\n\tcolor: ${props => props.theme.colum.textMain};\n\tfont-size: 18px;\n\tborder-radius: 8px;\n\twidth: 334px;\n\tpadding: 14px 24px;\n\tbackground-color: ${props => props.theme.profile.background};;\n\tcolor: ${props => props.theme.help.modalTextMain};\n\tfont-size: 14px;\n\tfont-weight: 500;\n\tdisplay: flex;\n\theight: 58px;\n\talign-items: center;\n\tjustify-content: space-between;\n\n`;\n\nexport const List = styled.div`\n  grid-area: title;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  gap: 8px;\n  overflow-y: auto;\n`;\n\nexport const ListTasksContainer = styled.div`\n  overflow-y: scroll;\n  overflow-x: hidden;\n\n  &::-webkit-scrollbar {\n    width: 8px;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 4px;\n  }\n  &::-webkit-scrollbar-thumb {\n    height: 142px;\n    background-color: rgba(18, 18, 18, 1);\n    border-radius: 4px;\n    box-shadow: inset 1px 1px 10px rgba(0, 0, 0, 0.25);\n  }\n  &::-webkit-scrollbar-thumb:hover {\n    background-color: ${props => props.theme.sidebar.addButtonBackground};\n  }\n`;\n\nexport const ListTasks = styled.div`\n  grid-area: task;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  gap: 8px;\n`;\n\nexport const IconsContainer = styled.div`\n  grid-area: add;\n  display: flex;\n  gap: 8px;\n  margin-left: auto;\n`;\n\nexport const EditColumn = styled.svg`\n\tstroke: ${({ theme }) => theme.sidebar.projectIcon};\n\tcursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${({ theme }) => theme.sidebar.textAccent};\n`;\n\nexport const DelColumn = styled.svg`\n\tstroke:${({ theme }) => theme.sidebar.projectIcon};\n\tcursor: pointer;\n\n\t &:hover,\n     &:focus {\n    stroke: ${({ theme }) => theme.sidebar.textAccent};\n`;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const TooltipContent = styled.div`\n\tposition: relative;\n\toutline: none;\n\tbackground: ${props => props.theme.modal.backgroundMain};\n\tcolor: ${props => props.theme.help.modalTextMain};\n\tpadding: 24px;\n\tborder-radius: 8px;\n\tmin-width: 320px;\n\t@media (max-width: 767px) {\n\t\twidth: 335px;\n\t}\n\t@media (min-width: 768px) {\n\t\twidth: 350px;\n\t}\n\tmargin: 0 auto;\n\t/* background: ${({ theme }) => theme.modal.backgroundMain};\n\ttext-align: center;\n\tborder-radius: 8px;\n\tpadding: 5px;\n\tposition: absolute;\n\tz-index: 1;\n\tbottom: 125%;\n\tleft: 50%;\n\tmargin-left: -60px;\n\twidth: 120px; */\n`;\n\nexport const TooltipButton = styled.button`\n\tbackground-color: transparent;\n\tcolor: #bedbb0;\n\tborder: none;\n\tcursor: pointer;\n\n\t&:hover,\n\t&:focus {\n\t\tcolor: #fff;\n\t}\n`;\n\nexport const Icon = styled.svg`\n\twidth: 16px;\n\theight: 16px;\n\tstroke: ${props => props.theme.sidebar.projectIcon};\n\tcursor: pointer;\n\n\t&:hover,\n\t&:focus {\n\t\tstroke: ${props => props.theme.sidebar.textAccent};\n\t}\n`;\n","/** @format */\n\nimport React from 'react';\nimport ModalWindow, { customStyles } from '../Modal';\nimport { TooltipButton, TooltipContent } from './Tooltip.styled.jsx';\nimport Icon from 'components/Icon/Icon.jsx';\nimport { useColumns } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { updateCard } from 'redux/cards/operations';\n\nconst Tooltip = ({ isOpen, onRequestClose }) => {\n\tconst dispatch = useDispatch();\n\tconst { allColumns } = useColumns();\n\tconsole.log('🚀 ~ Tooltip ~ allColumn:', allColumns);\n\n\tconst handleOptionClick = id => {\n\t\tdispatch(updateCard());\n\t\tonRequestClose();\n\t};\n\n\treturn (\n\t\t<ModalWindow isOpen={isOpen} onRequestClose={onRequestClose} style={customStyles}>\n\t\t\t<TooltipContent>\n\t\t\t\t{allColumns?.map(col => (\n\t\t\t\t\t<TooltipButton key={col._id} onClick={() => handleOptionClick(col._id)}>\n\t\t\t\t\t\t{col.name}\n\t\t\t\t\t\t<Icon name='process-task' /> {/* Використовуємо компонент Icon */}\n\t\t\t\t\t</TooltipButton>\n\t\t\t\t))}\n\t\t\t</TooltipContent>\n\t\t</ModalWindow>\n\t);\n};\n\nexport default Tooltip;\n","import styled from 'styled-components';\nimport Icon from '../Icon';\n\nexport const CardContainer = styled.div`\n  width: 335px;\n  height: 154px;\n  display: flex;\n  flex-direction: row;\n  background-color: ${props => props.theme.profile.background};;\n  border-radius: 7px;\n`;\n\nexport const PriorityLine = styled.div`\n  width: 4px;\n  background-color: rgba(224, 156, 181, 1);\n`;\n\nexport const CardContent = styled.div`\n  width: 331px;\n  padding: 14px 20px 14px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const TextContent = styled.div``;\n\nexport const Title = styled.h4`\n  font-size: 14px;\n  font-weight: bold;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.help.modalTextMain};\n  margin: 0;\n`;\n\nexport const DescriptionText = styled.p`\n  margin: 0;\n  font-size: 12px;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  line-height: 1.45;\n  color: ${props => props.theme.colum.textSecondary};\n  margin-top: 8px;\n  width: 290px;\n  height: 38px;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: default;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-top: solid 1px ${props => props.theme.colum.borderColor};\n  height: 45px;\n  align-items: flex-end;\n`;\n\nexport const Priority = styled.div`\n  height: 31px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const InfoTitle = styled.p`\n  font-size: 8px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  cursor: default;\n  color: ${props => props.theme.colum.icon};\n`;\n\nexport const PriorityLevel = styled.p`\n  position: relative;\n  font-size: 10px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.colum.textMain};\n  padding-left: 16px;\n  cursor: default;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: rgba(224, 156, 181, 1);\n  }\n`;\n\nexport const Dedline = styled.div`\n  height: 31px;\n  margin-left: 14px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const Date = styled.p`\n  font-size: 10px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  cursor: default;\n  color:  ${props => props.theme.colum.textMain};\n`;\n\nexport const BellIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  margin-left: auto;\n  stroke:  ${props => props.theme.colum.icon};\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.colum.buttonBackground};\n  }\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: 13px;\n  \n\n   &:hover,\n  &:focus {\n    stroke:  ${props => props.theme.colum.buttonBackground};\n`;\n\nexport const MoveIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.colum.icon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.colum.buttonBackground};\n  }\n`;\n\nexport const EditIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.colum.icon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke:  ${props => props.theme.colum.buttonBackground};\n  }\n`;\n\nexport const DelIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.colum.icon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke:  ${props => props.theme.colum.buttonBackground};\n  }\n`;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport Tooltip from 'components/Tooltip';\nimport {\n\tCardContainer,\n\tPriorityLine,\n\tCardContent,\n\tTextContent,\n\tTitle,\n\tDescriptionText,\n\tInfo,\n\tPriority,\n\tPriorityLevel,\n\tDedline,\n\tInfoTitle,\n\tDate,\n\tIconContainer,\n\tBellIcon,\n\tMoveIcon,\n\tEditIcon,\n\tDelIcon,\n} from './Card.styled';\n\nexport const Card = ({ item, deleteCard, editCard }) => {\n\tconst { name, priority, deadline } = item;\n\tconst [isTooltipOpen, setIsTooltipOpen] = useState(false);\n\n\tconst closeTooltip = () => {\n\t\tsetIsTooltipOpen(false);\n\t};\n\n\tconst handleOptionClick = option => {\n\t\tcloseTooltip();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<CardContainer>\n\t\t\t\t<PriorityLine />\n\t\t\t\t<CardContent>\n\t\t\t\t\t<TextContent>\n\t\t\t\t\t\t<Title>{name}</Title>\n\t\t\t\t\t\t<DescriptionText>\n\t\t\t\t\t\t\tConduct in-depth research and analysis on the project's topic, gather\n\t\t\t\t\t\t\trelevant data, and identify key insights to inform decision-making and\n\t\t\t\t\t\t\tproject planning.\n\t\t\t\t\t\t</DescriptionText>\n\t\t\t\t\t</TextContent>\n\t\t\t\t\t<Info>\n\t\t\t\t\t\t<Priority>\n\t\t\t\t\t\t\t<InfoTitle>Priority</InfoTitle>\n\t\t\t\t\t\t\t<PriorityLevel>{priority}</PriorityLevel>\n\t\t\t\t\t\t</Priority>\n\t\t\t\t\t\t<Dedline>\n\t\t\t\t\t\t\t<InfoTitle>Deadline</InfoTitle>\n\t\t\t\t\t\t\t<Date>{deadline}</Date>\n\t\t\t\t\t\t</Dedline>\n\t\t\t\t\t\t<BellIcon name='bell' />\n\t\t\t\t\t\t<IconContainer>\n\t\t\t\t\t\t\t<MoveIcon name='process-task' onClick={() => setIsTooltipOpen(true)} />\n\t\t\t\t\t\t\t<EditIcon name='edit' onClick={editCard} />\n\t\t\t\t\t\t\t<DelIcon name='delete' onClick={deleteCard} />\n\t\t\t\t\t\t</IconContainer>\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tisOpen={isTooltipOpen}\n\t\t\t\t\t\t\tonRequestClose={closeTooltip}\n\t\t\t\t\t\t\thandleOptionClick={handleOptionClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Info>\n\t\t\t\t</CardContent>\n\t\t\t</CardContainer>\n\t\t</>\n\t);\n};\n","/** @format */\n\nimport React, { useContext, useState, useEffect } from 'react';\n\nimport {\n\tWrapper,\n\tTitle,\n\tIconsContainer,\n\tEditColumn,\n\tDelColumn,\n\tList,\n\tListTasks,\n} from './Column.styled';\nimport { useDispatch } from 'react-redux';\nimport { fetchCardsByColumnId } from 'redux/cards/operations';\n\nimport {\n\tButton,\n\tButtonText,\n\tIconWrapper,\n\tAddIcon,\n} from 'components/Modal/CreateNewBoardModal/CreateNewBoardModal.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nimport { AddCardModal } from 'components/Modal';\nimport { Card } from 'components/Card/Card';\nimport { delColumn } from 'redux/columns/operations';\nimport { MainContext } from 'components/Helpers';\nimport { delCard } from 'redux/cards/operations';\nimport { useCards } from 'hooks';\n\nexport const Column = ({ name, id, column }) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst [cardForEditing, setCardForEditing] = useState(null);\n\tconst { allCards } = useCards();\n\tconst dispatch = useDispatch();\n\tconst { filter } = useContext(MainContext);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchCardsByColumnId(id));\n\t}, [dispatch, id]);\n\n\tconst handleDeleteColumn = columnId => {\n\t\tdispatch(delColumn(columnId));\n\t};\n\n\tconst deleteCard = id => {\n\t\tdispatch(delCard(id));\n\t};\n\n\tconst editCard = data => {\n\t\tsetCardForEditing(data);\n\t\tsetIsOpen(true);\n\t};\n\n\tconst onRequestClose = () => {\n\t\tsetCardForEditing(null);\n\t\tsetIsOpen(false);\n\t};\n\n\tconst cardForColumn = allCards?.filter(card => {\n\t\tif (filter === 'all') {\n\t\t\treturn card.columnId === id;\n\t\t} else {\n\t\t\treturn card.columnId === id && card.priority === filter;\n\t\t}\n\t});\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<List>\n\t\t\t\t<Title>\n\t\t\t\t\t{name}\n\t\t\t\t\t<IconsContainer>\n\t\t\t\t\t\t<EditColumn type='button' width='16' height='16'>\n\t\t\t\t\t\t\t<use xlinkHref={`${icon}#icon-edit`} />\n\t\t\t\t\t\t</EditColumn>\n\t\t\t\t\t\t<DelColumn\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\twidth='16'\n\t\t\t\t\t\t\theight='16'\n\t\t\t\t\t\t\tonClick={() => handleDeleteColumn(id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<use xlinkHref={`${icon}#icon-delete`} />\n\t\t\t\t\t\t</DelColumn>\n\t\t\t\t\t</IconsContainer>\n\t\t\t\t</Title>\n\t\t\t</List>\n\t\t\t<ListTasks>\n\t\t\t\t{cardForColumn?.map(item => (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={item._id}\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\tdeleteCard={() => deleteCard(item?._id)}\n\t\t\t\t\t\teditCard={() => editCard(item)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ListTasks>\n\t\t\t<Button type='button' onClick={() => setIsOpen(true)}>\n\t\t\t\t<IconWrapper>\n\t\t\t\t\t<AddIcon name='add-board' />\n\t\t\t\t</IconWrapper>\n\t\t\t\t<ButtonText>{!cardForColumn?.length ? 'Add card' : 'Add another card'}</ButtonText>\n\t\t\t</Button>\n\n\t\t\t<AddCardModal\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tonRequestClose={onRequestClose}\n\t\t\t\tcolumnId={column._id}\n\t\t\t\tcardForEditing={cardForEditing}\n\t\t\t/>\n\t\t</Wrapper>\n\t);\n};\n","/** @format */\n\nimport styled from '@emotion/styled';\n\nexport const Styled = styled.ul`\n\tdisplay: flex;\n\tgap: 20px;\n\tmargin: 0;\n\tpadding: 0;\n`;\n\nexport const List = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n\tpadding: 0;\n\tgap: 8px;\n\theight: calc(100vh - 318px);\n\toverflow-y: auto;\n`;\n","/** @format */\n\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchColumnsByIdBoards } from 'redux/columns/operations';\nimport { Column } from 'components/Column/Column';\nimport { Styled } from './Columns.styled';\nimport { useColumns } from 'hooks';\n\nexport const Columns = ({ board, children }) => {\n\tconst dispatch = useDispatch();\n\tconst { allColumns } = useColumns();\n\n\tuseEffect(() => {\n\t\tdispatch(fetchColumnsByIdBoards(board));\n\t}, [dispatch, board]);\n\n\treturn (\n\t\t<Styled>\n\t\t\t{allColumns.map(item => (\n\t\t\t\t<Column name={item.name} id={item._id} key={item._id} column={item} />\n\t\t\t))}\n\t\t\t{children}\n\t\t</Styled>\n\t);\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { BoardContainer, BtnAddColumn, SvagAddColumn, StyledIconAdd } from './MainDashboard.styled';\nimport { AddColumnModal } from 'components/Modal';\nimport { Columns } from '../Columns/Columns';\nimport { useParams } from 'react-router-dom';\nimport { useColumns } from 'hooks';\n\nconst MainDashboard = () => {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst { board } = useParams();\n\tconst { allColumns } = useColumns();\n\n\tconst handleOpenModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<BoardContainer>\n\t\t\t<Columns board={board}>\n\t\t\t\t<BtnAddColumn type='button' onClick={handleOpenModal}>\n\t\t\t\t\t<StyledIconAdd>\n\t\t\t\t\t\t<SvagAddColumn name='plus' />\n\t\t\t\t\t</StyledIconAdd>\n\t\t\t\t\t<span>Add {allColumns.length ? 'another' : null} column</span>\n\t\t\t\t</BtnAddColumn>\n\t\t\t</Columns>\n\t\t\t<AddColumnModal board={board} isOpen={isModalOpen} setIsOpen={setIsModalOpen} />\n\t\t</BoardContainer>\n\t);\n};\n\nexport default MainDashboard;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const HeaderDashboardContainer = styled.div`\n\tpadding: 0px 24px;\n\tfont-weight: 500;\n\tfont-size: 18px;\n\tdisplay: flex;\n`;\n\nexport const Title = styled.h3`\n\tpadding: 0;\n\tmargin: 0;\n\tcolor: ${props => props.theme.help.modalTextMain};\n\tfont-size: 18px;\n\tfont-weight: 500;\n\tline-height: 27px;\n\tletter-spacing: -0.02em;\n\ttext-align: left;\n`;\n","/** @format */\n\nimport { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n\treturn (\n\t\t<HeaderDashboardContainer>\n\t\t\t<Title>{title}</Title>\n\t\t</HeaderDashboardContainer>\n\t);\n};\n","/** @format */\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MainComponent } from 'components/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport MainDashboard from 'components/ScreenPage/MainDashboard/MainDashboard';\nimport { HeaderDashboard } from 'components/ScreenPage/HeaderDashboard/HeaderDashboard';\nimport { SayNameBoard } from 'components/Helpers';\n\nfunction MainTodosPage() {\n\tconst { board } = useParams();\n\tconst nameBoard = SayNameBoard(board);\n\n\treturn (\n\t\t<>\n\t\t\t<FilterBtn />\n\t\t\t{nameBoard && <HeaderDashboard title={nameBoard} />}\n\t\t\t<MainComponent>{board && <MainDashboard />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","MainComponent","_ref","children","setIsOpenAddBoard","useContext","MainContext","_jsx","_Fragment","_jsxs","onClick","BoardContainer","div","sidebar","addButtonBackground","BtnAddColumn","button","help","modalTextMain","profile","background","StyledIconAdd","_templateObject3","addcolum","plusBackground","SvagAddColumn","Icon","_templateObject4","plusColor","Wrapper","li","Title","colum","textMain","List","ListTasks","_templateObject5","IconsContainer","_templateObject6","EditColumn","svg","_templateObject7","projectIcon","_ref2","DelColumn","_templateObject8","_ref3","_ref4","TooltipContent","modal","backgroundMain","TooltipButton","isOpen","onRequestClose","dispatch","useDispatch","allColumns","useColumns","console","log","ModalWindow","style","customStyles","map","col","_id","updateCard","name","CardContainer","PriorityLine","CardContent","TextContent","h4","DescriptionText","Info","borderColor","Priority","InfoTitle","_templateObject9","icon","PriorityLevel","_templateObject10","Dedline","_templateObject11","Date","_templateObject12","BellIcon","_templateObject13","buttonBackground","IconContainer","_templateObject14","MoveIcon","_templateObject15","EditIcon","_templateObject16","DelIcon","_templateObject17","Card","item","deleteCard","editCard","priority","deadline","isTooltipOpen","setIsTooltipOpen","useState","closeTooltip","Tooltip","handleOptionClick","option","Column","id","column","setIsOpen","cardForEditing","setCardForEditing","allCards","useCards","filter","useEffect","fetchCardsByColumnId","cardForColumn","card","columnId","type","width","height","xlinkHref","concat","handleDeleteColumn","delColumn","delCard","Button","IconWrapper","AddIcon","ButtonText","length","AddCardModal","Styled","ul","Columns","board","fetchColumnsByIdBoards","MainDashboard","isModalOpen","setIsModalOpen","useParams","handleOpenModal","AddColumnModal","HeaderDashboardContainer","h3","HeaderDashboard","title","nameBoard","SayNameBoard","FilterBtn"],"sourceRoot":""}
{"version":3,"file":"static/js/368.69e5cf26.chunk.js","mappings":"uLAEA,MAOE,EAPkBA,EAAAA,KAAaC,MAAM,CACtCC,MAAOF,EAAAA,KACJE,MAAM,yBACNC,SAAS,4BACZC,SAAUJ,EAAAA,KAAaG,SAAS,8B,kDCA1B,MAAME,EAAYC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wRAiBtBC,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAYM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+LAYzBI,EAASP,EAAAA,GAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,kEAMnBM,GAAOT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAeW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wNAYtBS,EAAWZ,EAAAA,GAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,6FAOrBW,GAAmBd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAoBgB,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,yBAIvCc,GAAcjB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAamB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,kOAY3BiB,EAASpB,EAAAA,GAAOqB,OAAMC,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,iKAUtBoB,EAAavB,EAAAA,GAAOwB,KAAIC,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,mM,cCnErC,MA6CA,EA7CkBuB,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACCC,EAAAA,EAAAA,KAAC9B,EAAS,CAAA+B,UACTD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACNC,cAAe,CAAEpC,MAAO,GAAIE,SAAU,IACtCmC,SAAUA,CAACC,EAAQC,KATDC,EAACF,EAAQC,KAC7BR,GAASU,EAAAA,EAAAA,IAAMH,IACfC,EAAQG,UAAU,CAAE1C,MAAO,GAAIE,SAAU,MACzCyC,EAAAA,EAAAA,IAAa,oBAAoB,EAO9BH,CAAaF,EAAQC,EAAQ,EAE9BK,iBAAkBC,EAAYX,UAE9BY,EAAAA,EAAAA,MAACtC,EAAU,CAACuC,aAAa,MAAKb,SAAA,EAC7BY,EAAAA,EAAAA,MAACnC,EAAM,CAAAuB,SAAA,EACND,EAAAA,EAAAA,KAACpB,EAAI,CAACmC,GAAG,YAAYC,KAAG,EAAAf,SAAC,iBAGzBD,EAAAA,EAAAA,KAACpB,EAAI,CAACmC,GAAG,SAASC,KAAG,EAAAf,SAAC,eAIvBY,EAAAA,EAAAA,MAAC9B,EAAQ,CAAAkB,SAAA,EACRY,EAAAA,EAAAA,MAAA,SAAAZ,SAAA,EACCD,EAAAA,EAAAA,KAACZ,EAAW,CAAC6B,KAAK,QAAQC,KAAK,QAAQC,YAAY,WACnDnB,EAAAA,EAAAA,KAACf,EAAgB,CAACgC,KAAK,QAAQG,UAAU,aAE1CP,EAAAA,EAAAA,MAAA,SAAAZ,SAAA,EACCD,EAAAA,EAAAA,KAACzB,EAAU,CAAC0C,KAAK,WAAWC,KAAK,WAAWC,YAAY,cACxDnB,EAAAA,EAAAA,KAACf,EAAgB,CAACgC,KAAK,WAAWG,UAAU,gBAI9CpB,EAAAA,EAAAA,KAACT,EAAM,CAAC2B,KAAK,SAAQjB,UACpBD,EAAAA,EAAAA,KAACN,EAAU,CAAAO,SAAC,uBAIJ,EChDd,EARkBoB,KAEhBrB,EAAAA,EAAAA,KAAA,OAAAC,UACCD,EAAAA,EAAAA,KAACH,EAAS,K","sources":["components/Helpers/LoginSchema.js","components/LoginForm/LoginForm.Styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst LoginSchema = Yup.object().shape({\n\temail: Yup.string()\n\t  .email('Invalid email address')\n\t  .required('This is a required field'),\n\tpassword: Yup.string().required('This is a required field'),\n  });\n\n  export default LoginSchema;","/** @format */\n\nimport { Form, ErrorMessage, Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n\n  background: linear-gradient(\n    180deg,\n    rgba(196, 196, 196, 0) 25%,\n    #bedbb0 92.19%\n  );\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 20px 0 20px;\n  height: 100%;\n  min-width: 320px;\n\n`;\n\nexport const StyledForm = styled(Form)`\n\tdisplay: flex;\n\tflex-direction: column;\n\t@media (max-width: 375px) {\n\t\twidth: 100%;\n\t}\n\twidth: 335px;\n\tborder-radius: 8px;\n\tbackground: #151515;\n\tpadding: 24px;\n`;\n\nexport const NavBox = styled.div`\n\tdisplay: flex;\n\tgap: 14px;\n\tmargin-bottom: 40px;\n`;\n\nexport const Link = styled(NavLink)`\n\tcolor: #fff;\n\ttext-align: center;\n\tfont-family: Poppins;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 500;\n\tline-height: normal;\n\tletter-spacing: -0.28px;\n\ttext-decoration: none;\n`;\n\nexport const LabelBox = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 14px;\n\tmargin-bottom: 24px;\n`;\n\nexport const ErrMessageStyled = styled(ErrorMessage)`\n\tcolor: red;\n`;\n\nexport const StyledField = styled(Field)`\n\tcolor: #fff;\n\tborder-radius: 8px;\n\tborder: 1px solid #bedbb0;\n\tpadding: 14px 0px 14px 18px;\n\topacity: 0.4;\n\tbackground: #1f1f1f;\n\twidth: 100%;\n\n\tbox-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n`;\n\nexport const Button = styled.button`\n\tdisplay: flex;\n\twidth: 100%;\n\tpadding: 14px;\n\tjustify-content: center;\n\talign-items: center;\n\tborder-radius: 8px;\n\tbackground: #bedbb0;\n`;\n\nexport const ButtonText = styled.span`\n\tcolor: #161616;\n\n\ttext-align: center;\n\tfont-family: Poppins;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 500;\n\tline-height: normal;\n\tletter-spacing: -0.28px;\n`;\n","/** @format */\n\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { toastSuccess } from 'components/Helpers';\nimport LoginSchema from 'components/Helpers/LoginSchema';\nimport {\n\tButton,\n\tButtonText,\n\tContainer,\n\tErrMessageStyled,\n\tLabelBox,\n\tLink,\n\tNavBox,\n\tStyledField,\n\tStyledForm,\n} from './LoginForm.Styled';\n\nconst LoginForm = () => {\n\tconst dispatch = useDispatch();\n\tconst handleSubmit = (values, actions) => {\n\t\tdispatch(logIn(values));\n\t\tactions.resetForm({ email: '', password: '' });\n\t\ttoastSuccess('Successfuly login'); // Should be done after redux logic\n\t};\n\treturn (\n\t\t<Container>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ email: '', password: '' }}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\thandleSubmit(values, actions);\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={LoginSchema}\n\t\t\t>\n\t\t\t\t<StyledForm autoComplete='off'>\n\t\t\t\t\t<NavBox>\n\t\t\t\t\t\t<Link to='/register' end>\n\t\t\t\t\t\t\tRegistation\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to='/login' end>\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</NavBox>\n\t\t\t\t\t<LabelBox>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<StyledField name='email' type='email' placeholder='Email' />\n\t\t\t\t\t\t\t<ErrMessageStyled name='email' component='span' />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<StyledForm name='password' type='password' placeholder='Password' />\n\t\t\t\t\t\t\t<ErrMessageStyled name='password' component='span' />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</LabelBox>\n\n\t\t\t\t\t<Button type='submit'>\n\t\t\t\t\t\t<ButtonText>Log In Now</ButtonText>\n\t\t\t\t\t</Button>\n\t\t\t\t</StyledForm>\n\t\t\t</Formik>\n\t\t</Container>\n\t);\n};\n\nexport default LoginForm;\n","/** @format */\n\nimport LoginForm from 'components/LoginForm';\n\nconst LoginPage = () => {\n\treturn (\n\t\t<div>\n\t\t\t<LoginForm />\n\t\t</div>\n\t);\n};\n\nexport default LoginPage;\n"],"names":["Yup","shape","email","required","password","Container","styled","div","_templateObject","_taggedTemplateLiteral","StyledForm","Form","_templateObject2","NavBox","_templateObject3","Link","NavLink","_templateObject4","LabelBox","_templateObject5","ErrMessageStyled","ErrorMessage","_templateObject6","StyledField","Field","_templateObject7","Button","button","_templateObject8","ButtonText","span","_templateObject9","LoginForm","dispatch","useDispatch","_jsx","children","Formik","initialValues","onSubmit","values","actions","handleSubmit","logIn","resetForm","toastSuccess","validationSchema","LoginSchema","_jsxs","autoComplete","to","end","name","type","placeholder","component","LoginPage"],"sourceRoot":""}
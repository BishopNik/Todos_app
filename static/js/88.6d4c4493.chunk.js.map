{"version":3,"file":"static/js/88.6d4c4493.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","redux/columns/selectors.js","components/ScreenPage/Columns.styled.js","components/ScreenPage/Columns.jsx","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React, { useContext } from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { MainContext } from 'components/Helpers';\n\n// import { useDispatch } from 'react-redux';\n// import { boardsSlice } from 'redux/boards/boardsSlice';\n\nexport function MainComponent({ children }) {\n\t// const dispatch = useDispatch();\n\tconst { setIsOpenAddBoard } = useContext(MainContext);\n\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetIsOpenAddBoard(true);\n\t\t\t\t\t\t\t// dispatch(\n\t\t\t\t\t\t\t// \tboardsSlice.actions.openCreateEditBoardModal({ isOpen: true })\n\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  overflow-y: hidden;\n  overflow-x: auto;\n}\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: ${props => props.theme.help.modalTextMain};;\n  background-color: ${props => props.theme.profile.background};\n\n  border: none;\n  cursor: pointer;\n  height: 58px;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: ${props => props.theme.addcolum.plusBackground};\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: ${props => props.theme.addcolum.plusColor};\n`;\nexport const MainWrapper = styled.ul`\n  display: flex;\n  gap: 18px;\n`;\n","export const columnsState = state => state.columns.items;\n\nexport const columnsLoading = state => state.columns.isLoading;\n\nexport const columnsError = state => state.columns.error;","import styled from '@emotion/styled';\n\nexport const ListColumn = styled.li`\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n\n  gap: 14px;\n`;\n\nexport const List = styled.div`\n  width: 100%;\n\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  gap: 8px;\n  padding-right: 8px;\n  height: calc(100vh - 318px);\n  overflow-y: auto;\n`;\nexport const ListItem = styled.li`\n  border-radius: 8px;\n  width: 334px;\n  padding: 14px 24px;\n  background-color: #121212;\n  color: #ffffff;\n  font-weight: 500;\n  display: flex;\n  height: 58px;\n  align-items: center;\n`;\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: auto;\n`;\nexport const EditColumn = styled.svg`\n  stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n`;\nexport const DelColumn = styled.svg`\n  stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n`;\nexport const Btn = styled.button`\n  width: 334px;\n  margin-top: auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 0px;\n  background-color: #bedbb0;\n  border-radius: 8px;\n  border: none;\n  color: #161616;\n  height: 58px;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { delColumn, fetchColumnsByIdBoards } from 'redux/columns/operations';\nimport { columnsState } from 'redux/columns/selectors';\nimport {\n  ListColumn,\n  ListItem,\n  IconsContainer,\n  EditColumn,\n  DelColumn,\n  List,\n  Btn,\n} from './Columns.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nexport const Columns = ({ board }) => {\n  const dispatch = useDispatch();\n  const allColumns = useSelector(columnsState);\n\n  useEffect(() => {\n    dispatch(fetchColumnsByIdBoards(board));\n  }, [dispatch, board]);\n\n  const handleDeleteColumn = columnId => {\n    dispatch(delColumn(columnId));\n  };\n\n  return (\n    <ListColumn>\n      <List>\n        {allColumns.map(({ _id: id, name }) => (\n          <ListItem key={id}>\n            {name}\n            <IconsContainer>\n              <EditColumn type=\"button\" width=\"16\" height=\"16\">\n                <use xlinkHref={`${icon}#icon-edit`} />\n              </EditColumn>\n              <DelColumn\n                type=\"button\"\n                width=\"16\"\n                height=\"16\"\n                onClick={() => handleDeleteColumn(id)}\n              >\n                <use xlinkHref={`${icon}#icon-delete`} />\n              </DelColumn>\n            </IconsContainer>\n          </ListItem>\n        ))}\n      </List>\n      <Btn>Add another card</Btn>\n    </ListColumn>\n  );\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport {\n  BoardContainer,\n  BtnAddColumn,\n  SvagAddColumn,\n  StyledIconAdd,\n  MainWrapper,\n} from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\nimport { AddColumnModal } from 'components/Modal';\nimport { Columns } from '../Columns';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { board } = useParams();\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <BoardContainer>\n      <MainWrapper>\n        <Columns board={board} />\n        <BtnAddColumn type=\"button\" onClick={handleOpenModal}>\n          <StyledIconAdd>\n            <SvagAddColumn width=\"14\" height=\"14\">\n              <use xlinkHref={`${icon}#icon-plus`} />\n            </SvagAddColumn>\n          </StyledIconAdd>\n          <span>Add another column</span>\n        </BtnAddColumn>\n      </MainWrapper>\n      <AddColumnModal\n        board={board}\n        isOpen={isModalOpen}\n        setIsOpen={setIsModalOpen}\n      />{' '}\n    </BoardContainer>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 14px 20px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: ${props => props.theme.help.modalTextMain};\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MainComponent } from 'components/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport MainDashboard from 'components/ScreenPage/MainDashboard/MainDashboard';\nimport { HeaderDashboard } from 'components/ScreenPage/HeaderDashboard/HeaderDashboard';\nimport { AddCardModal } from 'components/Modal';\nimport { SayNameBoard } from 'components/Helpers';\n\nfunction MainTodosPage() {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst { board } = useParams();\n\n\tconst nameBoard = SayNameBoard(board);\n\n\treturn (\n\t\t<>\n\t\t\t<button\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t\tstyle={{ position: 'absolute', right: '50px', top: '150px' }}\n\t\t\t>\n\t\t\t\tAdd card\n\t\t\t</button>\n\t\t\t<AddCardModal isOpen={isOpen} onRequestClose={() => setIsOpen(false)} />\n\n\t\t\t<FilterBtn />\n\n\t\t\t{nameBoard && <HeaderDashboard title={nameBoard} />}\n\t\t\t<MainComponent>{board && <MainDashboard />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","MainComponent","_ref","children","setIsOpenAddBoard","useContext","MainContext","_jsx","_Fragment","_jsxs","onClick","BoardContainer","div","BtnAddColumn","button","help","modalTextMain","profile","background","StyledIconAdd","_templateObject3","addcolum","plusBackground","SvagAddColumn","svg","_templateObject4","plusColor","MainWrapper","ul","_templateObject5","columnsState","state","columns","items","ListColumn","li","List","ListItem","IconsContainer","EditColumn","DelColumn","_templateObject6","Btn","_templateObject7","Columns","board","dispatch","useDispatch","allColumns","useSelector","useEffect","fetchColumnsByIdBoards","map","_ref2","_id","id","name","type","width","height","xlinkHref","concat","icon","handleDeleteColumn","columnId","delColumn","MainDashboard","isModalOpen","setIsModalOpen","useState","useParams","handleOpenModal","AddColumnModal","isOpen","setIsOpen","HeaderDashboardContainer","Title","h3","HeaderDashboard","title","nameBoard","SayNameBoard","style","position","right","top","AddCardModal","onRequestClose","FilterBtn"],"sourceRoot":""}
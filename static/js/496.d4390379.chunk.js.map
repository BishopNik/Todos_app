{"version":3,"file":"static/js/496.d4390379.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","components/ScreenPage/MainDashboard/AddColumnModal/AddColumnModal.styled.js","components/ScreenPage/MainDashboard/AddColumnModal/AddColumnModal.jsx","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/Filter/filters.styled.jsx","components/Filter/ModalFilter/ModalFilter.styled.jsx","components/Filter/ModalFilter/ModalFilter.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport React from 'react';\n\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\n\nfunction MainComponent({ children }) {\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard onClick={() => alert('Create board')}>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default MainComponent;\n","import styled from '@emotion/styled';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 14px 20px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  padding: 0px 24px;\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 14px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: #ffffff;\n  background-color: #121212;\n  border: none;\n  cursor: pointer;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: #ffffff;\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: #121212;\n`;\n","import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const ModalTitle = styled.p`\n  color: #ffffff;\n  font-size: 18px;\n  margin-bottom: 24px;\n`;\nexport const StyledForm = styled.form``;\n\nexport const StyledFormField = styled.input`\n  padding: 14px 18px;\n  background: inherit;\n  border-radius: 8px;\n  border: 1px solid rgb(190, 219, 176, 0.5);\n  color: #ffffff;\n  margin-bottom: 24px;\n  transition-property: border;\n  transition: border 0.25s;\n\n  &::placeholder {\n    color: rgba(255, 255, 255, 0.3);\n  }\n\n  &:focus {\n    outline: none;\n    border: 1px solid #bedbb0;\n  }\n`;\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: red;\n  margin-bottom: 14px;\n`;\nexport const BtnAdd = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  padding: 10px 0px;\n`;\nexport const ErrorMessageText = styled.div`\n  color: #ffffff;\n  margin-top: 10px;\n`;\n","/** @format */\n\nimport { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Modal from 'react-modal';\n\nimport {\n\tModalTitle,\n\tStyledForm,\n\tStyledFormField,\n\tStyledErrorMessage,\n\tBtnAdd,\n\tErrorMessageText,\n} from './AddColumnModal.styled';\nimport { toast } from 'react-hot-toast';\n\nModal.setAppElement('#modal-root');\n\nconst customStyles = {\n\toverlay: {\n\t\tbackgroundColor: 'rgba(78, 74, 72, 0.6)',\n\t},\n\tcontent: {\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\tright: 'auto',\n\t\tbottom: 'auto',\n\t\tmarginRight: '-50%',\n\t\ttransform: 'translate(-50%, -50%)',\n\t\tpadding: 0,\n\t\tborderRadius: 5,\n\t\tborder: '1px solid #151515',\n\t\tbackgroundColor: '#151515',\n\t\tboxShadow: '0px 4px 15px rgba(0, 0, 0, 0.2)',\n\t\tminWidth: '350px',\n\t\tmaxWidth: '400px',\n\t},\n};\n\nconst initialValues = {\n\ttitle: '',\n};\nconst columnSchema = Yup.object().shape({\n\ttitle: Yup.string().required('Title is required'),\n});\n\nexport const AddColumnModal = ({ isOpen, onClose }) => {\n\tconst [errorMessage, setErrorMessage] = useState(null);\n\n\tconst handleSubmit = ({ title }, { setSubmitting }) => {\n\t\tsetSubmitting(true);\n\n\t\tif (!title.trim()) {\n\t\t\tsetErrorMessage('Title is required');\n\t\t\tsetSubmitting(false);\n\t\t\treturn;\n\t\t}\n\t\ttoast.success('Column created');\n\t\tonClose();\n\t};\n\n\treturn (\n\t\t<Modal isOpen={isOpen} onRequestClose={onClose} style={customStyles}>\n\t\t\t<>\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={initialValues}\n\t\t\t\t\tvalidationSchema={columnSchema}\n\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t>\n\t\t\t\t\t{({ isSubmitting }) => (\n\t\t\t\t\t\t<StyledForm>\n\t\t\t\t\t\t\t<ModalTitle>Add column</ModalTitle>\n\t\t\t\t\t\t\t<StyledFormField\n\t\t\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\t\tplaceholder='Title'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<StyledErrorMessage name='title' component='div' />\n\t\t\t\t\t\t\t<BtnAdd type='submit' disabled={isSubmitting}>\n\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t</BtnAdd>\n\t\t\t\t\t\t\t{errorMessage && <ErrorMessageText>{errorMessage}</ErrorMessageText>}\n\t\t\t\t\t\t</StyledForm>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</>\n\t\t</Modal>\n\t);\n};\n","import React, { useState } from 'react';\nimport {\n  BoardContainer,\n  BtnAddColumn,\n  SvagAddColumn,\n  StyledIconAdd,\n} from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nimport { AddColumnModal } from 'components/ScreenPage/MainDashboard/AddColumnModal/AddColumnModal';\n\nconst MainDashboard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <BoardContainer>\n      <BtnAddColumn type=\"button\" onClick={handleOpenModal}>\n        {' '}\n        <StyledIconAdd>\n          <SvagAddColumn width=\"14\" height=\"14\">\n            <use xlinkHref={`${icon}#icon-plus`} />\n          </SvagAddColumn>\n        </StyledIconAdd>\n        <span>Add another column</span>\n      </BtnAddColumn>\n      <AddColumnModal isOpen={isModalOpen} onClose={handleCloseModal} />{' '}\n    </BoardContainer>\n  );\n};\n\nexport default MainDashboard;\n","import styled from \"styled-components\";\n\nexport const FilterBtn = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ngap: 8px;\nwidth: 64px;\nheight: 20px;\npadding: 0;\nfont-weight: 500;\nfont-size: 14px;\nletter-spacing: -0.02em;\ncolor: rgba(255, 255, 255, 0.8);\nborder: none;\ncursor: pointer;\n`\n\nexport const FilterIcon = styled.svg`\n    width: 16px;\n    height: 16px;\n`","import styled from \"styled-components\";\n\nexport const customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(78, 74, 72, 0.6)',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nexport const RadioButton = styled.label`\n  display:flex;\n  margin-right: 10px;\n`;\n\nexport const RadioButtonGroup = styled.div`\n  margin-top: 20px;\n`;","import { useState, React } from 'react';\nimport Modal from 'react-modal';\nimport { customStyles, RadioButton, RadioButtonGroup } from './ModalFilter.styled.jsx';\n\nModal.setAppElement('#modal-root');\n\nconst ModalFilter = ({ isModalOpen, setIsModalOpen }) => {\n\n  const [selectedOption, setSelectedOption] = useState('Without priority');\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={() => setIsModalOpen(false)} \n      style={customStyles}\n      contentLabel=\"onRequestClose\"\n    >\n      <h1>Filters</h1>\n      <button type=\"button\" onClick={() => setIsModalOpen(false)}> \n        X\n      </button>\n      <h2>Label color</h2>\n      <RadioButtonGroup>\n        <RadioButton>\n          <input\n            type=\"radio\"\n            value=\"Without priority\"\n            checked={selectedOption === 'Without priority'}\n            onChange={handleOptionChange}\n          />\n          Without priority\n        </RadioButton>\n        <RadioButton>\n          <input\n            type=\"radio\"\n            value=\"Low\"\n            checked={selectedOption === 'Low'}\n            onChange={handleOptionChange}\n          />\n          Low\n        </RadioButton>\n        <RadioButton>\n          <input\n            type=\"radio\"\n            value=\"Medium\"\n            checked={selectedOption === 'Medium'}\n            onChange={handleOptionChange}\n          />\n          Medium\n        </RadioButton>\n        <RadioButton>\n          <input\n            type=\"radio\"\n            value=\"High\"\n            checked={selectedOption === 'High'}\n            onChange={handleOptionChange}\n          />\n          High\n        </RadioButton>\n      </RadioButtonGroup>\n    </Modal>\n  );\n};\n\nexport default ModalFilter;\n","/** @format */\n\nimport React, {useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MainComponent from 'components/MainComponent/MainComponent';\nimport { HeaderDashboard } from 'components/ScreenPage/HeaderDashboard/HeaderDashboard';\nimport MainDashboard from 'components/ScreenPage/MainDashboard/MainDashboard';\nimport { ModalFilter } from 'components/Filter';\nimport {\n\tButtonFilter,\n\tFiltersIcon,\n\tTextButton,\n} from 'components/MainComponent/MainComponent.styled';\n\nfunction MainTodosPage() {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n  const { board } = useParams();\n\n\tconst openModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ButtonFilter type='button' onClick={openModal}>\n\t\t\t\t<FiltersIcon name='filters' />\n\t\t\t\t<TextButton>Filters</TextButton>\n\t\t\t</ButtonFilter>\n\t\t\t<ModalFilter isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\n\t\t\t<MainComponent>\n         <HeaderDashboard title={board} />\n        <MainDashboard/>\n      </MainComponent> \n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["_ref","children","_jsx","_Fragment","_jsxs","TextEmptyBoard","ButtonCreateBoard","onClick","alert","HeaderDashboardContainer","styled","div","_templateObject","_taggedTemplateLiteral","Title","h3","_templateObject2","HeaderDashboard","title","BoardContainer","BtnAddColumn","button","StyledIconAdd","span","_templateObject3","SvagAddColumn","svg","_templateObject4","ModalTitle","p","StyledForm","form","StyledFormField","input","StyledErrorMessage","ErrorMessage","BtnAdd","_templateObject5","ErrorMessageText","_templateObject6","Modal","customStyles","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","padding","borderRadius","border","boxShadow","minWidth","maxWidth","initialValues","columnSchema","Yup","shape","required","AddColumnModal","isOpen","onClose","errorMessage","setErrorMessage","useState","onRequestClose","style","Formik","validationSchema","onSubmit","handleSubmit","_ref2","_ref3","setSubmitting","trim","toast","success","_ref4","isSubmitting","autoFocus","type","name","placeholder","component","disabled","MainDashboard","isModalOpen","setIsModalOpen","handleOpenModal","width","height","xlinkHref","concat","icon","handleCloseModal","RadioButton","label","RadioButtonGroup","selectedOption","setSelectedOption","handleOptionChange","e","target","value","contentLabel","checked","onChange","board","useParams","ButtonFilter","openModal","FiltersIcon","TextButton","ModalFilter","MainComponent"],"sourceRoot":""}
{"version":3,"file":"static/js/368.6978eb7b.chunk.js","mappings":"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","sources":["components/Helpers/LoginSchema.js","components/LoginForm/LoginForm.Styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst LoginSchema = Yup.object().shape({\n\temail: Yup.string()\n\t  .email('Invalid email address')\n\t  .required('This is a required field'),\n\tpassword: Yup.string().required('This is a required field'),\n  });\n\n  export default LoginSchema;","/** @format */\n\nimport Icon from 'components/Icon/Icon.jsx';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  background: linear-gradient(\n    180deg,\n    rgba(196, 196, 196, 0) 25%,\n    #bedbb0 92.19%\n  );\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 20px 0 20px;\n  height: 100vh;\n  min-width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  @media (min-width: 375px) and (max-width: 767px) {\n    width: 375px;\n  }\n  @media (max-width: 1439px) {\n    max-width: 768px;\n  }\n  @media (min-width: 1440px) {\n    width: 1440px;\n  }\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 375px) {\n    width: 100%;\n    padding: 24px;\n  }\n  @media (min-width: 376px) and (max-width: 767px) {\n    width: 335px;\n    padding: 24px;\n  }\n  @media (min-width: 768px) {\n    width: 424px;\n    padding: 40px;\n  }\n  border-radius: 8px;\n  background: #151515;\n`;\n\nexport const NavBox = styled.div`\n  display: flex;\n  gap: 14px;\n  margin-bottom: 40px;\n`;\n\nexport const Link = styled(NavLink)`\ncolor: ${({ end }) => (end ? '#FFFFFF' : '#FFFFFF4D')};\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  text-decoration: none;\n`;\n\nexport const LabelBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n  margin-bottom: 24px;\n  @media (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const ErrMessageStyled = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledField = styled(Field)`\n  color: #fff;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  padding: 14px 35px 14px 18px;\n  opacity: 0.4;\n  background: #1f1f1f;\n  width: 100%;\n\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n`;\n\nexport const IconHideShow = styled(Icon)`\n  width: 18px;\n  height: 18px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: #bedbb0;\n`;\n\nexport const ButtonText = styled.span`\n  color: #161616;\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n","/** @format */\n\nimport { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport LoginSchema from 'components/Helpers/LoginSchema';\nimport {\n\tButton,\n\tButtonText,\n\tContainer,\n\tErrMessageStyled,\n\tIconHideShow,\n\tLabelBox,\n\tLink,\n\tNavBox,\n\tStyledField,\n\tStyledForm,\n} from './LoginForm.Styled';\nimport { useState } from 'react';\n\nconst LoginForm = () => {\n\tconst dispatch = useDispatch();\n\tconst [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\tconst handleSubmit = (values, actions) => {\n\t\tdispatch(logIn(values));\n\t\tactions.resetForm({ email: '', password: '' });\n\t};\n\treturn (\n\t\t<Container>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{ email: '', password: '' }}\n\t\t\t\tonSubmit={(values, actions) => {\n\t\t\t\t\thandleSubmit(values, actions);\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={LoginSchema}\n\t\t\t>\n\t\t\t\t<StyledForm autoComplete='off'>\n\t\t\t\t\t<NavBox>\n\t\t\t\t\t\t<Link to='/register' >\n\t\t\t\t\t\t\tRegistation\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to='/login' end>\n\t\t\t\t\t\t\tLog In\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</NavBox>\n\t\t\t\t\t<LabelBox>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t<StyledField name='email' type='email' placeholder='Email' />\n\t\t\t\t\t\t\t<ErrMessageStyled name='email' component='span' />\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<label style={{ position: 'relative' }}>\n                <StyledField\n                  name=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder=\"Create a password\"\n                />\n                <IconHideShow\n                  name=\"hide-show\"\n                  onClick={togglePasswordVisibility}\n                  style={{\n                    position: 'absolute',\n                    top: '50%',\n                    right: '18px',\n                    transform: 'translateY(-50%)',\n                    cursor: 'pointer',\n\t\t\t\t\tstroke: '#FFFFFF4D',\n                  }}\n                >\n                  {showPassword ? 'Hide' : 'Show'}\n                </IconHideShow>\n                <ErrMessageStyled name=\"password\" component=\"span\" />\n              </label>\n\t\t\t\t\t</LabelBox>\n\n\t\t\t\t\t<Button type='submit'>\n\t\t\t\t\t\t<ButtonText>Log In Now</ButtonText>\n\t\t\t\t\t</Button>\n\t\t\t\t</StyledForm>\n\t\t\t</Formik>\n\t\t</Container>\n\t);\n};\n\nexport default LoginForm;\n","/** @format */\n\nimport LoginForm from 'components/LoginForm';\n\nconst LoginPage = () => {\n\treturn (\n\t\t<div>\n\t\t\t<LoginForm />\n\t\t</div>\n\t);\n};\n\nexport default LoginPage;\n"],"names":["Yup","shape","email","required","password","Container","styled","div","_templateObject","_taggedTemplateLiteral","StyledForm","Form","_templateObject2","NavBox","_templateObject3","Link","NavLink","_templateObject4","_ref","end","LabelBox","_templateObject5","ErrMessageStyled","ErrorMessage","_templateObject6","StyledField","Field","_templateObject7","IconHideShow","Icon","_templateObject8","Button","button","_templateObject9","ButtonText","span","_templateObject10","LoginForm","dispatch","useDispatch","showPassword","setShowPassword","useState","_jsx","children","Formik","initialValues","onSubmit","values","actions","handleSubmit","logIn","resetForm","validationSchema","LoginSchema","_jsxs","autoComplete","to","name","type","placeholder","component","style","position","onClick","togglePasswordVisibility","top","right","transform","cursor","stroke","LoginPage"],"sourceRoot":""}
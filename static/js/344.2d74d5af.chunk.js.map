{"version":3,"file":"static/js/344.2d74d5af.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","redux/columns/selectors.js","components/Column/Column.styled.jsx","components/Card/Card.styled.jsx","components/Card/Card.jsx","components/Column/Column.jsx","components/ScreenPage/Columns.jsx","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React, { useContext } from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { MainContext } from 'components/Helpers';\n\n// import { useDispatch } from 'react-redux';\n// import { boardsSlice } from 'redux/boards/boardsSlice';\n\nexport function MainComponent({ children }) {\n\t// const dispatch = useDispatch();\n\tconst { setIsOpenAddBoard } = useContext(MainContext);\n\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetIsOpenAddBoard(true);\n\t\t\t\t\t\t\t// dispatch(\n\t\t\t\t\t\t\t// \tboardsSlice.actions.openCreateEditBoardModal({ isOpen: true })\n\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  overflow-y: hidden;\n  overflow-x: auto;\n}\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: ${props => props.theme.help.modalTextMain};;\n  background-color: ${props => props.theme.profile.background};\n\n  border: none;\n  cursor: pointer;\n  height: 58px;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: ${props => props.theme.addcolum.plusBackground};\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: ${props => props.theme.addcolum.plusColor};\n`;\nexport const MainWrapper = styled.ul`\n  display: flex;\n  gap: 18px;\n`;\n","export const columnsState = state => state.columns.items;\n\nexport const columnsLoading = state => state.columns.isLoading;\n\nexport const columnsError = state => state.columns.error;","/** @format */\n\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n\twidth: 335px;\n\tdisplay: flex;\n\tflex-direction: column;\n`;\n\nexport const Title = styled.span`\n\tcolor: ${props => props.theme.colum.textMain};\n\tfont-size: 18px;\n`;\n","import styled from 'styled-components';\nimport Icon from '../Icon';\n\nexport const CardContainer = styled.div`\n  width: 335px;\n  height: 154px;\n  display: flex;\n  flex-direction: row;\n  background-color: ${props => props.theme.sidebar.background};\n  border-radius: 7px;\n  overflow: hidden;\n`;\n\nexport const PriorityLine = styled.div`\n  width: 4px;\n  background-color: rgba(224, 156, 181, 1);\n`;\n\nexport const CardContent = styled.div`\n  width: 331px;\n  padding: 14px 20px 14px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const TextContent = styled.div``;\n\nexport const Title = styled.h4`\n  font-size: 14px;\n  font-weight: bold;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.sidebar.textMain};\n  margin: 0;\n`;\n\nexport const DescriptionText = styled.p`\n  margin: 0;\n  font-size: 12px;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  line-height: 1.45;\n  color: ${props => props.theme.sidebar.textSecondary};\n  margin-top: 8px;\n  width: 290px;\n  height: 38px;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: default;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-top: solid 1px ${props => props.theme.sidebar.border};\n  height: 45px;\n  align-items: flex-end;\n`;\n\nexport const Priority = styled.div`\n  height: 31px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const InfoTitle = styled.p`\n  font-size: 8px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  cursor: default;\n  color: ${props => props.theme.sidebar.textSecondary};\n`;\n\nexport const PriorityLevel = styled.p`\n  position: relative;\n  font-size: 10px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.sidebar.textMain};\n  padding-left: 16px;\n  cursor: default;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: rgba(224, 156, 181, 1);\n  }\n`;\n\nexport const Dedline = styled.div`\n  height: 31px;\n  margin-left: 14px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const Date = styled.p`\n  font-size: 10px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  cursor: default;\n  color: ${props => props.theme.sidebar.textMain};\n`;\n\nexport const BellIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  margin-left: auto;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: 13px;\n`;\n\nexport const MoveIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n\nexport const EditIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n\nexport const DelIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n","import React from 'react';\n\nimport {\n  CardContainer,\n  PriorityLine,\n  CardContent,\n  TextContent,\n  Title,\n  DescriptionText,\n  Info,\n  Priority,\n  PriorityLevel,\n  Dedline,\n  InfoTitle,\n  Date,\n  IconContainer,\n  BellIcon,\n  MoveIcon,\n  EditIcon,\n  DelIcon,\n} from './Card.styled';\n\nexport const Card = ({ item }) => {\n  const { name, priority, deadline } = item;\n\n  return (\n    <>\n      <CardContainer>\n        <PriorityLine />\n        <CardContent>\n          <TextContent>\n            <Title>{name}</Title>\n            <DescriptionText>\n              Conduct in-depth research and analysis on the project's topic,\n              gather relevant data, and identify key insights to inform\n              decision-making and project planning.\n            </DescriptionText>\n          </TextContent>\n          <Info>\n            <Priority>\n              <InfoTitle>Priority</InfoTitle>\n              <PriorityLevel>{priority}</PriorityLevel>\n            </Priority>\n            <Dedline>\n              <InfoTitle>Deadline</InfoTitle>\n              <Date>{deadline}</Date>\n            </Dedline>\n            <BellIcon name=\"bell\" />\n            <IconContainer>\n              <MoveIcon name=\"process-task\" />\n              <EditIcon name=\"edit\" />\n              <DelIcon name=\"delete\" />\n            </IconContainer>\n          </Info>\n        </CardContent>\n      </CardContainer>\n    </>\n  );\n};\n","/** @format */\n\nimport React, { useState, useEffect } from 'react';\n\nimport { Wrapper, Title } from './Column.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cardsState } from 'redux/cards/selectors';\nimport { fetchCardsByColumnId } from 'redux/cards/operations';\n\nimport {\n\tButton,\n\tButtonText,\n\tIconWrapper,\n\tAddIcon,\n} from '../../components/Modal/CreateNewBoardModal/CreateNewBoardModal.styled';\n\nimport { AddCardModal } from 'components/Modal';\nimport { Card } from 'components/Card/Card';\n\nexport const Column = ({ name, id }) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst cards = useSelector(cardsState);\n\tconst dispatch = useDispatch();\n\n\tconst cardForColumn = cards.filter(card => card.columnId === id);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchCardsByColumnId(id));\n\t}, [dispatch, id]);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Title>{name}</Title>\n\t\t\t{cardForColumn.map(item => (\n\t\t\t\t<Card key={item._id} item={item} />\n\t\t\t))}\n\t\t\t<Button type='button' onClick={() => setIsOpen(true)}>\n\t\t\t\t<IconWrapper>\n\t\t\t\t\t<AddIcon name='add-board' />\n\t\t\t\t</IconWrapper>\n\t\t\t\t<ButtonText>{!cardForColumn.length ? 'Add card' : 'Add another card'}</ButtonText>\n\t\t\t</Button>\n\n\t\t\t<AddCardModal isOpen={isOpen} onRequestClose={() => setIsOpen(false)} columnId={id} />\n\t\t</Wrapper>\n\t);\n};\n","/** @format */\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchColumnsByIdBoards } from 'redux/columns/operations';\nimport { columnsState } from 'redux/columns/selectors';\nimport { Column } from 'components/Column/Column';\n\nexport const Columns = ({ board }) => {\n\tconst dispatch = useDispatch();\n\n\tconst allColumns = useSelector(columnsState);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchColumnsByIdBoards(board));\n\t}, [dispatch, board]);\n\n\tconsole.log('allColumns', allColumns);\n\n\treturn (\n\t\t<div>\n\t\t\t{allColumns.map(({ _id: id, name }) => (\n\t\t\t\t<Column name={name} id={id} key={id} />\n\t\t\t))}\n\t\t</div>\n\t\t// =======\n\t\t// import {\n\t\t//   ListColumn,\n\t\t//   ListItem,\n\t\t//   IconsContainer,\n\t\t//   EditColumn,\n\t\t//   DelColumn,\n\t\t//   List,\n\t\t//   Btn,\n\t\t// } from './Columns.styled';\n\t\t// import icon from 'components/Icon/icon-spraite.svg';\n\n\t\t// export const Columns = ({ board }) => {\n\t\t//   const dispatch = useDispatch();\n\t\t//   const allColumns = useSelector(columnsState);\n\n\t\t//   useEffect(() => {\n\t\t//     dispatch(fetchColumnsByIdBoards(board));\n\t\t//   }, [dispatch, board]);\n\n\t\t//   const handleDeleteColumn = columnId => {\n\t\t//     dispatch(delColumn(columnId));\n\t\t//   };\n\n\t\t//   return (\n\t\t//     <ListColumn>\n\t\t//       <List>\n\t\t//         {allColumns.map(({ _id: id, name }) => (\n\t\t//           <ListItem key={id}>\n\t\t//             {name}\n\t\t//             <IconsContainer>\n\t\t//               <EditColumn type=\"button\" width=\"16\" height=\"16\">\n\t\t//                 <use xlinkHref={`${icon}#icon-edit`} />\n\t\t//               </EditColumn>\n\t\t//               <DelColumn\n\t\t//                 type=\"button\"\n\t\t//                 width=\"16\"\n\t\t//                 height=\"16\"\n\t\t//                 onClick={() => handleDeleteColumn(id)}\n\t\t//               >\n\t\t//                 <use xlinkHref={`${icon}#icon-delete`} />\n\t\t//               </DelColumn>\n\t\t//             </IconsContainer>\n\t\t//           </ListItem>\n\t\t//         ))}\n\t\t//       </List>\n\t\t//       <Btn>Add another card</Btn>\n\t\t//     </ListColumn>\n\t\t// >>>>>>> main\n\t);\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport {\n  BoardContainer,\n  BtnAddColumn,\n  SvagAddColumn,\n  StyledIconAdd,\n  MainWrapper,\n} from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\nimport { AddColumnModal } from 'components/Modal';\nimport { Columns } from '../Columns';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { board } = useParams();\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <BoardContainer>\n      <MainWrapper>\n        <Columns board={board} />\n        <BtnAddColumn type=\"button\" onClick={handleOpenModal}>\n          <StyledIconAdd>\n            <SvagAddColumn width=\"14\" height=\"14\">\n              <use xlinkHref={`${icon}#icon-plus`} />\n            </SvagAddColumn>\n          </StyledIconAdd>\n          <span>Add another column</span>\n        </BtnAddColumn>\n      </MainWrapper>\n      <AddColumnModal\n        board={board}\n        isOpen={isModalOpen}\n        setIsOpen={setIsModalOpen}\n      />\n    </BoardContainer>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 14px 20px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: ${props => props.theme.help.modalTextMain};\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MainComponent } from 'components/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport MainDashboard from 'components/ScreenPage/MainDashboard/MainDashboard';\nimport { HeaderDashboard } from 'components/ScreenPage/HeaderDashboard/HeaderDashboard';\nimport { SayNameBoard } from 'components/Helpers';\n\nfunction MainTodosPage() {\n\tconst { board } = useParams();\n\tconst nameBoard = SayNameBoard(board);\n\n\treturn (\n\t\t<>\n\t\t\t<FilterBtn />\n\t\t\t{nameBoard && <HeaderDashboard title={nameBoard} />}\n\t\t\t<MainComponent>{board && <MainDashboard />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","MainComponent","_ref","children","setIsOpenAddBoard","useContext","MainContext","_jsx","_Fragment","_jsxs","onClick","BoardContainer","div","BtnAddColumn","button","help","modalTextMain","profile","background","StyledIconAdd","_templateObject3","addcolum","plusBackground","SvagAddColumn","svg","_templateObject4","plusColor","MainWrapper","ul","_templateObject5","columnsState","state","columns","items","Wrapper","Title","colum","textMain","CardContainer","sidebar","PriorityLine","CardContent","TextContent","h4","DescriptionText","_templateObject6","Info","_templateObject7","border","Priority","_templateObject8","InfoTitle","_templateObject9","PriorityLevel","_templateObject10","Dedline","_templateObject11","Date","_templateObject12","BellIcon","Icon","_templateObject13","projectIcon","IconContainer","_templateObject14","MoveIcon","_templateObject15","EditIcon","_templateObject16","DelIcon","_templateObject17","Card","item","name","priority","deadline","Column","id","isOpen","setIsOpen","useState","cards","useSelector","cardsState","dispatch","useDispatch","cardForColumn","filter","card","columnId","useEffect","fetchCardsByColumnId","map","_id","Button","type","IconWrapper","AddIcon","ButtonText","length","AddCardModal","onRequestClose","Columns","board","allColumns","fetchColumnsByIdBoards","console","log","_ref2","MainDashboard","isModalOpen","setIsModalOpen","useParams","handleOpenModal","width","height","xlinkHref","concat","icon","AddColumnModal","HeaderDashboardContainer","h3","HeaderDashboard","title","nameBoard","SayNameBoard","FilterBtn"],"sourceRoot":""}
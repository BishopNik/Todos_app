{"version":3,"file":"static/js/908.12d9476f.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","redux/columns/selectors.js","components/Column/Column.styled.jsx","components/Tooltip/Tooltip.styled.jsx","components/Tooltip/Tooltip.jsx","components/Card/Card.styled.jsx","components/Card/Card.jsx","components/Column/Column.jsx","components/ScreenPage/Columns/Columns.styled.js","components/ScreenPage/Columns/Columns.jsx","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React, { useContext } from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { MainContext } from 'components/Helpers';\n\n// import { useDispatch } from 'react-redux';\n// import { boardsSlice } from 'redux/boards/boardsSlice';\n\nexport function MainComponent({ children }) {\n\t// const dispatch = useDispatch();\n\tconst { setIsOpenAddBoard } = useContext(MainContext);\n\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetIsOpenAddBoard(true);\n\t\t\t\t\t\t\t// dispatch(\n\t\t\t\t\t\t\t// \tboardsSlice.actions.openCreateEditBoardModal({ isOpen: true })\n\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","/** @format */\n\n// MainDashboard.styled.js\nimport styled from 'styled-components';\nimport Icon from 'components/Icon';\n\nexport const BoardContainer = styled.div`\n\toverflow-y: hidden;\n\toverflow-x: auto;\n\tdisplay: flex;\n\tgap: 20px;\n\tpadding: 0px 24px;\n\tflex-grow: 1;\n\tpadding-bottom: 36px;\n\n\t@media screen and (min-width: 768px) {\n\t\tpadding-bottom: 64px;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tpadding-bottom: 28px;\n\t}\n`;\n\nexport const BtnAddColumn = styled.button`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tpadding: 15px 58px;\n\tfont-size: 14px;\n\tfont-weight: 500;\n\tborder-radius: 8px;\n\twidth: 334px;\n\tcolor: ${props => props.theme.help.modalTextMain};\n\tbackground-color: ${props => props.theme.profile.background};\n\n\tborder: none;\n\tcursor: pointer;\n\theight: 58px;\n`;\n\nexport const StyledIconAdd = styled.span`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 28px;\n\theight: 28px;\n\tmargin-right: 8px;\n\tbackground-color: ${props => props.theme.addcolum.plusBackground};\n\tborder-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled(Icon)`\n\tstroke: ${props => props.theme.addcolum.plusColor};\n\twidth: 14px;\n\theight: 14px;\n`;\n","export const columnsState = state => state.columns.items;\n\nexport const columnsLoading = state => state.columns.isLoading;\n\nexport const columnsError = state => state.columns.error;","/** @format */\n\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.li`\n\twidth: 335px;\n\tdisplay: grid;\n\tgap: 8px;\n\tgrid-template-columns: 1fr;\n\tgrid-template-areas:\n\t\t'title'\n\t\t'task'\n\t\t'add';\n\tgrid-template-rows: 56px auto 56px;\n`;\n\nexport const Title = styled.span`\n\tcolor: ${props => props.theme.colum.textMain};\n\tfont-size: 18px;\n\tborder-radius: 8px;\n\twidth: 334px;\n\tpadding: 14px 24px;\n\tbackground-color: #121212;\n\tcolor: #ffffff;\n\tfont-size: 14px;\n\tfont-weight: 500;\n\tdisplay: flex;\n\theight: 58px;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\nexport const List = styled.div`\n\tgrid-area: title;\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n\tpadding: 0;\n\tgap: 8px;\n\toverflow-y: auto;\n`;\n\nexport const ListTasks = styled.div`\n\tgrid-area: task;\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n\tpadding: 0;\n\tgap: 8px;\n\toverflow-y: scroll;\n`;\n\nexport const IconsContainer = styled.div`\n\tgrid-area: add;\n\tdisplay: flex;\n\tgap: 8px;\n\tmargin-left: auto;\n`;\n\nexport const EditColumn = styled.svg`\n\tstroke: rgba(255, 255, 255, 0.5);\n\tcursor: pointer;\n`;\n\nexport const DelColumn = styled.svg`\n\tstroke: rgba(255, 255, 255, 0.5);\n\tcursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const TooltipWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n`;\n\nexport const TooltipContent = styled.div`\n  background: ${({ theme }) => theme.modal.backgroundMain};  \n  text-align: center;\n  border-radius: 8px;\n  padding: 5px;\n  position: absolute;\n  z-index: 1;\n  bottom: 125%;\n  left: 50%;\n  margin-left: -60px;\n  width: 120px;\n`;\n\nexport const TooltipButton = styled.button`\n  background-color: transparent;\n  color: #BEDBB0;\n  border: none;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: #fff;\n  }\n`;\n\nexport const Icon = styled.svg`\nwidth: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;","import React, { useState } from 'react';\nimport { TooltipWrapper, TooltipButton, TooltipContent } from './Tooltip.styled.jsx';\nimport Icon from 'components/Icon/Icon.jsx';\n\nconst Tooltip = ({ isOpen, onRequestClose, onClick }) => {\n    const [setSelectedOption] = useState(null);\n\n  const handleOptionClick = (option) => {\n    setSelectedOption(option);\n    onRequestClose(); // При кліку на опцію закриваємо Tooltip\n  };\n\n  return (\n    <TooltipWrapper isOpen={isOpen}>\n      {isOpen && (\n        <TooltipContent>\n          <TooltipButton onClick={() => handleOptionClick('inProgress')}>\n            In Progress\n            <Icon name=\"process-task\" /> {/* Використовуємо компонент Icon */}\n          </TooltipButton>\n          <TooltipButton onClick={() => handleOptionClick('done')}>\n            Done\n            <Icon name=\"process-task\" /> {/* Використовуємо компонент Icon */}\n          </TooltipButton>\n        </TooltipContent>\n      )}\n    </TooltipWrapper>\n  );\n};\n\nexport default Tooltip;","import styled from 'styled-components';\nimport Icon from '../Icon';\n\nexport const CardContainer = styled.div`\n  width: 335px;\n  height: 154px;\n  display: flex;\n  flex-direction: row;\n  background-color: ${props => props.theme.sidebar.background};\n  border-radius: 7px;\n`;\n\nexport const PriorityLine = styled.div`\n  width: 4px;\n  background-color: rgba(224, 156, 181, 1);\n`;\n\nexport const CardContent = styled.div`\n  width: 331px;\n  padding: 14px 20px 14px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const TextContent = styled.div``;\n\nexport const Title = styled.h4`\n  font-size: 14px;\n  font-weight: bold;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.sidebar.textMain};\n  margin: 0;\n`;\n\nexport const DescriptionText = styled.p`\n  margin: 0;\n  font-size: 12px;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  line-height: 1.45;\n  color: ${props => props.theme.sidebar.textSecondary};\n  margin-top: 8px;\n  width: 290px;\n  height: 38px;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: default;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-top: solid 1px ${props => props.theme.sidebar.border};\n  height: 45px;\n  align-items: flex-end;\n`;\n\nexport const Priority = styled.div`\n  height: 31px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const InfoTitle = styled.p`\n  font-size: 8px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  cursor: default;\n  color: ${props => props.theme.sidebar.textSecondary};\n`;\n\nexport const PriorityLevel = styled.p`\n  position: relative;\n  font-size: 10px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.sidebar.textMain};\n  padding-left: 16px;\n  cursor: default;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: rgba(224, 156, 181, 1);\n  }\n`;\n\nexport const Dedline = styled.div`\n  height: 31px;\n  margin-left: 14px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const Date = styled.p`\n  font-size: 10px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  cursor: default;\n  color: ${props => props.theme.sidebar.textMain};\n`;\n\nexport const BellIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  margin-left: auto;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: 13px;\n`;\n\nexport const MoveIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n\nexport const EditIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n\nexport const DelIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport Tooltip from 'components/Tooltip';\nimport {\n\tCardContainer,\n\tPriorityLine,\n\tCardContent,\n\tTextContent,\n\tTitle,\n\tDescriptionText,\n\tInfo,\n\tPriority,\n\tPriorityLevel,\n\tDedline,\n\tInfoTitle,\n\tDate,\n\tIconContainer,\n\tBellIcon,\n\tMoveIcon,\n\tEditIcon,\n\tDelIcon,\n} from './Card.styled';\n\nexport const Card = ({ item }) => {\n\tconst { name, priority, deadline } = item;\n\tconst [isTooltipOpen, setIsTooltipOpen] = useState(false);\n\n\tconst closeTooltip = () => {\n\t\tsetIsTooltipOpen(false);\n\t};\n\n\tconst handleOptionClick = option => {\n\t\tcloseTooltip();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<CardContainer>\n\t\t\t\t<PriorityLine />\n\t\t\t\t<CardContent>\n\t\t\t\t\t<TextContent>\n\t\t\t\t\t\t<Title>{name}</Title>\n\t\t\t\t\t\t<DescriptionText>\n\t\t\t\t\t\t\tConduct in-depth research and analysis on the project's topic, gather\n\t\t\t\t\t\t\trelevant data, and identify key insights to inform decision-making and\n\t\t\t\t\t\t\tproject planning.\n\t\t\t\t\t\t</DescriptionText>\n\t\t\t\t\t</TextContent>\n\t\t\t\t\t<Info>\n\t\t\t\t\t\t<Priority>\n\t\t\t\t\t\t\t<InfoTitle>Priority</InfoTitle>\n\t\t\t\t\t\t\t<PriorityLevel>{priority}</PriorityLevel>\n\t\t\t\t\t\t</Priority>\n\t\t\t\t\t\t<Dedline>\n\t\t\t\t\t\t\t<InfoTitle>Deadline</InfoTitle>\n\t\t\t\t\t\t\t<Date>{deadline}</Date>\n\t\t\t\t\t\t</Dedline>\n\t\t\t\t\t\t<BellIcon name='bell' />\n\t\t\t\t\t\t<IconContainer>\n\t\t\t\t\t\t\t<MoveIcon name='process-task' onClick={() => setIsTooltipOpen(true)} />\n\t\t\t\t\t\t\t<EditIcon name='edit' onClick={() => console.log('edit')} />\n\t\t\t\t\t\t\t<DelIcon name='delete' onClick={() => console.log('del')} />\n\t\t\t\t\t\t</IconContainer>\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tisOpen={isTooltipOpen}\n\t\t\t\t\t\t\tonRequestClose={closeTooltip}\n\t\t\t\t\t\t\thandleOptionClick={handleOptionClick}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Info>\n\t\t\t\t</CardContent>\n\t\t\t</CardContainer>\n\t\t</>\n\t);\n};\n","/** @format */\n\nimport React, { useContext, useState, useEffect } from 'react';\n\nimport {\n\tWrapper,\n\tTitle,\n\tIconsContainer,\n\tEditColumn,\n\tDelColumn,\n\tList,\n\tListTasks,\n} from './Column.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cardsState } from 'redux/cards/selectors';\nimport { fetchCardsByColumnId } from 'redux/cards/operations';\n\nimport {\n\tButton,\n\tButtonText,\n\tIconWrapper,\n\tAddIcon,\n} from 'components/Modal/CreateNewBoardModal/CreateNewBoardModal.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nimport { AddCardModal } from 'components/Modal';\nimport { Card } from 'components/Card/Card';\nimport { delColumn } from 'redux/columns/operations';\nimport { MainContext } from 'components/Helpers';\nimport { delCard } from 'redux/cards/operations';\n\nexport const Column = ({ name, id, column }) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst [cardForEditing, setCardForEditing] = useState(null);\n\tconst cards = useSelector(cardsState);\n\tconst dispatch = useDispatch();\n\tconst { filter } = useContext(MainContext);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchCardsByColumnId(id));\n\t}, [dispatch, id]);\n\n\tconst handleDeleteColumn = columnId => {\n\t\tdispatch(delColumn(columnId));\n\t};\n\n\tconst deleteCard = id => {\n\t\tdispatch(delCard(id));\n\t};\n\n\tconst editCard = data => {\n\t\tsetCardForEditing(data);\n\t\tsetIsOpen(true);\n\t};\n\n\tconst onRequestClose = () => {\n\t\tsetCardForEditing(null);\n\t\tsetIsOpen(false);\n\t};\n\n\tconst cardForColumn = cards.filter(card => card.columnId === id && card.priority === filter);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<List>\n\t\t\t\t<Title>\n\t\t\t\t\t{name}\n\t\t\t\t\t<IconsContainer>\n\t\t\t\t\t\t<EditColumn type='button' width='16' height='16'>\n\t\t\t\t\t\t\t<use xlinkHref={`${icon}#icon-edit`} />\n\t\t\t\t\t\t</EditColumn>\n\t\t\t\t\t\t<DelColumn\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\twidth='16'\n\t\t\t\t\t\t\theight='16'\n\t\t\t\t\t\t\tonClick={() => handleDeleteColumn(id)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<use xlinkHref={`${icon}#icon-delete`} />\n\t\t\t\t\t\t</DelColumn>\n\t\t\t\t\t</IconsContainer>\n\t\t\t\t</Title>\n\t\t\t</List>\n\t\t\t<ListTasks>\n\t\t\t\t{cards.map(item => (\n\t\t\t\t\t<Card\n\t\t\t\t\t\tkey={item._id}\n\t\t\t\t\t\titem={item}\n\t\t\t\t\t\tdeleteCard={() => deleteCard(item?._id)}\n\t\t\t\t\t\teditCard={() => editCard(item)}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</ListTasks>\n\t\t\t<Button type='button' onClick={() => setIsOpen(true)}>\n\t\t\t\t<IconWrapper>\n\t\t\t\t\t<AddIcon name='add-board' />\n\t\t\t\t</IconWrapper>\n\t\t\t\t<ButtonText>{!cardForColumn.length ? 'Add card' : 'Add another card'}</ButtonText>\n\t\t\t</Button>\n\n\t\t\t<AddCardModal\n\t\t\t\tisOpen={isOpen}\n\t\t\t\tonRequestClose={onRequestClose}\n\t\t\t\tcolumnId={column._id}\n\t\t\t\tcardForEditing={cardForEditing}\n\t\t\t/>\n\t\t</Wrapper>\n\t);\n};\n","/** @format */\n\nimport styled from '@emotion/styled';\n\nexport const Styled = styled.ul`\n\tdisplay: flex;\n\tgap: 20px;\n\tmargin: 0;\n\tpadding: 0;\n`;\n\nexport const List = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\tflex-direction: column;\n\tmargin: 0;\n\tpadding: 0;\n\tgap: 8px;\n\theight: calc(100vh - 318px);\n\toverflow-y: auto;\n`;\n","/** @format */\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchColumnsByIdBoards } from 'redux/columns/operations';\nimport { columnsState } from 'redux/columns/selectors';\nimport { Column } from 'components/Column/Column';\nimport { Styled } from './Columns.styled';\n\nexport const Columns = ({ board }) => {\n  const dispatch = useDispatch();\n\n\tconst allColumns = useSelector(columnsState);\n\t\n\tconsole.log(allColumns);\n\t\n  useEffect(() => {\n    dispatch(fetchColumnsByIdBoards(board));\n  }, [dispatch, board]);\n\n  return (\n    <Styled>\n      {allColumns.map((item) => (\n        <Column name={item.name} id={item._id} key={item._id} column={item}  />\n      ))}\n    </Styled>\n  );\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { BoardContainer, BtnAddColumn, SvagAddColumn, StyledIconAdd } from './MainDashboard.styled';\nimport { AddColumnModal } from 'components/Modal';\nimport { Columns } from '../Columns/Columns';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = () => {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst { board } = useParams();\n\tconst handleOpenModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<BoardContainer>\n\t\t\t<Columns board={board} />\n\t\t\t<BtnAddColumn type='button' onClick={handleOpenModal}>\n\t\t\t\t<StyledIconAdd>\n\t\t\t\t\t<SvagAddColumn name='plus' />\n\t\t\t\t</StyledIconAdd>\n\t\t\t\t<span>Add another column</span>\n\t\t\t</BtnAddColumn>\n\t\t\t<AddColumnModal board={board} isOpen={isModalOpen} setIsOpen={setIsModalOpen} />\n\t\t</BoardContainer>\n\t);\n};\n\nexport default MainDashboard;\n","/** @format */\n\nimport styled from 'styled-components';\n\nexport const HeaderDashboardContainer = styled.div`\n\tpadding: 0px 24px;\n\tfont-weight: 500;\n\tfont-size: 18px;\n\tdisplay: flex;\n`;\n\nexport const Title = styled.h3`\n\tpadding: 0;\n\tmargin: 0;\n\tcolor: ${props => props.theme.help.modalTextMain};\n\tfont-size: 18px;\n\tfont-weight: 500;\n\tline-height: 27px;\n\tletter-spacing: -0.02em;\n\ttext-align: left;\n`;\n","/** @format */\n\nimport { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n\treturn (\n\t\t<HeaderDashboardContainer>\n\t\t\t<Title>{title}</Title>\n\t\t</HeaderDashboardContainer>\n\t);\n};\n","/** @format */\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MainComponent } from 'components/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport MainDashboard from 'components/ScreenPage/MainDashboard/MainDashboard';\nimport { HeaderDashboard } from 'components/ScreenPage/HeaderDashboard/HeaderDashboard';\nimport { SayNameBoard } from 'components/Helpers';\n\nfunction MainTodosPage() {\n\tconst { board } = useParams();\n\tconst nameBoard = SayNameBoard(board);\n\n\treturn (\n\t\t<>\n\t\t\t<FilterBtn />\n\t\t\t{nameBoard && <HeaderDashboard title={nameBoard} />}\n\t\t\t<MainComponent>{board && <MainDashboard />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","MainComponent","_ref","children","setIsOpenAddBoard","useContext","MainContext","_jsx","_Fragment","_jsxs","onClick","BoardContainer","div","BtnAddColumn","button","help","modalTextMain","profile","background","StyledIconAdd","_templateObject3","addcolum","plusBackground","SvagAddColumn","Icon","_templateObject4","plusColor","columnsState","state","columns","items","Wrapper","li","Title","colum","textMain","List","ListTasks","IconsContainer","_templateObject5","EditColumn","svg","_templateObject6","DelColumn","_templateObject7","TooltipWrapper","isOpen","TooltipContent","modal","backgroundMain","TooltipButton","sidebar","projectIcon","onRequestClose","setSelectedOption","useState","handleOptionClick","option","name","CardContainer","PriorityLine","CardContent","TextContent","h4","DescriptionText","Info","border","Priority","_templateObject8","InfoTitle","_templateObject9","PriorityLevel","_templateObject10","Dedline","_templateObject11","Date","_templateObject12","BellIcon","_templateObject13","IconContainer","_templateObject14","MoveIcon","_templateObject15","EditIcon","_templateObject16","DelIcon","_templateObject17","Card","item","priority","deadline","isTooltipOpen","setIsTooltipOpen","closeTooltip","console","log","Tooltip","Column","id","column","setIsOpen","cardForEditing","setCardForEditing","cards","useSelector","cardsState","dispatch","useDispatch","filter","useEffect","fetchCardsByColumnId","cardForColumn","card","columnId","type","width","height","xlinkHref","concat","icon","handleDeleteColumn","delColumn","map","deleteCard","delCard","_id","editCard","Button","IconWrapper","AddIcon","ButtonText","length","AddCardModal","Styled","ul","Columns","board","allColumns","fetchColumnsByIdBoards","MainDashboard","isModalOpen","setIsModalOpen","useParams","handleOpenModal","AddColumnModal","HeaderDashboardContainer","h3","HeaderDashboard","title","nameBoard","SayNameBoard","FilterBtn"],"sourceRoot":""}
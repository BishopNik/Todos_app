{"version":3,"file":"static/js/80.102f3d30.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","redux/columns/selectors.js","components/Column/Column.styled.jsx","components/Card/Card.styled.jsx","components/Card/Card.jsx","components/Column/Column.jsx","components/ScreenPage/Columns.styled.js","components/ScreenPage/Columns.jsx","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React, { useContext } from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { MainContext } from 'components/Helpers';\n\n// import { useDispatch } from 'react-redux';\n// import { boardsSlice } from 'redux/boards/boardsSlice';\n\nexport function MainComponent({ children }) {\n\t// const dispatch = useDispatch();\n\tconst { setIsOpenAddBoard } = useContext(MainContext);\n\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetIsOpenAddBoard(true);\n\t\t\t\t\t\t\t// dispatch(\n\t\t\t\t\t\t\t// \tboardsSlice.actions.openCreateEditBoardModal({ isOpen: true })\n\t\t\t\t\t\t\t// );\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  overflow-y: hidden;\n  overflow-x: auto;\n  display: flex;\n  gap: 20px;\n  padding: 0px 24px;\n}\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: ${props => props.theme.help.modalTextMain};\n  background-color: ${props => props.theme.profile.background};\n\n  border: none;\n  cursor: pointer;\n  height: 58px;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: ${props => props.theme.addcolum.plusBackground};\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: ${props => props.theme.addcolum.plusColor};\n`;\n","export const columnsState = state => state.columns.items;\n\nexport const columnsLoading = state => state.columns.isLoading;\n\nexport const columnsError = state => state.columns.error;","/** @format */\n\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 335px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Title = styled.span`\n  color: ${props => props.theme.colum.textMain};\n  font-size: 18px;\n  border-radius: 8px;\n  width: 334px;\n  padding: 14px 24px;\n  background-color: #121212;\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: 500;\n  display: flex;\n  height: 58px;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const List = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  gap: 8px;\n  padding-right: 8px;\n  height: calc(100vh - 250px);\n  overflow-y: auto;\n`;\nexport const IconsContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: auto;\n`;\nexport const EditColumn = styled.svg`\n  stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n`;\nexport const DelColumn = styled.svg`\n  stroke: rgba(255, 255, 255, 0.5);\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\nimport Icon from '../Icon';\n\nexport const CardContainer = styled.div`\n  width: 335px;\n  height: 154px;\n  display: flex;\n  flex-direction: row;\n  background-color: ${props => props.theme.sidebar.background};\n  border-radius: 7px;\n  overflow: hidden;\n`;\n\nexport const PriorityLine = styled.div`\n  width: 4px;\n  background-color: rgba(224, 156, 181, 1);\n`;\n\nexport const CardContent = styled.div`\n  width: 331px;\n  padding: 14px 20px 14px 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const TextContent = styled.div``;\n\nexport const Title = styled.h4`\n  font-size: 14px;\n  font-weight: bold;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.sidebar.textMain};\n  margin: 0;\n`;\n\nexport const DescriptionText = styled.p`\n  margin: 0;\n  font-size: 12px;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  line-height: 1.45;\n  color: ${props => props.theme.sidebar.textSecondary};\n  margin-top: 8px;\n  width: 290px;\n  height: 38px;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: default;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  border-top: solid 1px ${props => props.theme.sidebar.border};\n  height: 45px;\n  align-items: flex-end;\n`;\n\nexport const Priority = styled.div`\n  height: 31px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const InfoTitle = styled.p`\n  font-size: 8px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  cursor: default;\n  color: ${props => props.theme.sidebar.textSecondary};\n`;\n\nexport const PriorityLevel = styled.p`\n  position: relative;\n  font-size: 10px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  color: ${props => props.theme.sidebar.textMain};\n  padding-left: 16px;\n  cursor: default;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 50%;\n    transform: translateY(-50%);\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: rgba(224, 156, 181, 1);\n  }\n`;\n\nexport const Dedline = styled.div`\n  height: 31px;\n  margin-left: 14px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  gap: 4px;\n`;\n\nexport const Date = styled.p`\n  font-size: 10px;\n  margin: 0;\n  font-weight: normal;\n  letter-spacing: -0.02em;\n  cursor: default;\n  color: ${props => props.theme.sidebar.textMain};\n`;\n\nexport const BellIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  margin-left: auto;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: 13px;\n`;\n\nexport const MoveIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n\nexport const EditIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n\nexport const DelIcon = styled(Icon)`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => props.theme.sidebar.projectIcon};\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    stroke: ${props => props.theme.sidebar.textAccent};\n  }\n`;\n","import React from 'react';\n\nimport {\n  CardContainer,\n  PriorityLine,\n  CardContent,\n  TextContent,\n  Title,\n  DescriptionText,\n  Info,\n  Priority,\n  PriorityLevel,\n  Dedline,\n  InfoTitle,\n  Date,\n  IconContainer,\n  BellIcon,\n  MoveIcon,\n  EditIcon,\n  DelIcon,\n} from './Card.styled';\n\nexport const Card = ({ item }) => {\n  const { name, priority, deadline } = item;\n\n  return (\n    <>\n      <CardContainer>\n        <PriorityLine />\n        <CardContent>\n          <TextContent>\n            <Title>{name}</Title>\n            <DescriptionText>\n              Conduct in-depth research and analysis on the project's topic,\n              gather relevant data, and identify key insights to inform\n              decision-making and project planning.\n            </DescriptionText>\n          </TextContent>\n          <Info>\n            <Priority>\n              <InfoTitle>Priority</InfoTitle>\n              <PriorityLevel>{priority}</PriorityLevel>\n            </Priority>\n            <Dedline>\n              <InfoTitle>Deadline</InfoTitle>\n              <Date>{deadline}</Date>\n            </Dedline>\n            <BellIcon name=\"bell\" />\n            <IconContainer>\n              <MoveIcon name=\"process-task\" />\n              <EditIcon name=\"edit\" />\n              <DelIcon name=\"delete\" />\n            </IconContainer>\n          </Info>\n        </CardContent>\n      </CardContainer>\n    </>\n  );\n};\n","/** @format */\n\nimport React, { useState, useEffect } from 'react';\n\nimport {\n  Wrapper,\n  Title,\n  IconsContainer,\n  EditColumn,\n  DelColumn,\n  List,\n} from './Column.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cardsState } from 'redux/cards/selectors';\nimport { fetchCardsByColumnId } from 'redux/cards/operations';\n\nimport {\n  Button,\n  ButtonText,\n  IconWrapper,\n  AddIcon,\n} from '../../components/Modal/CreateNewBoardModal/CreateNewBoardModal.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nimport { AddCardModal } from 'components/Modal';\nimport { Card } from 'components/Card/Card';\nimport { delColumn } from 'redux/columns/operations';\n\nexport const Column = ({ name, id }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const cards = useSelector(cardsState);\n  const dispatch = useDispatch();\n\n  const cardForColumn = cards.filter(card => card.columnId === id);\n\n  useEffect(() => {\n    dispatch(fetchCardsByColumnId(id));\n  }, [dispatch, id]);\n  const handleDeleteColumn = columnId => {\n    dispatch(delColumn(columnId));\n  };\n\n  return (\n    <Wrapper>\n      <List>\n        <Title>\n          {name}\n          <IconsContainer>\n            <EditColumn type=\"button\" width=\"16\" height=\"16\">\n              <use xlinkHref={`${icon}#icon-edit`} />\n            </EditColumn>\n            <DelColumn\n              type=\"button\"\n              width=\"16\"\n              height=\"16\"\n              onClick={() => handleDeleteColumn(id)}\n            >\n              <use xlinkHref={`${icon}#icon-delete`} />\n            </DelColumn>\n          </IconsContainer>\n        </Title>\n      </List>\n\n      {cardForColumn.map(item => (\n        <Card key={item._id} item={item} />\n      ))}\n      <Button type=\"button\" onClick={() => setIsOpen(true)}>\n        <IconWrapper>\n          <AddIcon name=\"add-board\" />\n        </IconWrapper>\n        <ButtonText>\n          {!cardForColumn.length ? 'Add card' : 'Add another card'}\n        </ButtonText>\n      </Button>\n\n      <AddCardModal\n        isOpen={isOpen}\n        onRequestClose={() => setIsOpen(false)}\n        columnId={id}\n      />\n    </Wrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Styled = styled.div`\n  display: flex;\n  gap: 20px;\n`;\nexport const List = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  gap: 8px;\n  padding-right: 8px;\n  height: calc(100vh - 318px);\n  overflow-y: auto;\n`;\n","/** @format */\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchColumnsByIdBoards } from 'redux/columns/operations';\nimport { columnsState } from 'redux/columns/selectors';\nimport { Column } from 'components/Column/Column';\nimport { Styled } from './Columns.styled';\n\nexport const Columns = ({ board }) => {\n  const dispatch = useDispatch();\n\n  const allColumns = useSelector(columnsState);\n\n  useEffect(() => {\n    dispatch(fetchColumnsByIdBoards(board));\n  }, [dispatch, board]);\n\n  console.log('allColumns', allColumns);\n\n  return (\n    <Styled>\n      {allColumns.map(({ _id: id, name }) => (\n        <Column name={name} id={id} key={id} />\n      ))}\n    </Styled>\n  );\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport {\n  BoardContainer,\n  BtnAddColumn,\n  SvagAddColumn,\n  StyledIconAdd,\n} from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\nimport { AddColumnModal } from 'components/Modal';\nimport { Columns } from '../Columns';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { board } = useParams();\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <BoardContainer>\n      <Columns board={board} />\n      <BtnAddColumn type=\"button\" onClick={handleOpenModal}>\n        <StyledIconAdd>\n          <SvagAddColumn width=\"14\" height=\"14\">\n            <use xlinkHref={`${icon}#icon-plus`} />\n          </SvagAddColumn>\n        </StyledIconAdd>\n        <span>Add another column</span>\n      </BtnAddColumn>\n      <AddColumnModal\n        board={board}\n        isOpen={isModalOpen}\n        setIsOpen={setIsModalOpen}\n      />\n    </BoardContainer>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 0px 24px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: ${props => props.theme.help.modalTextMain};\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","/** @format */\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MainComponent } from 'components/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport MainDashboard from 'components/ScreenPage/MainDashboard/MainDashboard';\nimport { HeaderDashboard } from 'components/ScreenPage/HeaderDashboard/HeaderDashboard';\nimport { SayNameBoard } from 'components/Helpers';\n\nfunction MainTodosPage() {\n\tconst { board } = useParams();\n\tconst nameBoard = SayNameBoard(board);\n\n\treturn (\n\t\t<>\n\t\t\t<FilterBtn />\n\t\t\t{nameBoard && <HeaderDashboard title={nameBoard} />}\n\t\t\t<MainComponent>{board && <MainDashboard />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","MainComponent","_ref","children","setIsOpenAddBoard","useContext","MainContext","_jsx","_Fragment","_jsxs","onClick","BoardContainer","div","BtnAddColumn","button","help","modalTextMain","profile","background","StyledIconAdd","_templateObject3","addcolum","plusBackground","SvagAddColumn","svg","_templateObject4","plusColor","columnsState","state","columns","items","Wrapper","Title","colum","textMain","List","IconsContainer","EditColumn","_templateObject5","DelColumn","_templateObject6","CardContainer","sidebar","PriorityLine","CardContent","TextContent","h4","DescriptionText","Info","_templateObject7","border","Priority","_templateObject8","InfoTitle","_templateObject9","PriorityLevel","_templateObject10","Dedline","_templateObject11","Date","_templateObject12","BellIcon","Icon","_templateObject13","projectIcon","IconContainer","_templateObject14","MoveIcon","_templateObject15","EditIcon","_templateObject16","DelIcon","_templateObject17","Card","item","name","priority","deadline","Column","id","isOpen","setIsOpen","useState","cards","useSelector","cardsState","dispatch","useDispatch","cardForColumn","filter","card","columnId","useEffect","fetchCardsByColumnId","type","width","height","xlinkHref","concat","icon","handleDeleteColumn","delColumn","map","_id","Button","IconWrapper","AddIcon","ButtonText","length","AddCardModal","onRequestClose","Styled","Columns","board","allColumns","fetchColumnsByIdBoards","console","log","_ref2","MainDashboard","isModalOpen","setIsModalOpen","useParams","handleOpenModal","AddColumnModal","HeaderDashboardContainer","h3","HeaderDashboard","title","nameBoard","SayNameBoard","FilterBtn"],"sourceRoot":""}
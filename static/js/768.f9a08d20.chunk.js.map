{"version":3,"file":"static/js/768.f9a08d20.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React from 'react';\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\nimport { useDispatch } from 'react-redux';\nimport { boardsSlice } from 'redux/boards/boardsSlice';\n\nexport function MainComponent({ children }) {\n\tconst dispatch = useDispatch();\n\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tdispatch(\n\t\t\t\t\t\t\t\tboardsSlice.actions.openCreateEditBoardModal({ isOpen: true })\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  padding: 0px 24px;\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 14px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: #ffffff;\n  background-color: #121212;\n  border: none;\n  cursor: pointer;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: #ffffff;\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: #121212;\n`;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { BoardContainer, BtnAddColumn, SvagAddColumn, StyledIconAdd } from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nimport { AddColumnModal } from 'components/Modal';\n\nconst MainDashboard = () => {\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\n\tconst handleOpenModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<BoardContainer>\n\t\t\t<BtnAddColumn type='button' onClick={handleOpenModal}>\n\t\t\t\t<StyledIconAdd>\n\t\t\t\t\t<SvagAddColumn width='14' height='14'>\n\t\t\t\t\t\t<use xlinkHref={`${icon}#icon-plus`} />\n\t\t\t\t\t</SvagAddColumn>\n\t\t\t\t</StyledIconAdd>\n\t\t\t\t<span>Add another column</span>\n\t\t\t</BtnAddColumn>\n\t\t\t<AddColumnModal isOpen={isModalOpen} setIsOpen={setIsModalOpen} />{' '}\n\t\t</BoardContainer>\n\t);\n};\n\nexport default MainDashboard;\n","import styled from '@emotion/styled';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 14px 20px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { MainComponent } from 'components/MainComponent';\nimport { FilterBtn } from 'components/Filter';\nimport MainDashboard from 'components/ScreenPage/MainDashboard/MainDashboard';\nimport { HeaderDashboard } from 'components/ScreenPage/HeaderDashboard/HeaderDashboard';\nimport { AddCardModal } from 'components/Modal';\nimport { SayNameBoard } from 'components/Helpers';\n\nfunction MainTodosPage() {\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst { board } = useParams();\n\n\tconst nameBoard = SayNameBoard(board);\n\n\treturn (\n\t\t<>\n\t\t\t<button\n\t\t\t\tonClick={() => setIsOpen(true)}\n\t\t\t\tstyle={{ position: 'absolute', right: '50px', top: '150px' }}\n\t\t\t>\n\t\t\t\tAdd card\n\t\t\t</button>\n\t\t\t<AddCardModal isOpen={isOpen} onRequestClose={() => setIsOpen(false)} />\n\n\t\t\t<FilterBtn />\n\n\t\t\t{nameBoard && <HeaderDashboard title={nameBoard} />}\n\t\t\t<MainComponent>{board && <MainDashboard />}</MainComponent>\n\t\t</>\n\t);\n}\n\nexport default MainTodosPage;\n"],"names":["TextEmptyBoard","styled","p","_templateObject","_taggedTemplateLiteral","props","theme","popup","textSecondary","ButtonCreateBoard","span","_templateObject2","textAccent","MainComponent","_ref","children","dispatch","useDispatch","_jsx","_Fragment","_jsxs","onClick","boardsSlice","actions","openCreateEditBoardModal","isOpen","BoardContainer","div","BtnAddColumn","button","StyledIconAdd","_templateObject3","SvagAddColumn","svg","_templateObject4","MainDashboard","isModalOpen","setIsModalOpen","useState","type","handleOpenModal","width","height","xlinkHref","concat","icon","AddColumnModal","setIsOpen","HeaderDashboardContainer","Title","h3","HeaderDashboard","title","board","useParams","nameBoard","SayNameBoard","style","position","right","top","AddCardModal","onRequestClose","FilterBtn"],"sourceRoot":""}
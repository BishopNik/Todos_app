{"version":3,"file":"static/js/336.bcc3dbf5.chunk.js","mappings":"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","sources":["components/MainComponent/MainComponent.styled.jsx","components/MainComponent/MainComponent.jsx","components/Filter/filters.styled.jsx","components/Filter/ModalFilter/ModalFilter.styled.jsx","components/Filter/ModalFilter/ModalFilter.jsx","components/ScreenPage/HeaderDashboard/HeaderDashboard.styled.js","components/ScreenPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreenPage/MainDashboard/MainDashboard.styled.js","components/ScreenPage/MainDashboard/AddColumnModal/AddColumnModal.styled.js","components/ScreenPage/MainDashboard/AddColumnModal/AddColumnModal.jsx","components/ScreenPage/MainDashboard/MainDashboard.jsx","components/ScreenPage/ScreenPage.jsx","pages/MainTodosPage.jsx"],"sourcesContent":["/** @format */\n\nimport styled from 'styled-components';\nimport Icon from 'components/Icon';\n\nexport const ButtonFilter = styled.button`\n\tposition: absolute;\n\ttop: 14px;\n\tright: 20px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tgap: 8px;\n\tbackground-color: transparent;\n\tborder: none;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\ttop: 20px;\n\t\tright: 32px;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\ttop: 14px;\n\t\tright: 24px;\n\t}\n`;\n\nexport const FiltersIcon = styled(Icon)`\n\twidth: 16px;\n\theight: 16px;\n\tstroke: ${props => props.theme.popup.textMain};\n`;\n\nexport const TextButton = styled.span`\n\tcolor: ${props => props.theme.popup.textMain};\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 500;\n\tline-height: normal;\n\tletter-spacing: -0.28px; \n`;\n\nexport const TextEmptyBoard = styled.p`\n\tmax-width: 100%;\n\twidth: 375px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\tmargin-top: 292px;\n\tpadding: 0 20px;\n\tcolor: ${props => props.theme.popup.textSecondary};\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 1.3;\n\tletter-spacing: -0.02em;\n\ttext-align: center;\n\n\t@media screen and (min-width: 768px) {\n\t\tmargin-top: 408px;\n\t\tpadding: 0;\n\t\twidth: 486px;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 1.3;\n\t\tletter-spacing: -0.02em;\n\t\ttext-align: center;\n\t}\n\n\t@media screen and (min-width: 1440px) {\n\t\tmargin-top: 281px;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonCreateBoard = styled.span`\n\tbackground-color: transparent;\n\tcolor: ${props => props.theme.popup.textAccent};;\n\tfont-size: 12px;\n\tfont-weight: 400;\n\tline-height: 16px;\n\tletter-spacing: -0.2px;\n\ttext-align: center;\n\tcursor: pointer;\n\n\t@media screen and (min-width: 768px) {\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tline-height: 18px;\n\t\tletter-spacing: -0.2px;\n\t\ttext-align: center;\n\t}\n`;\n","/** @format */\n\nimport React from 'react';\n\nimport { TextEmptyBoard, ButtonCreateBoard } from './MainComponent.styled';\n\nfunction MainComponent({ children }) {\n\treturn (\n\t\t<>\n\t\t\t{children ? (\n\t\t\t\t<>{children}</>\n\t\t\t) : (\n\t\t\t\t<TextEmptyBoard>\n\t\t\t\t\tBefore starting your project, it is essential{' '}\n\t\t\t\t\t<ButtonCreateBoard onClick={() => alert('Create board')}>\n\t\t\t\t\t\tto create a board\n\t\t\t\t\t</ButtonCreateBoard>{' '}\n\t\t\t\t\tto visualize and track all the necessary tasks and milestones. This board serves\n\t\t\t\t\tas a powerful tool to organize the workflow and ensure effective collaboration\n\t\t\t\t\tamong team members.\n\t\t\t\t</TextEmptyBoard>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default MainComponent;\n","import styled from \"styled-components\";\n\nexport const FilterBtn = styled.button`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ngap: 8px;\nwidth: 64px;\nheight: 20px;\npadding: 0;\nfont-weight: 500;\nfont-size: 14px;\nletter-spacing: -0.02em;\ncolor: rgba(255, 255, 255, 0.8); \nborder: none;\ncursor: pointer;\n`\n\nexport const FilterIcon = styled.svg`\n    width: 16px;\n    height: 16px;\n`","import styled from \"styled-components\";\n\nexport const customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(78, 74, 72, 0.6)',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nexport const RadioButton = styled.label`\n  display:flex;\n  margin-right: 10px;\n`;\n\nexport const RadioButtonGroup = styled.div`\n  margin-top: 20px;\n`;","import { useState, React } from 'react';\nimport Modal from 'react-modal';\nimport { customStyles, RadioButton, RadioButtonGroup } from './ModalFilter.styled.jsx';\n\nModal.setAppElement('#modal-root');\n\nconst ModalFilter = ({ isModalOpen, setIsModalOpen }) => {\n\n  const [selectedOption, setSelectedOption] = useState('Without priority');\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      onRequestClose={() => setIsModalOpen(false)} \n      style={customStyles}\n      contentLabel=\"onRequestClose\"\n    >\n      <h1>Filters</h1>\n      <button type=\"button\" onClick={() => setIsModalOpen(false)}> \n        X\n      </button>\n      <h2>Label color</h2>\n      <RadioButtonGroup>\n        <RadioButton>\n          <input\n            type=\"radio\"\n            value=\"Without priority\"\n            checked={selectedOption === 'Without priority'}\n            onChange={handleOptionChange}\n          />\n          Without priority\n        </RadioButton>\n        <RadioButton>\n          <input\n            type=\"radio\"\n            value=\"Low\"\n            checked={selectedOption === 'Low'}\n            onChange={handleOptionChange}\n          />\n          Low\n        </RadioButton>\n        <RadioButton>\n          <input\n            type=\"radio\"\n            value=\"Medium\"\n            checked={selectedOption === 'Medium'}\n            onChange={handleOptionChange}\n          />\n          Medium\n        </RadioButton>\n        <RadioButton>\n          <input\n            type=\"radio\"\n            value=\"High\"\n            checked={selectedOption === 'High'}\n            onChange={handleOptionChange}\n          />\n          High\n        </RadioButton>\n      </RadioButtonGroup>\n    </Modal>\n  );\n};\n\nexport default ModalFilter;\n","import styled from '@emotion/styled';\n\nexport const HeaderDashboardContainer = styled.div`\n  width: 100vw;\n  padding: 14px 20px;\n  font-wight: 500;\n  font-size: 18px;\n  display: flex;\n`;\n\nexport const Title = styled.h3`\n  color: #ffffff;\n`;\n","import { HeaderDashboardContainer, Title } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = ({ title }) => {\n  return (\n    <HeaderDashboardContainer>\n      <Title>{title}</Title>\n    </HeaderDashboardContainer>\n  );\n};\n","// MainDashboard.styled.js\nimport styled from 'styled-components';\n\nexport const BoardContainer = styled.div`\n  padding: 0px 24px;\n`;\nexport const BtnAddColumn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 14px 58px;\n  font-size: 14px;\n  font-weight: 500;\n  border-radius: 8px;\n  width: 334px;\n  color: #ffffff;\n  background-color: #121212;\n  border: none;\n  cursor: pointer;\n`;\nexport const StyledIconAdd = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 28px;\n  height: 28px;\n  margin-right: 8px;\n  background-color: #ffffff;\n  border-radius: 8px;\n`;\n\nexport const SvagAddColumn = styled.svg`\n  stroke: #121212;\n`;\n","import styled from '@emotion/styled';\nimport { Form, ErrorMessage, Field } from 'formik';\nimport Icon from '../../../Icon/index';\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const ModalTitle = styled.p`\n  color: #ffffff;\n  font-size: 18px;\n  margin-bottom: 24px;\n`;\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 375px) {\n    width: 100%;\n  }\n  width: 350px;\n  border-radius: 8px;\n  background: #151515;\n  padding: 24px;\n`;\n\nexport const CloseIcon = styled(Icon)`\n  width: 18px;\n  height: 18px;\n  stroke: rgba(255, 255, 255, 1);\n  cursor: pointer;\n`;\n\nexport const StyledFormField = styled(Field)`\n  padding: 14px 18px;\n  background: inherit;\n  border-radius: 8px;\n  border: 1px solid rgb(190, 219, 176, 0.5);\n  color: #ffffff;\n  margin-bottom: 24px;\n`;\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: red;\n`;\nexport const AddIcon = styled(Icon)`\n  width: 14px;\n  height: 14px;\n  stroke: rgba(255, 255, 255, 1);\n  cursor: pointer;\n`;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid black;\n  border-radius: 5px;\n  width: 28px;\n  height: 28px;\n  background-color: black;\n  margin-right: 8px;\n`;\nexport const BtnAdd = styled.button`\n  display: flex;\n  width: 100%;\n  padding: 14px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: #bedbb0;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background: rgba(157, 200, 136, 1);\n  }\n`;\n","import React, { useState } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Modal from 'react-modal';\n\nimport {\n  ModalTitle,\n  StyledForm,\n  StyledFormField,\n  StyledErrorMessage,\n  BtnAdd,\n  HeaderContainer,\n  CloseIcon,\n  IconWrapper,\n  AddIcon,\n} from './AddColumnModal.styled';\nimport toast from 'react-hot-toast';\n\nModal.setAppElement('#modal-root');\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(78, 74, 72, 0.6)',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    padding: 0,\n    borderRadius: 5,\n    border: '1px solid #151515',\n    backgroundColor: '#151515',\n    boxShadow: '0px 4px 15px rgba(0, 0, 0, 0.2)',\n  },\n};\n\nconst initialValues = {\n  title: '',\n};\n\nconst columnSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n\nexport const AddColumnModal = ({ isOpen, setIsOpen }) => {\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const handleSubmit = ({ title }, { setSubmitting }) => {\n    setSubmitting(true);\n\n    if (!title.trim()) {\n      setErrorMessage('Title is required');\n      setSubmitting(false);\n      return;\n    }\n    toast.success('Column created');\n    setIsOpen(false); // Corrected onClose to setIsOpen\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={() => setIsOpen(false)}\n      style={customStyles}\n      contentLabel=\"onRequestClose\"\n    >\n      <Formik\n        initialValues={initialValues}\n        validationSchema={columnSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ isSubmitting }) => (\n          <StyledForm autoComplete=\"off\">\n            <HeaderContainer>\n              <ModalTitle>Add column</ModalTitle>\n              <CloseIcon name=\"close\" onClick={() => setIsOpen(false)} />\n            </HeaderContainer>\n\n            <StyledFormField\n              autoFocus\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Title\"\n            />\n            <StyledErrorMessage name=\"title\" component=\"div\" />\n            <BtnAdd type=\"submit\" disabled={isSubmitting}>\n              <IconWrapper>\n                <AddIcon name=\"add-board\" />\n              </IconWrapper>\n              Add\n            </BtnAdd>\n            {errorMessage && (\n              <StyledErrorMessage>{errorMessage}</StyledErrorMessage>\n            )}\n          </StyledForm>\n        )}\n      </Formik>\n    </Modal>\n  );\n};\n","import React, { useState } from 'react';\nimport {\n  BoardContainer,\n  BtnAddColumn,\n  SvagAddColumn,\n  StyledIconAdd,\n} from './MainDashboard.styled';\nimport icon from 'components/Icon/icon-spraite.svg';\n\nimport { AddColumnModal } from 'components/ScreenPage/MainDashboard/AddColumnModal/AddColumnModal';\n\nconst MainDashboard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <BoardContainer>\n      <BtnAddColumn type=\"button\" onClick={handleOpenModal}>\n        <StyledIconAdd>\n          <SvagAddColumn width=\"14\" height=\"14\">\n            <use xlinkHref={`${icon}#icon-plus`} />\n          </SvagAddColumn>\n        </StyledIconAdd>\n        <span>Add another column</span>\n      </BtnAddColumn>\n      <AddColumnModal isOpen={isModalOpen} setIsOpen={setIsModalOpen} />{' '}\n    </BoardContainer>\n  );\n};\n\nexport default MainDashboard;\n","\nimport { useParams } from 'react-router-dom';\nimport { HeaderDashboard } from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\n\nconst ScreenPage = () => {\n  const { boardName } = useParams();\n\n  return (\n    <>\n      <HeaderDashboard title={boardName} />\n      <MainDashboard/>\n    </>\n  );\n};\nexport default ScreenPage;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MainComponent from 'components/MainComponent/MainComponent';\nimport { ModalFilter } from 'components/Filter';\nimport ScreenPage from 'components/ScreenPage/ScreenPage';\nimport {\n  ButtonFilter,\n  FiltersIcon,\n  TextButton,\n} from 'components/MainComponent/MainComponent.styled';\n\nfunction MainTodosPage() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { board } = useParams();\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  return (\n    <>\n      <ButtonFilter type=\"button\" onClick={openModal}>\n        <FiltersIcon name=\"filters\" />\n        <TextButton>Filters</TextButton>\n      </ButtonFilter>\n      <ModalFilter isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\n      <MainComponent>{board && <ScreenPage />}</MainComponent>\n    </>\n  );\n}\n\nexport default MainTodosPage;\n"],"names":["ButtonFilter","styled","button","_templateObject","_taggedTemplateLiteral","FiltersIcon","Icon","_templateObject2","props","theme","popup","textMain","TextButton","span","_templateObject3","TextEmptyBoard","p","_templateObject4","textSecondary","ButtonCreateBoard","_templateObject5","textAccent","_ref","children","_jsx","_Fragment","_jsxs","onClick","alert","svg","customStyles","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","RadioButton","label","RadioButtonGroup","div","Modal","isModalOpen","setIsModalOpen","selectedOption","setSelectedOption","useState","handleOptionChange","e","target","value","isOpen","onRequestClose","style","contentLabel","type","checked","onChange","HeaderDashboardContainer","Title","h3","HeaderDashboard","title","BoardContainer","BtnAddColumn","StyledIconAdd","SvagAddColumn","HeaderContainer","ModalTitle","StyledForm","Form","CloseIcon","StyledFormField","Field","StyledErrorMessage","ErrorMessage","_templateObject6","AddIcon","_templateObject7","IconWrapper","_templateObject8","BtnAdd","_templateObject9","padding","borderRadius","border","boxShadow","initialValues","columnSchema","Yup","shape","required","AddColumnModal","setIsOpen","errorMessage","setErrorMessage","Formik","validationSchema","onSubmit","handleSubmit","_ref2","_ref3","setSubmitting","trim","toast","success","_ref4","isSubmitting","autoComplete","name","autoFocus","placeholder","component","disabled","MainDashboard","handleOpenModal","width","height","xlinkHref","concat","icon","ScreenPage","boardName","useParams","board","openModal","ModalFilter","MainComponent"],"sourceRoot":""}